{
  "url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/compare/0.29...master",
  "html_url": "https://github.com/AllTheHaxx/AllTheHaxx/compare/0.29...master",
  "permalink_url": "https://github.com/AllTheHaxx/AllTheHaxx/compare/AllTheHaxx:a26a883...AllTheHaxx:7507f7d",
  "diff_url": "https://github.com/AllTheHaxx/AllTheHaxx/compare/0.29...master.diff",
  "patch_url": "https://github.com/AllTheHaxx/AllTheHaxx/compare/0.29...master.patch",
  "base_commit": {
    "sha": "a26a883e6bfcd9bac39281065bbf7cad4c1a0155",
    "commit": {
      "author": {
        "name": "Henningstone",
        "email": "Henningstone@users.noreply.github.com",
        "date": "2017-02-10T23:28:04Z"
      },
      "committer": {
        "name": "Henningstone",
        "email": "Henningstone@users.noreply.github.com",
        "date": "2017-02-10T23:28:04Z"
      },
      "message": "0.29",
      "tree": {
        "sha": "81ff09f387e0407f8c42b7582029342b910678a5",
        "url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/git/trees/81ff09f387e0407f8c42b7582029342b910678a5"
      },
      "url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/git/commits/a26a883e6bfcd9bac39281065bbf7cad4c1a0155",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/commits/a26a883e6bfcd9bac39281065bbf7cad4c1a0155",
    "html_url": "https://github.com/AllTheHaxx/AllTheHaxx/commit/a26a883e6bfcd9bac39281065bbf7cad4c1a0155",
    "comments_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/commits/a26a883e6bfcd9bac39281065bbf7cad4c1a0155/comments",
    "author": {
      "login": "Henningstone",
      "id": 9981005,
      "avatar_url": "https://avatars1.githubusercontent.com/u/9981005?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Henningstone",
      "html_url": "https://github.com/Henningstone",
      "followers_url": "https://api.github.com/users/Henningstone/followers",
      "following_url": "https://api.github.com/users/Henningstone/following{/other_user}",
      "gists_url": "https://api.github.com/users/Henningstone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Henningstone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Henningstone/subscriptions",
      "organizations_url": "https://api.github.com/users/Henningstone/orgs",
      "repos_url": "https://api.github.com/users/Henningstone/repos",
      "events_url": "https://api.github.com/users/Henningstone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Henningstone/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Henningstone",
      "id": 9981005,
      "avatar_url": "https://avatars1.githubusercontent.com/u/9981005?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Henningstone",
      "html_url": "https://github.com/Henningstone",
      "followers_url": "https://api.github.com/users/Henningstone/followers",
      "following_url": "https://api.github.com/users/Henningstone/following{/other_user}",
      "gists_url": "https://api.github.com/users/Henningstone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Henningstone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Henningstone/subscriptions",
      "organizations_url": "https://api.github.com/users/Henningstone/orgs",
      "repos_url": "https://api.github.com/users/Henningstone/repos",
      "events_url": "https://api.github.com/users/Henningstone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Henningstone/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "631c864f91df90245332f96c00d740569a7f8927",
        "url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/commits/631c864f91df90245332f96c00d740569a7f8927",
        "html_url": "https://github.com/AllTheHaxx/AllTheHaxx/commit/631c864f91df90245332f96c00d740569a7f8927"
      }
    ]
  },
  "merge_base_commit": {
    "sha": "a26a883e6bfcd9bac39281065bbf7cad4c1a0155",
    "commit": {
      "author": {
        "name": "Henningstone",
        "email": "Henningstone@users.noreply.github.com",
        "date": "2017-02-10T23:28:04Z"
      },
      "committer": {
        "name": "Henningstone",
        "email": "Henningstone@users.noreply.github.com",
        "date": "2017-02-10T23:28:04Z"
      },
      "message": "0.29",
      "tree": {
        "sha": "81ff09f387e0407f8c42b7582029342b910678a5",
        "url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/git/trees/81ff09f387e0407f8c42b7582029342b910678a5"
      },
      "url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/git/commits/a26a883e6bfcd9bac39281065bbf7cad4c1a0155",
      "comment_count": 0
    },
    "url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/commits/a26a883e6bfcd9bac39281065bbf7cad4c1a0155",
    "html_url": "https://github.com/AllTheHaxx/AllTheHaxx/commit/a26a883e6bfcd9bac39281065bbf7cad4c1a0155",
    "comments_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/commits/a26a883e6bfcd9bac39281065bbf7cad4c1a0155/comments",
    "author": {
      "login": "Henningstone",
      "id": 9981005,
      "avatar_url": "https://avatars1.githubusercontent.com/u/9981005?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Henningstone",
      "html_url": "https://github.com/Henningstone",
      "followers_url": "https://api.github.com/users/Henningstone/followers",
      "following_url": "https://api.github.com/users/Henningstone/following{/other_user}",
      "gists_url": "https://api.github.com/users/Henningstone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Henningstone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Henningstone/subscriptions",
      "organizations_url": "https://api.github.com/users/Henningstone/orgs",
      "repos_url": "https://api.github.com/users/Henningstone/repos",
      "events_url": "https://api.github.com/users/Henningstone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Henningstone/received_events",
      "type": "User",
      "site_admin": false
    },
    "committer": {
      "login": "Henningstone",
      "id": 9981005,
      "avatar_url": "https://avatars1.githubusercontent.com/u/9981005?v=3",
      "gravatar_id": "",
      "url": "https://api.github.com/users/Henningstone",
      "html_url": "https://github.com/Henningstone",
      "followers_url": "https://api.github.com/users/Henningstone/followers",
      "following_url": "https://api.github.com/users/Henningstone/following{/other_user}",
      "gists_url": "https://api.github.com/users/Henningstone/gists{/gist_id}",
      "starred_url": "https://api.github.com/users/Henningstone/starred{/owner}{/repo}",
      "subscriptions_url": "https://api.github.com/users/Henningstone/subscriptions",
      "organizations_url": "https://api.github.com/users/Henningstone/orgs",
      "repos_url": "https://api.github.com/users/Henningstone/repos",
      "events_url": "https://api.github.com/users/Henningstone/events{/privacy}",
      "received_events_url": "https://api.github.com/users/Henningstone/received_events",
      "type": "User",
      "site_admin": false
    },
    "parents": [
      {
        "sha": "631c864f91df90245332f96c00d740569a7f8927",
        "url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/commits/631c864f91df90245332f96c00d740569a7f8927",
        "html_url": "https://github.com/AllTheHaxx/AllTheHaxx/commit/631c864f91df90245332f96c00d740569a7f8927"
      }
    ]
  },
  "status": "ahead",
  "ahead_by": 58,
  "behind_by": 0,
  "total_commits": 58,
  "commits": [],
  "files": [
    {
      "sha": "36f3fd09c15f1fa45084ac652df8dcfd1595c207",
      "filename": ".gitignore",
      "status": "modified",
      "additions": 5,
      "deletions": 1,
      "changes": 6,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/.gitignore",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/.gitignore",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/.gitignore?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -61,7 +61,11 @@ luacert*\n *.pdf\n *.key\n \n-autoexec.cfg\n+/*.svg\n+/callgrind.out.*\n+\n+/autoexec.cfg\n+/storage.cfg\n \n /DDNet*\n /AllTheHaxx*"
    },
    {
      "sha": "22687c85cf8bf3be6a527552aed58581b0b1cfab",
      "filename": "CMakeLists.txt",
      "status": "modified",
      "additions": 16,
      "deletions": 8,
      "changes": 24,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/CMakeLists.txt",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/CMakeLists.txt",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/CMakeLists.txt?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -1,7 +1,7 @@\n cmake_minimum_required(VERSION 3.4)\n project(AllTheHaxx)\n \n-set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n+#set(CMAKE_CXX_FLAGS \"${CMAKE_CXX_FLAGS} -std=c++11\")\n add_definitions(\"-DCONF_FAMILY_UNIX\")\n add_definitions(\"-DCONF_DEBUG\")\n add_definitions(\"-DCONF_SPOOFING\")\n@@ -399,8 +399,8 @@ set(SOURCE_FILES\n     src/game/client/components/menus.cpp\n     src/game/client/components/gametexture.cpp\n     src/game/client/components/luarender.cpp\n-    src/game/client/components/fontmgr.h\n-    src/game/client/components/ghost.h\n+        src/game/client/components/fontmgr.h\n+        src/game/client/components/ghost.h\n     src/game/client/components/console.cpp\n     src/game/client/components/drawing.cpp\n     src/game/client/components/debughud.cpp\n@@ -428,15 +428,15 @@ set(SOURCE_FILES\n     src/game/client/components/maplayers.h\n     src/game/client/components/spoofremote.cpp\n     src/game/client/components/identity.h\n-    src/game/client/components/menus_identity.cpp\n-    src/game/client/components/menus_settings.cpp\n+        src/game/client/components/menus_settings/settings_identity.cpp\n+    src/game/client/components/menus_settings/settings.cpp\n     src/game/client/components/astar.h\n     src/game/client/components/particles.cpp\n     src/game/client/components/menus_manual.cpp\n     src/game/client/components/emoticon.h\n     src/game/client/components/menus_hotbar.cpp\n     src/game/client/components/scoreboard.cpp\n-    src/game/client/components/fontmgr.cpp\n+        src/game/client/components/fontmgr.cpp\n     src/game/client/components/sounds.cpp\n     src/game/client/components/menus_demo.cpp\n     src/game/client/components/translator.h\n@@ -532,6 +532,14 @@ set(SOURCE_FILES\n     src/versionsrv/mapversions.h\n     src/versionsrv/versionsrv.cpp\n     src/versionsrv/versionsrv.h\n-)\n-\n+    src/game/client/components/menus_settings/settings_general.cpp\n+    src/game/client/components/menus_settings/settings_player.cpp\n+    src/game/client/components/menus_settings/settings_tee.cpp\n+    src/game/client/components/menus_settings/settings_lua.cpp\n+    src/game/client/components/menus_settings/settings_controls.cpp\n+    src/game/client/components/menus_settings/settings_graphics.cpp\n+    src/game/client/components/menus_settings/settings_sound.cpp\n+    src/game/client/components/menus_settings/settings_appearance.cpp\n+    src/game/client/components/menus_settings/settings_hud.cpp\n+        )\n add_executable(AllTheHaxx ${SOURCE_FILES})"
    },
    {
      "sha": "568cd31f870c7918958ab3a8ebb712af08b9afe1",
      "filename": "Lua-Scripts",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": null,
      "raw_url": null,
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/Lua-Scripts?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -1 +1 @@\n-Subproject commit 331c90f090f77921aa10c68b441b0bc5170def9d\n+Subproject commit 568cd31f870c7918958ab3a8ebb712af08b9afe1"
    },
    {
      "sha": "f8d81601eeea5e11e6da256fbca18a9e80d49eed",
      "filename": "data/countryflags/PS.png",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/countryflags/PS.png",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/countryflags/PS.png",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/countryflags/PS.png?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "3010160253b239ec95620af6504bb4b2b5f6d790",
      "filename": "data/countryflags/index.txt",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/countryflags/index.txt",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/countryflags/index.txt",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/countryflags/index.txt?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -567,6 +567,9 @@ PT\n PR\r\n == 630\r\n \r\n+PS\r\n+== 275\r\n+\r\n QA\r\n == 634\r\n \r"
    },
    {
      "sha": "2b901438c8c685644dfb0cab05544159866d0d9b",
      "filename": "data/editor/debug_ddnet_entities.png",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/editor/debug_ddnet_entities.png",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/editor/debug_ddnet_entities.png",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/editor/debug_ddnet_entities.png?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "6878c6dead15ca4f2b5579402b50139b83b22a60",
      "filename": "data/editor/tblock_entities.png",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/editor/tblock_entities.png",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/editor/tblock_entities.png",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/editor/tblock_entities.png?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "previous_filename": "data/editor/ouBlock_entities.png"
    },
    {
      "sha": "1d291325def6bbd69dfca3684d1f054d22746c6f",
      "filename": "data/fonts/basic/DejaVu Sans Condensed/r.ttf",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVu%20Sans%20Condensed/r.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVu%20Sans%20Condensed/r.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/DejaVu%20Sans%20Condensed/r.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "previous_filename": "data/fonts/DejaVu Sans Condensed.ttf"
    },
    {
      "sha": "66027ed46efce402906354f43b5061c5875cd7d4",
      "filename": "data/fonts/basic/DejaVuSans/DejaVuSans-Bold.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSans/DejaVuSans-Bold.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSans/DejaVuSans-Bold.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/DejaVuSans/DejaVuSans-Bold.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "0d941cba739392312dab77f980c70835c746bdfb",
      "filename": "data/fonts/basic/DejaVuSans/DejaVuSans-BoldItalic.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSans/DejaVuSans-BoldItalic.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSans/DejaVuSans-BoldItalic.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/DejaVuSans/DejaVuSans-BoldItalic.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "3f4e423da42eff32691fa370e756a27ea1e4e9f4",
      "filename": "data/fonts/basic/DejaVuSans/DejaVuSans-Italic.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSans/DejaVuSans-Italic.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSans/DejaVuSans-Italic.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/DejaVuSans/DejaVuSans-Italic.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "39a60f4033601edf744a63a83feccd2a7f6ba39d",
      "filename": "data/fonts/basic/DejaVuSans/DejaVuSans.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSans/DejaVuSans.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSans/DejaVuSans.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/DejaVuSans/DejaVuSans.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "444c22d6b787837285d94dc9aa3c02f3ad287180",
      "filename": "data/fonts/basic/DejaVuSansCJKName/r.ttf",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSansCJKName/r.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSansCJKName/r.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/DejaVuSansCJKName/r.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "previous_filename": "data/fonts/DejaVuSansCJKName.ttf"
    },
    {
      "sha": "93887bf4120b5f0ee3d1b6557ddc6fdb57db93ea",
      "filename": "data/fonts/basic/DejaVuSerif/DejaVuSerif-Bold.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSerif/DejaVuSerif-Bold.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSerif/DejaVuSerif-Bold.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/DejaVuSerif/DejaVuSerif-Bold.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "2b0211641d2f1d4bb0fa5908dfb251fd8658ad6b",
      "filename": "data/fonts/basic/DejaVuSerif/DejaVuSerif-BoldItalic.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSerif/DejaVuSerif-BoldItalic.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSerif/DejaVuSerif-BoldItalic.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/DejaVuSerif/DejaVuSerif-BoldItalic.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "3edbc7617b5265805595f0d0b9c55499be887827",
      "filename": "data/fonts/basic/DejaVuSerif/DejaVuSerif-Italic.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSerif/DejaVuSerif-Italic.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSerif/DejaVuSerif-Italic.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/DejaVuSerif/DejaVuSerif-Italic.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "2430e2f7d31e1958831781a3de58a5510252aa04",
      "filename": "data/fonts/basic/DejaVuSerif/DejaVuSerif.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSerif/DejaVuSerif.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSerif/DejaVuSerif.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/DejaVuSerif/DejaVuSerif.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "fc32798245fa1f392fdc3cc2e66a80755aca4e77",
      "filename": "data/fonts/basic/DejaVuSerifCondensed/DejaVuSerifCondensed-Bold.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSerifCondensed/DejaVuSerifCondensed-Bold.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSerifCondensed/DejaVuSerifCondensed-Bold.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/DejaVuSerifCondensed/DejaVuSerifCondensed-Bold.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "881f12cf6912404aba2b316a081db402857873aa",
      "filename": "data/fonts/basic/DejaVuSerifCondensed/DejaVuSerifCondensed-BoldItalic.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSerifCondensed/DejaVuSerifCondensed-BoldItalic.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSerifCondensed/DejaVuSerifCondensed-BoldItalic.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/DejaVuSerifCondensed/DejaVuSerifCondensed-BoldItalic.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "2015173dbcf2e156ed554de167ad0cc7cfd2b96a",
      "filename": "data/fonts/basic/DejaVuSerifCondensed/DejaVuSerifCondensed-Italic.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSerifCondensed/DejaVuSerifCondensed-Italic.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSerifCondensed/DejaVuSerifCondensed-Italic.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/DejaVuSerifCondensed/DejaVuSerifCondensed-Italic.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "3a049659d7e36cb0f9f8fd9da917b2ced4a8c32b",
      "filename": "data/fonts/basic/DejaVuSerifCondensed/DejaVuSerifCondensed.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSerifCondensed/DejaVuSerifCondensed.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejaVuSerifCondensed/DejaVuSerifCondensed.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/DejaVuSerifCondensed/DejaVuSerifCondensed.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "804ecf2e7417b446dc3753ce368348f3cad81710",
      "filename": "data/fonts/basic/DejavuWenQuanYiMicroHei/r.ttf",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejavuWenQuanYiMicroHei/r.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/DejavuWenQuanYiMicroHei/r.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/DejavuWenQuanYiMicroHei/r.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "previous_filename": "data/fonts/DejavuWenQuanYiMicroHei.ttf"
    },
    {
      "sha": "4c2f69b53a106b1cdb2c2c5107ebe0a726f62d03",
      "filename": "data/fonts/basic/FreeSans/FreeSans.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/FreeSans/FreeSans.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/FreeSans/FreeSans.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/FreeSans/FreeSans.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "763cb044ae066ae1639b34dac0095d22d67aacfe",
      "filename": "data/fonts/basic/FreeSans/FreeSansBold.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/FreeSans/FreeSansBold.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/FreeSans/FreeSansBold.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/FreeSans/FreeSansBold.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "2d1b3c0c7090aa58ba0e1606f99ae63eb9f30be4",
      "filename": "data/fonts/basic/FreeSans/FreeSansBoldOblique.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/FreeSans/FreeSansBoldOblique.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/FreeSans/FreeSansBoldOblique.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/FreeSans/FreeSansBoldOblique.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "9e4529320c446a11a7352f127e57e5d9c81425d5",
      "filename": "data/fonts/basic/FreeSans/FreeSansOblique.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/FreeSans/FreeSansOblique.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/FreeSans/FreeSansOblique.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/FreeSans/FreeSansOblique.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "d7dd0c30fb3e88c606d306bb0d00b70198bb333d",
      "filename": "data/fonts/basic/FreeSerif/FreeSerif.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/FreeSerif/FreeSerif.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/FreeSerif/FreeSerif.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/FreeSerif/FreeSerif.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "f42209a74ec668b78c899d6b9a06305c782a7540",
      "filename": "data/fonts/basic/FreeSerif/FreeSerifBold.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/FreeSerif/FreeSerifBold.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/FreeSerif/FreeSerifBold.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/FreeSerif/FreeSerifBold.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "f06d0a873d2bfc11263d51e1117c5816a2279654",
      "filename": "data/fonts/basic/FreeSerif/FreeSerifBoldItalic.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/FreeSerif/FreeSerifBoldItalic.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/FreeSerif/FreeSerifBoldItalic.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/FreeSerif/FreeSerifBoldItalic.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "d390f6a6c0880f489c9553b97be897d45d0d54c5",
      "filename": "data/fonts/basic/FreeSerif/FreeSerifItalic.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/FreeSerif/FreeSerifItalic.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/FreeSerif/FreeSerifItalic.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/FreeSerif/FreeSerifItalic.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "7ff88f22869126cc992030f18e0eeff65ec8bbac",
      "filename": "data/fonts/basic/arial/r.ttf",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/arial/r.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/arial/r.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/arial/r.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "previous_filename": "data/fonts/arial.ttf"
    },
    {
      "sha": "9b176477614628eff70caff3bf7b378d4029fd84",
      "filename": "data/fonts/basic/calligraph/r.ttf",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/calligraph/r.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/calligraph/r.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/calligraph/r.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "previous_filename": "data/fonts/calligraph.ttf"
    },
    {
      "sha": "d17e1be6c4e3848b0c172e4558b521ea6b1994b3",
      "filename": "data/fonts/basic/comic/r.ttf",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/comic/r.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/comic/r.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/comic/r.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "previous_filename": "data/fonts/comic.ttf"
    },
    {
      "sha": "66f5f7abf20cd848610c0889653893593003df24",
      "filename": "data/fonts/basic/knowyour/r.ttf",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/knowyour/r.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/knowyour/r.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/knowyour/r.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "previous_filename": "data/fonts/knowyour.ttf"
    },
    {
      "sha": "1cd91ec04c09f0333ba8bae7e45cec8c36fc6abe",
      "filename": "data/fonts/basic/stylo/r.ttf",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/stylo/r.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/stylo/r.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/stylo/r.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "previous_filename": "data/fonts/stylo.ttf"
    },
    {
      "sha": "55f734ab82b609c58b03fefeaee383da63ada367",
      "filename": "data/fonts/basic/times/r.ttf",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/times/r.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/times/r.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/times/r.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "previous_filename": "data/fonts/times.ttf"
    },
    {
      "sha": "754a9b7b39381cc790f17f470212252974904dd7",
      "filename": "data/fonts/basic/verdana/r.ttf",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/verdana/r.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/basic/verdana/r.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/basic/verdana/r.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "previous_filename": "data/fonts/verdana.ttf"
    },
    {
      "sha": "66973820c9df4e7100024efce91da68b094243c5",
      "filename": "data/fonts/mono/FreeMono/FreeMono.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/FreeMono/FreeMono.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/FreeMono/FreeMono.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/mono/FreeMono/FreeMono.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "266b971ac4b89d05509a500da8c8b12a7453cebb",
      "filename": "data/fonts/mono/FreeMono/FreeMonoBold.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/FreeMono/FreeMonoBold.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/FreeMono/FreeMonoBold.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/mono/FreeMono/FreeMonoBold.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "6e9def3da62bb284fe91a737084f117c3b7b71df",
      "filename": "data/fonts/mono/FreeMono/FreeMonoBoldOblique.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/FreeMono/FreeMonoBoldOblique.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/FreeMono/FreeMonoBoldOblique.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/mono/FreeMono/FreeMonoBoldOblique.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "487568e5a0843edc1503400206aa4948e05b3948",
      "filename": "data/fonts/mono/FreeMono/FreeMonoOblique.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/FreeMono/FreeMonoOblique.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/FreeMono/FreeMonoOblique.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/mono/FreeMono/FreeMonoOblique.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "a35ea2e4f44b67b6defcf0a4a44916fbeaf60a87",
      "filename": "data/fonts/mono/Hack-Regular/r.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/Hack-Regular/r.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/Hack-Regular/r.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/mono/Hack-Regular/r.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "4acd36ac3874ca76542eec2fcedc51cb63053778",
      "filename": "data/fonts/mono/SpaceMono/b.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/SpaceMono/b.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/SpaceMono/b.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/mono/SpaceMono/b.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "070247553a0a0ccc6148778e87dd8e5b508d5d68",
      "filename": "data/fonts/mono/SpaceMono/bi.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/SpaceMono/bi.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/SpaceMono/bi.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/mono/SpaceMono/bi.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "87997387fbabf757210f553de6f42401d078aa13",
      "filename": "data/fonts/mono/SpaceMono/i.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/SpaceMono/i.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/SpaceMono/i.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/mono/SpaceMono/i.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "28d7ff717769d29e5d1f036bfa91eea660ce8a24",
      "filename": "data/fonts/mono/SpaceMono/r.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/SpaceMono/r.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/SpaceMono/r.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/mono/SpaceMono/r.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "7bd6665765768ae885e2868623e7e9c2fd0cfc8a",
      "filename": "data/fonts/mono/UbuntuMono/b.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/UbuntuMono/b.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/UbuntuMono/b.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/mono/UbuntuMono/b.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "6c5b8ba023e41689a2e14dc3c88f978e3188a1de",
      "filename": "data/fonts/mono/UbuntuMono/bi.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/UbuntuMono/bi.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/UbuntuMono/bi.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/mono/UbuntuMono/bi.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "18f81a29258d13e1d6f1ce98cdd167091ea9bd4a",
      "filename": "data/fonts/mono/UbuntuMono/i.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/UbuntuMono/i.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/UbuntuMono/i.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/mono/UbuntuMono/i.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "fdd309d716629f4e5339d5e5508225ed857a3ede",
      "filename": "data/fonts/mono/UbuntuMono/r.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/UbuntuMono/r.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/UbuntuMono/r.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/mono/UbuntuMono/r.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "139f0b4311ad2e0369a347b3be6c46e6c2b730d5",
      "filename": "data/fonts/mono/VeraMono/r.ttf",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/VeraMono/r.ttf",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/fonts/mono/VeraMono/r.ttf",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/fonts/mono/VeraMono/r.ttf?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "2455a41a7806f9fb8af3cae1c67f89d4701041fb",
      "filename": "data/languages/index.txt",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/languages/index.txt",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/languages/index.txt",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/languages/index.txt?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -110,7 +110,7 @@ swedish\n \n traditional_chinese\n == 繁體中文\n-== 156\n+== 158\n \n turkish\n == Türkçe"
    },
    {
      "sha": "4f0c9552bc3047d78d536aa24626d9bd0dd3bd8c",
      "filename": "data/textures/entities/!default.png",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/textures/entities/!default.png",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/textures/entities/!default.png",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/textures/entities/!default.png?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "52f6089b2426f62540e05b2373d5689fa630a5ce",
      "filename": "data/textures/entities/clear/ddnet.png",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/textures/entities/clear/ddnet.png",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/textures/entities/clear/ddnet.png",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/textures/entities/clear/ddnet.png?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "previous_filename": "data/editor/entities_clear/ddnet.png"
    },
    {
      "sha": "74741b52eb4bfdba3190039500a488db84de4a06",
      "filename": "data/textures/entities/clear/ddrace.png",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/textures/entities/clear/ddrace.png",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/textures/entities/clear/ddrace.png",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/textures/entities/clear/ddrace.png?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "previous_filename": "data/editor/entities_clear/ddrace.png"
    },
    {
      "sha": "3c98f564acadcf02372ee811d93c1693a26e9d5a",
      "filename": "data/textures/entities/clear/fng.png",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/textures/entities/clear/fng.png",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/textures/entities/clear/fng.png",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/textures/entities/clear/fng.png?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "previous_filename": "data/editor/entities_clear/fng.png"
    },
    {
      "sha": "3d5c8283c50e2e41422d2000f611855c4a681a72",
      "filename": "data/textures/entities/clear/race.png",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/textures/entities/clear/race.png",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/textures/entities/clear/race.png",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/textures/entities/clear/race.png?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "previous_filename": "data/editor/entities_clear/race.png"
    },
    {
      "sha": "49620b5c5c2eeb6262fab3f1724035809efb7662",
      "filename": "data/textures/entities/clear/vanilla.png",
      "status": "renamed",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/textures/entities/clear/vanilla.png",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/textures/entities/clear/vanilla.png",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/textures/entities/clear/vanilla.png?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "previous_filename": "data/editor/entities_clear/vanilla.png"
    },
    {
      "sha": "2b901438c8c685644dfb0cab05544159866d0d9b",
      "filename": "data/textures/entities/debug_ddnet_entities.png",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/textures/entities/debug_ddnet_entities.png",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/textures/entities/debug_ddnet_entities.png",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/textures/entities/debug_ddnet_entities.png?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "9aaa7f33a36185aeb7d7efc25269792d5fa27c44",
      "filename": "data/textures/entities/debug_entities.png",
      "status": "added",
      "additions": 0,
      "deletions": 0,
      "changes": 0,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/data/textures/entities/debug_entities.png",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/data/textures/entities/debug_entities.png",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/data/textures/entities/debug_entities.png?ref=7507f7db489a0049e9e216c707c5e68cc68c8776"
    },
    {
      "sha": "5323e6123c4a88497a94ea39e458f7502b5cf9b6",
      "filename": "datasrc/compile.py",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/datasrc/compile.py",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/datasrc/compile.py",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/datasrc/compile.py?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -176,6 +176,7 @@ class CNetObjHandler\n \tlines += ['']\n \n \tlines += ['static const int max_int = 0x7fffffff;']\n+\tlines += ['static const int min_int = 0x80000000;']\n \n \tlines += ['int CNetObjHandler::ClampInt(const char *pErrorMsg, int Value, int Min, int Max)']\n \tlines += ['{']"
    },
    {
      "sha": "593af98f44862ac80263db752c68e70ebbb1f1dc",
      "filename": "datasrc/content.py",
      "status": "modified",
      "additions": 11,
      "deletions": 12,
      "changes": 23,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/datasrc/content.py",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/datasrc/content.py",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/datasrc/content.py?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -226,40 +226,39 @@ def FileList(format, num):\n container.sounds.Add(SoundSet(\"irc_message\", [\"audio/irc_message.wv\"]))\n \n image_null = Image(\"null\", \"\")\n-image_particles = Image(\"particles\", \"particles.png\")\n-image_game = Image(\"game\", \"game.png\")\n+image_game = Image(\"game\", \"textures/game/!default.png\")\n+image_particles = Image(\"particles\", \"textures/particles/!default.png\")\n image_browseicons = Image(\"browseicons\", \"browse_icons.png\")\n-image_emoticons = Image(\"emoticons\", \"emoticons.png\")\n+image_emoticons = Image(\"emoticons\", \"textures/emotes/!default.png\")\n image_speedup_arrow = Image(\"speedup_arrow\", \"editor/speed_arrow.png\")\n-image_demobuttons = Image(\"demobuttons\", \"demo_buttons.png\")\n image_fileicons = Image(\"fileicons\", \"file_icons.png\")\n image_guibuttons = Image(\"guibuttons\", \"gui_buttons.png\")\n image_guiicons = Image(\"guiicons\", \"gui_icons.png\")\n image_menuicons = Image(\"menuicons\", \"menu.png\")\n-image_arrow = Image(\"arrow\", \"arrow.png\")\n+image_demobuttons = Image(\"demobuttons\", \"demo_buttons.png\")\n image_demobuttons2 = Image(\"demobuttons2\", \"demo_buttons2.png\")\n image_audio_source = Image(\"audio_source\", \"editor/audio_source.png\")\n-image_ath = Image(\"ath\", \"ath.png\")\n \n container.images.Add(image_null)\n container.images.Add(image_game)\n container.images.Add(image_particles)\n-container.images.Add(Image(\"cursor\", \"gui_cursor.png\"))\n-container.images.Add(Image(\"banner\", \"gui_logo.png\"))\n container.images.Add(image_emoticons)\n container.images.Add(image_browseicons)\n-container.images.Add(Image(\"console_bg\", \"console.png\"))\n-container.images.Add(Image(\"console_bar\", \"console_bar.png\"))\n container.images.Add(image_speedup_arrow)\n container.images.Add(image_demobuttons)\n container.images.Add(image_fileicons)\n container.images.Add(image_guibuttons)\n container.images.Add(image_guiicons)\n container.images.Add(image_menuicons)\n-container.images.Add(image_arrow)\n container.images.Add(image_demobuttons2)\n container.images.Add(image_audio_source)\n-container.images.Add(image_ath)\n+container.images.Add(Image(\"console_bg\", \"console.png\"))\n+container.images.Add(Image(\"console_bar\", \"console_bar.png\"))\n+container.images.Add(Image(\"arrow\", \"arrow.png\"))\n+container.images.Add(Image(\"banner\", \"gui_logo.png\"))\n+container.images.Add(Image(\"ath\", \"ath.png\"))\n+container.images.Add(Image(\"entities\", \"textures/entities/!default.png\"))\n+container.images.Add(Image(\"hudcursor\", \"textures/cursor/!default.png\"))\n \n container.pickups.Add(Pickup(\"health\"))\n container.pickups.Add(Pickup(\"armor\"))"
    },
    {
      "sha": "53ff8b7b49cc9de570badd0c81f0fb24604c58b4",
      "filename": "datasrc/network.py",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/datasrc/network.py",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/datasrc/network.py",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/datasrc/network.py?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -3,7 +3,7 @@\n Emotes = [\"NORMAL\", \"PAIN\", \"HAPPY\", \"SURPRISE\", \"ANGRY\", \"BLINK\"]\n PlayerFlags = [\"PLAYING\", \"IN_MENU\", \"CHATTING\", \"SCOREBOARD\", \"AIM\", \"ZClient\", \"ATH1\", \"ATH2\", \"EMPTY\", \"EMPTY2\", \"EMPTY3\"] ## EMPTY flags so that no collisions between different clients can happen\n GameFlags = [\"TEAMS\", \"FLAGS\"]\n-GameStateFlags = [\"GAMEOVER\", \"SUDDENDEATH\", \"PAUSED\"]\n+GameStateFlags = [\"GAMEOVER\", \"SUDDENDEATH\", \"PAUSED\", \"RACETIME\"]\n \n Emoticons = [\"OOP\", \"EXCLAMATION\", \"HEARTS\", \"DROP\", \"DOTDOT\", \"MUSIC\", \"SORRY\", \"GHOST\", \"SUSHI\", \"SPLATTEE\", \"DEVILTEE\", \"ZOMG\", \"ZZZ\", \"WTF\", \"EYES\", \"QUESTION\"]\n \n@@ -106,7 +106,7 @@\n \t\tNetIntRange(\"m_GameFlags\", 0, 256),\n \t\tNetIntRange(\"m_GameStateFlags\", 0, 256),\n \t\tNetTick(\"m_RoundStartTick\"),\n-\t\tNetIntRange(\"m_WarmupTimer\", 0, 'max_int'),\n+\t\tNetIntRange(\"m_WarmupTimer\", 'min_int', 'max_int'),\n \n \t\tNetIntRange(\"m_ScoreLimit\", 0, 'max_int'),\n \t\tNetIntRange(\"m_TimeLimit\", 0, 'max_int'),"
    },
    {
      "sha": "51cb82eac8c22fb071bfbdd22d35fa761694a51e",
      "filename": "lua/info.txt",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/lua/info.txt",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/lua/info.txt",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/lua/info.txt?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -2,7 +2,7 @@\n –––––––––––––––––––––––––[ Troubleshooting ]–––––––––––––––––––––––––\n \n !!! The client will only search for lua scripts in this directory !!!\n-1. If your scripts doesn't show up, make sure that the folder is called (exactly!) \"lua\"\n+1. If your scripts don't show up, make sure that the folder is called (exactly!) \"lua\"\n 2. The client will recurse into subdirectories of an infinite depth when searching\n 3. Only scripts with the file ending \".lua\" will be listed, anything else is ignored!\n "
    },
    {
      "sha": "4a0c4c60c8e72a78d1c06f484b5bf34c8a2c8881",
      "filename": "src/base/system.c",
      "status": "modified",
      "additions": 117,
      "deletions": 39,
      "changes": 156,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/base/system.c",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/base/system.c",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/base/system.c?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -546,11 +546,16 @@ void mem_move(void *dest, const void *source, unsigned size)\n \tmemmove(dest, source, size);\n }\n \n-void mem_zero(void *block,unsigned size)\n+void mem_zero(void *block, unsigned size)\n {\n \tmemset(block, 0, size);\n }\n \n+void mem_set(void *block, int value, unsigned size)\n+{\n+\tmemset(block, value, size);\n+}\n+\n int mem_check_imp()\n {\n \tMEMHEADER *header = first;\n@@ -590,7 +595,7 @@ void io_read_threaded(void *io_data)\n \td->ret = fread(d->buffer, 1, d->size, (FILE*)d->io);\n }\n \n-unsigned io_skip(IOHANDLE io, int size)\n+long io_skip(IOHANDLE io, long size)\n {\n \tfseek((FILE*)io, size, SEEK_CUR);\n \treturn size;\n@@ -634,15 +639,15 @@ long int io_length(IOHANDLE io)\n \n unsigned io_write(IOHANDLE io, const void *buffer, unsigned size)\n {\n-\treturn fwrite(buffer, 1, size, (FILE*)io);\n+\treturn (unsigned int)fwrite(buffer, 1, size, (FILE*)io);\n }\n \n unsigned io_write_newline(IOHANDLE io)\n {\n #if defined(CONF_FAMILY_WINDOWS)\n \treturn fwrite(\"\\r\\n\", 1, 2, (FILE*)io);\n #else\n-\treturn fwrite(\"\\n\", 1, 1, (FILE*)io);\n+\treturn (unsigned int)fwrite(\"\\n\", 1, 1, (FILE*)io);\n #endif\n }\n \n@@ -986,7 +991,7 @@ void net_addr_split(char *pAddr, int max_length)\n \t}\n }\n \n-static int priv_net_extract(const char *hostname, char *host, int max_host, int *port)\n+static int priv_net_extract(const char *hostname, char *host, int max_host, unsigned short *port)\n {\n \tint i;\n \n@@ -1004,7 +1009,7 @@ static int priv_net_extract(const char *hostname, char *host, int max_host, int\n \n \t\ti++;\n \t\tif(hostname[i] == ':')\n-\t\t\t*port = atol(hostname+i+1);\n+\t\t\t*port = (unsigned short)atol(hostname + i + 1);\n \t}\n \telse\n \t{\n@@ -1014,7 +1019,7 @@ static int priv_net_extract(const char *hostname, char *host, int max_host, int\n \t\thost[i] = 0;\n \n \t\tif(hostname[i] == ':')\n-\t\t\t*port = atol(hostname+i+1);\n+\t\t\t*port = (unsigned short)atol(hostname+i+1);\n \t}\n \n \treturn 0;\n@@ -1026,7 +1031,7 @@ int net_host_lookup(const char *hostname, NETADDR *addr, int types)\n \tstruct addrinfo *result = NULL;\n \tint e;\n \tchar host[256];\n-\tint port = 0;\n+\tunsigned short port = 0;\n \n \tif(priv_net_extract(hostname, host, sizeof(host), &port))\n \t\treturn -1;\n@@ -1096,7 +1101,7 @@ static int parse_uint8(unsigned char *out, const char **str)\n \tint i;\n \tif(parse_int(&i, str) != 0) return -1;\n \tif(i < 0 || i > 0xff) return -1;\n-\t*out = i;\n+\t*out = (unsigned char)i;\n \treturn 0;\n }\n \n@@ -1105,7 +1110,7 @@ static int parse_uint16(unsigned short *out, const char **str)\n \tint i;\n \tif(parse_int(&i, str) != 0) return -1;\n \tif(i < 0 || i > 0xffff) return -1;\n-\t*out = i;\n+\t*out = (unsigned short)i;\n \treturn 0;\n }\n \n@@ -1376,10 +1381,10 @@ NETSOCKET net_udp_create(NETADDR bindaddr)\n \treturn sock;\n }\n \n-int net_udp_send(NETSOCKET sock, const NETADDR *addr, const void *data, int size)\n+long net_udp_send(NETSOCKET sock, const NETADDR *addr, const void *data, unsigned int size)\n {\n #ifndef FUZZING\n-\tint d = -1;\n+\tlong d = -1;\n \n \tif(addr->type&NETTYPE_IPV4)\n \t{\n@@ -1458,12 +1463,12 @@ int net_udp_send(NETSOCKET sock, const NETADDR *addr, const void *data, int size\n #endif /* FUZZING */\n }\n \n-int net_udp_recv(NETSOCKET sock, NETADDR *addr, void *data, int maxsize)\n+long net_udp_recv(NETSOCKET sock, NETADDR *addr, void *data, unsigned int maxsize)\n {\n #ifndef FUZZING\n \tchar sockaddrbuf[128];\n \tsocklen_t fromlen;// = sizeof(sockaddrbuf);\n-\tint bytes = 0;\n+\tlong bytes = 0;\n \n \tif(bytes == 0 && sock.ipv4sock >= 0)\n \t{\n@@ -1701,9 +1706,9 @@ int net_tcp_connect_non_blocking(NETSOCKET sock, NETADDR bindaddr)\n \treturn res;\n }\n \n-int net_tcp_send(NETSOCKET sock, const void *data, int size)\n+long net_tcp_send(NETSOCKET sock, const void *data, unsigned int size)\n {\n-\tint bytes = -1;\n+\tlong bytes = -1;\n \n \tif(sock.ipv4sock >= 0)\n \t\tbytes = send((int)sock.ipv4sock, (const char*)data, size, 0);\n@@ -1713,9 +1718,9 @@ int net_tcp_send(NETSOCKET sock, const void *data, int size)\n \treturn bytes;\n }\n \n-int net_tcp_recv(NETSOCKET sock, void *data, int maxsize)\n+long net_tcp_recv(NETSOCKET sock, void *data, unsigned int maxsize)\n {\n-\tint bytes = -1;\n+\tlong bytes = -1;\n \n \tif(sock.ipv4sock >= 0)\n \t\tbytes = recv((int)sock.ipv4sock, (char*)data, maxsize, 0);\n@@ -1866,6 +1871,61 @@ int fs_listdir(const char *dir, FS_LISTDIR_CALLBACK cb, int type, void *user)\n #endif\n }\n \n+int fs_listdir_verbose(const char *dir, FS_LISTDIR_CALLBACK_VERBOSE cb, int type, void *user)\n+{\n+#if defined(CONF_FAMILY_WINDOWS)\n+\tWIN32_FIND_DATA finddata;\n+\tHANDLE handle;\n+\tchar buffer[1024*2];\n+\tint length;\n+\tstr_format(buffer, sizeof(buffer), \"%s/*\", dir);\n+\n+\thandle = FindFirstFileA(buffer, &finddata);\n+\n+\tif (handle == INVALID_HANDLE_VALUE)\n+\t\treturn 0;\n+\n+\tstr_format(buffer, sizeof(buffer), \"%s/\", dir);\n+\tlength = str_length(buffer);\n+\tint result = 0;\n+\n+\t/* add all the entries */\n+\tdo\n+\t{\n+\t\tstr_copy(buffer+length, finddata.cFileName, (int)sizeof(buffer)-length);\n+\t\tif((result = cb(finddata.cFileName, buffer, fs_is_dir(buffer), type, user)))\n+\t\t\tbreak;\n+\t}\n+\twhile (FindNextFileA(handle, &finddata));\n+\n+\tFindClose(handle);\n+\treturn result;\n+#else\n+\tstruct dirent *entry;\n+\tchar buffer[1024*2];\n+\tint length;\n+\tDIR *d = opendir(dir);\n+\n+\tif(!d)\n+\t\treturn 0;\n+\n+\tstr_format(buffer, sizeof(buffer), \"%s/\", dir);\n+\tlength = str_length(buffer);\n+\tint result = 0;\n+\n+\twhile((entry = readdir(d)) != NULL)\n+\t{\n+\t\tstr_copy(buffer+length, entry->d_name, (int)sizeof(buffer)-length);\n+\t\tif((result = cb(entry->d_name, buffer, fs_is_dir(buffer), type, user)))\n+\t\t\tbreak;\n+\t}\n+\n+\t/* close the directory and return */\n+\tclosedir(d);\n+\treturn result;\n+#endif\n+}\n+\n int fs_storage_path(const char *appname, char *path, int max)\n {\n #if defined(CONF_FAMILY_WINDOWS)\n@@ -1886,8 +1946,8 @@ int fs_storage_path(const char *appname, char *path, int max)\n \tsnprintf(path, max, \"%s/Library/Application Support/%s\", home, appname);\n #else\n \tsnprintf(path, max, \"%s/.%s\", home, appname);\n-\tfor(i = strlen(home)+2; path[i]; i++)\n-\t\tpath[i] = tolower(path[i]);\n+\tfor(i = (int)(strlen(home) + 2); path[i]; i++)\n+\t\tpath[i] = (char)tolower(path[i]);\n #endif\n \n \treturn 0;\n@@ -2096,14 +2156,14 @@ int net_socket_read_wait(NETSOCKET sock, int time)\n \treturn 0;\n }\n \n-int time_timestamp()\n+int64 time_timestamp()\n {\n \treturn time(0);\n }\n \n void str_append(char *dst, const char *src, int dst_size)\n {\n-\tint s = strlen(dst);\n+\tint s = (int)strlen(dst);\n \tint i = 0;\n \twhile(s < dst_size)\n \t{\n@@ -2441,8 +2501,18 @@ void str_hex(char *dst, int dst_size, const void *data, int data_size)\n \t\tdst[b*3+3] = 0;\n \t}\n }\n+void str_hex_simple(char *dst, int dst_size, const unsigned char *data, int data_size)\n+{\n+\tmem_zero(dst, sizeof(dst));\n+\tfor(int i = 0; i < data_size; i++)\n+\t{\n+\t\tchar buf[3];\n+\t\tstr_format(buf, sizeof(buf), \"%02x\", data[i]);\n+\t\tstr_append(dst, buf, dst_size);\n+\t}\n+}\n \n-void str_timestamp_ex(time_t time_data, char *buffer, int buffer_size, const char *format)\n+void str_timestamp_ex(time_t time_data, char *buffer, unsigned int buffer_size, const char *format)\n {\n \tstruct tm *time_info;\n \n@@ -2451,7 +2521,7 @@ void str_timestamp_ex(time_t time_data, char *buffer, int buffer_size, const cha\n \tbuffer[buffer_size-1] = 0;\t/* assure null termination */\n }\n \n-void str_timestamp(char *buffer, int buffer_size)\n+void str_timestamp(char *buffer, unsigned int buffer_size)\n {\n \ttime_t time_data;\n \ttime(&time_data);\n@@ -2477,9 +2547,9 @@ const char *str_next_word(char *str, char delim, char *buf, int *cursor)\n }\n \n \n-int mem_comp(const void *a, const void *b, int size)\n+int mem_comp(const void *a, const void *b, unsigned int size)\n {\n-\treturn memcmp(a,b,size);\n+\treturn memcmp(a,b, size);\n }\n \n const MEMSTATS *mem_stats()\n@@ -2541,13 +2611,14 @@ int str_isdigit(char c) { return c > 47 && c < 58; }\n char str_uppercase(char c)\n {\n \tif(c >= 'a' && c <= 'z')\n-\t\treturn 'A' + (c-'a');\n+\t\treturn (char)('A' + (c-'a'));\n \treturn c;\n }\n \n int str_toint(const char *str) { return atoi(str); }\n-int str_toint_base(const char *str, int base) { return strtol(str, NULL, base); }\n-float str_tofloat(const char *str) { return atof(str); }\n+int str_toint_base(const char *str, int base) { return (int)strtol(str, NULL, base); }\n+unsigned long str_toulong_base(const char *str, int base) { return strtoul(str, NULL, base); }\n+float str_tofloat(const char *str) { return (float)atof(str); }\n \n \n int str_utf8_isspace(int code)\n@@ -2638,23 +2709,23 @@ int str_utf8_encode(char *ptr, int chr)\n \t}\n \telse if(chr <= 0x7FF)\n \t{\n-\t\tptr[0] = 0xC0|((chr>>6)&0x1F);\n-\t\tptr[1] = 0x80|(chr&0x3F);\n+\t\tptr[0] = (char)(0xC0|((chr>>6)&0x1F));\n+\t\tptr[1] = (char)(0x80|(chr&0x3F));\n \t\treturn 2;\n \t}\n \telse if(chr <= 0xFFFF)\n \t{\n-\t\tptr[0] = 0xE0|((chr>>12)&0x0F);\n-\t\tptr[1] = 0x80|((chr>>6)&0x3F);\n-\t\tptr[2] = 0x80|(chr&0x3F);\n+\t\tptr[0] = (char)(0xE0|((chr>>12)&0x0F));\n+\t\tptr[1] = (char)(0x80|((chr>>6)&0x3F));\n+\t\tptr[2] = (char)(0x80|(chr&0x3F));\n \t\treturn 3;\n \t}\n \telse if(chr <= 0x10FFFF)\n \t{\n-\t\tptr[0] = 0xF0|((chr>>18)&0x07);\n-\t\tptr[1] = 0x80|((chr>>12)&0x3F);\n-\t\tptr[2] = 0x80|((chr>>6)&0x3F);\n-\t\tptr[3] = 0x80|(chr&0x3F);\n+\t\tptr[0] = (char)(0xF0|((chr>>18)&0x07));\n+\t\tptr[1] = (char)(0x80|((chr>>12)&0x3F));\n+\t\tptr[2] = (char)(0x80|((chr>>6)&0x3F));\n+\t\tptr[3] = (char)(0x80|(chr&0x3F));\n \t\treturn 4;\n \t}\n \n@@ -2663,7 +2734,7 @@ int str_utf8_encode(char *ptr, int chr)\n \n static unsigned char str_byte_next(const char **ptr)\n {\n-\tunsigned char byte = **ptr;\n+\tunsigned char byte = (unsigned char)**ptr;\n \t(*ptr)++;\n \treturn byte;\n }\n@@ -2906,6 +2977,13 @@ int secure_rand()\n \treturn (int)(i%RAND_MAX);\n }\n \n+unsigned secure_rand_u()\n+{\n+\tunsigned int i;\n+\tsecure_random_fill(&i, sizeof(i));\n+\treturn (i%RAND_MAX);\n+}\n+\n int simpleSHA256(void* input, unsigned long length, unsigned char* md)\n {\n \tSHA256_CTX context;"
    },
    {
      "sha": "aa8df948b1325238cb1e961a659d737ff732a6ca",
      "filename": "src/base/system.h",
      "status": "modified",
      "additions": 25,
      "deletions": 9,
      "changes": 34,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/base/system.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/base/system.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/base/system.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -114,6 +114,7 @@ void dbg_msg(const char *sys, const char *fmt, ...);\n void* mem_alloc_debug(const char *filename, int line, unsigned size, unsigned alignment);\n void* mem_realloc_debug(void *block, const char *filename, int line, unsigned size);\n #define mem_alloc(s,a) mem_alloc_debug(__FILE__, __LINE__, (s), (a))\n+#define mem_allocb(t,n) (t*)mem_alloc_debug(__FILE__, __LINE__, (sizeof(t)*n), 0)\n #define mem_realloc(p,s) mem_realloc_debug(p,__FILE__, __LINE__, (s))\n \n /*\n@@ -147,6 +148,7 @@ void mem_free(void *block);\n \t\t<mem_move>\n */\n void mem_copy(void *dest, const void *source, unsigned size);\n+#define mem_copyb(BUF, SOURCE) mem_copy(BUF, SOURCE, sizeof(BUF))\n \n /*\n \tFunction: mem_move\n@@ -175,6 +177,9 @@ void mem_move(void *dest, const void *source, unsigned size);\n \t\tsize - Size of the block\n */\n void mem_zero(void *block, unsigned size);\n+#define mem_zerob(BUF) mem_zero(BUF, sizeof(BUF))\n+\n+void mem_set(void *block, int value, unsigned size);\n \n /*\n \tFunction: mem_comp\n@@ -190,7 +195,7 @@ void mem_zero(void *block, unsigned size);\n \t\t0 - Block a is equal to block b\n \t\t>0 - Block a is greater than block b\n */\n-int mem_comp(const void *a, const void *b, int size);\n+int mem_comp(const void *a, const void *b, unsigned int size);\n \n /*\n \tFunction: mem_check\n@@ -261,7 +266,7 @@ void io_read_threaded(void *io_data);\n \tReturns:\n \t\tNumber of bytes skipped.\n */\n-unsigned io_skip(IOHANDLE io, int size);\n+long io_skip(IOHANDLE io, long size);\n \n /*\n \tFunction: io_write\n@@ -504,7 +509,7 @@ int64 time_freq();\n \tReturns:\n \t\tThe time as a UNIX timestamp\n */\n-int time_timestamp();\n+int64 time_timestamp();\n \n /* Group: Network General */\n typedef struct\n@@ -633,7 +638,7 @@ NETSOCKET net_udp_create(NETADDR bindaddr);\n \t\tOn success it returns the number of bytes sent. Returns -1\n \t\ton error.\n */\n-int net_udp_send(NETSOCKET sock, const NETADDR *addr, const void *data, int size);\n+long net_udp_send(NETSOCKET sock, const NETADDR *addr, const void *data, unsigned int size);\n \n /*\n \tFunction: net_udp_recv\n@@ -649,7 +654,7 @@ int net_udp_send(NETSOCKET sock, const NETADDR *addr, const void *data, int size\n \t\tOn success it returns the number of bytes recived. Returns -1\n \t\ton error.\n */\n-int net_udp_recv(NETSOCKET sock, NETADDR *addr, void *data, int maxsize);\n+long net_udp_recv(NETSOCKET sock, NETADDR *addr, void *data, unsigned int maxsize);\n \n /*\n \tFunction: net_udp_close\n@@ -731,7 +736,7 @@ int net_tcp_connect(NETSOCKET sock, const NETADDR *addr);\n \tReturns:\n \t\tNumber of bytes sent. Negative value on failure.\n */\n-int net_tcp_send(NETSOCKET sock, const void *data, int size);\n+long net_tcp_send(NETSOCKET sock, const void *data, unsigned int size);\n \n /*\n \tFunction: net_tcp_recv\n@@ -747,7 +752,7 @@ int net_tcp_send(NETSOCKET sock, const void *data, int size);\n \t\tnon-blocking mode, it returns 0 when there is no more data to\n \t\tbe fetched.\n */\n-int net_tcp_recv(NETSOCKET sock, void *data, int maxsize);\n+long net_tcp_recv(NETSOCKET sock, void *data, unsigned int maxsize);\n \n /*\n \tFunction: net_tcp_close\n@@ -777,6 +782,7 @@ int net_tcp_close(NETSOCKET sock);\n \t\t- Garantees that dst string will contain zero-termination.\n */\n void str_append(char *dst, const char *src, int dst_size);\n+#define str_appendb(BUF, SRC) str_append(BUF, SRC, sizeof(BUF))\n \n /*\n \tFunction: str_copy\n@@ -792,6 +798,7 @@ void str_append(char *dst, const char *src, int dst_size);\n \t\t- Garantees that dst string will contain zero-termination.\n */\n void str_copy(char *dst, const char *src, int dst_size);\n+#define str_copyb(BUF, SRC) str_copy(BUF, SRC, sizeof(BUF))\n \n /*\n \tFunction: str_length\n@@ -824,6 +831,7 @@ int str_length(const char *str);\n \t\t- Garantees that dst string will contain zero-termination.\n */\n int str_format(char *buffer, int buffer_size, const char *format, ...);\n+#define str_formatb(BUF, FMT, ...) str_format(BUF, sizeof(BUF), FMT, __VA_ARGS__)\n \n int str_replace_char(char *str_in, char find, char replace);\n int str_replace_char_num(char *str_in, int max_replace, char find, char replace);\n@@ -1065,6 +1073,9 @@ const char *str_find_rev(const char *haystack, const char *needle);\n \t\t- The desination buffer will be zero-terminated\n */\n void str_hex(char *dst, int dst_size, const void *data, int data_size);\n+#define str_hexb(BUF, DATA) str_hex(BUF, sizeof(BUF), DATA, sizeof(DATA))\n+void str_hex_simple(char *dst, int dst_size, const unsigned char *data, int data_size);\n+#define str_hex_simpleb(BUF, DATA, NUM) str_hex_simple(BUF, sizeof(BUF), DATA, NUM)\n \n /*\n \tFunction: str_timestamp\n@@ -1077,8 +1088,9 @@ void str_hex(char *dst, int dst_size, const void *data, int data_size);\n \tRemarks:\n \t\t- Guarantees that buffer string will contain zero-termination.\n */\n-void str_timestamp(char *buffer, int buffer_size);\n-void str_timestamp_ex(time_t time, char *buffer, int buffer_size, const char *format);\n+void str_timestamp(char *buffer, unsigned int buffer_size);\n+void str_timestamp_ex(time_t time, char *buffer, unsigned int buffer_size, const char *format);\n+#define str_timestampb(BUF) str_timestamp(BUF, sizeof(BUF))\n \n /* Group: Filesystem */\n \n@@ -1096,8 +1108,10 @@ void str_timestamp_ex(time_t time, char *buffer, int buffer_size, const char *fo\n \t\tAlways returns 0.\n */\n typedef int (*FS_LISTDIR_CALLBACK)(const char *name, int is_dir, int dir_type, void *user);\n+typedef int (*FS_LISTDIR_CALLBACK_VERBOSE)(const char *name, const char *full_path, int is_dir, int dir_type, void *user);\n typedef int (*FS_LISTDIR_INFO_CALLBACK)(const char *name, time_t date, int is_dir, int dir_type, void *user);\n int fs_listdir(const char *dir, FS_LISTDIR_CALLBACK cb, int type, void *user);\n+int fs_listdir_verbose(const char *dir, FS_LISTDIR_CALLBACK_VERBOSE cb, int type, void *user);\n int fs_listdir_info(const char *dir, FS_LISTDIR_INFO_CALLBACK cb, int type, void *user);\n \n /*\n@@ -1310,6 +1324,7 @@ void net_stats(NETSTATS *stats);\n \n int str_toint(const char *str);\n int str_toint_base(const char *str, int base);\n+unsigned long str_toulong_base(const char *str, int base);\n float str_tofloat(const char *str);\n int str_isspace(char c);\n int str_isdigit(char c);\n@@ -1503,6 +1518,7 @@ void secure_random_fill(void *bytes, unsigned length);\n \t\tReturns random int (replacement for rand()).\n */\n int secure_rand();\n+unsigned secure_rand_u();\n \n /*\n   Usage:"
    },
    {
      "sha": "0d050f338d291beef753fdd0af87f51ef003a3f3",
      "filename": "src/engine/client/client.cpp",
      "status": "modified",
      "additions": 10,
      "deletions": 3,
      "changes": 13,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/client.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/client.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/client/client.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -1009,9 +1009,9 @@ void CClient::Disconnect()\n \tCALLSTACK_ADD();\n \n \tif(m_DummyConnected)\n-\t\tDummyDisconnect(\"> AllTheHaxx < \");\n+\t\tDummyDisconnect(g_Config.m_ClNamePlatesBroadcastATH ? \"> AllTheHaxx < \" : 0);\n \tif(m_State != IClient::STATE_OFFLINE)\n-\t\tDisconnectWithReason(\"> AllTheHaxx < \");\n+\t\tDisconnectWithReason(g_Config.m_ClNamePlatesBroadcastATH ? \"> AllTheHaxx < \" : 0);\n }\n \n bool CClient::DummyConnected()\n@@ -2938,7 +2938,6 @@ void CClient::InitInterfaces()\n \tm_ServerBrowser.SetBaseInfo(&m_NetClient[2], m_pGameClient->NetVersion());\n \n \tm_Fetcher.Init();\n-\tm_CurlWrapper.Init();\n \n #if !defined(CONF_PLATFORM_MACOSX) && !defined(__ANDROID__)\n \tm_Updater.Init();\n@@ -4066,6 +4065,12 @@ int main(int argc, const char **argv) // ignore_convention\n \t\treturn -1;\n \t}\n \n+\tif(curl_global_init(CURL_GLOBAL_DEFAULT) != 0)\n+\t{\n+\t\tdbg_msg(\"curl\", \"could not initialize libcurl\");\n+\t\treturn -1;\n+\t}\n+\n \t// initialize the debugger\n \tCDebugger *pDebugger = new CDebugger();\n #if defined(CONF_FAMILY_UNIX) && defined(FEATURE_DEBUGGER) && !defined(CONF_DEBUG)\n@@ -4219,6 +4224,8 @@ int main(int argc, const char **argv) // ignore_convention\n */\n \tmem_free(pDebugger);\n \n+\tcurl_global_cleanup();\n+\n \tif(pClient->m_Restarting)\n \t\tshell_execute(argv[0]);\n "
    },
    {
      "sha": "14d40d3209cfa4d637e5b5ef74ece85399c981e5",
      "filename": "src/engine/client/curlwrapper.cpp",
      "status": "modified",
      "additions": 0,
      "deletions": 4,
      "changes": 4,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/curlwrapper.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/curlwrapper.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/client/curlwrapper.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -1,9 +1,5 @@\n #include \"curlwrapper.h\"\n \n-bool CCurlWrapper::Init()\n-{\n-\treturn !curl_global_init(CURL_GLOBAL_DEFAULT);\n-}\n \n void CCurlWrapper::PerformSimplePOST(const char *pUrl, const char *pFields)\n {"
    },
    {
      "sha": "225985b4201305e00ddb17933a6bb50bdef9ee93",
      "filename": "src/engine/client/curlwrapper.h",
      "status": "modified",
      "additions": 4,
      "deletions": 3,
      "changes": 7,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/curlwrapper.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/curlwrapper.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/client/curlwrapper.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -20,12 +20,13 @@ class CCurlWrapper : public ICurlWrapper\n \t\t}\n \t};\n \n-private:\n-\tstatic void PerformPOST_ex(void *pUser);\n \n public:\n-\tvirtual bool Init();\n \tvirtual void PerformSimplePOST(const char *pUrl, const char *pFields);\n+\n+\n+private:\n+\tstatic void PerformPOST_ex(void *pUser);\n };\n \n #endif"
    },
    {
      "sha": "f3b0d561af493bb17f514a3e70c487645d2436e4",
      "filename": "src/engine/client/fetcher.cpp",
      "status": "modified",
      "additions": 1,
      "deletions": 4,
      "changes": 5,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/fetcher.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/fetcher.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/client/fetcher.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -25,16 +25,13 @@ bool CFetcher::Init()\n \tCALLSTACK_ADD();\n \n \tm_pStorage = Kernel()->RequestInterface<IStorageTW>();\n-\tif(!curl_global_init(CURL_GLOBAL_DEFAULT) && (m_pHandle = curl_easy_init()))\n-\t\treturn true;\n-\treturn false;\n+\treturn (m_pHandle = curl_easy_init()) != NULL;\n }\n \n CFetcher::~CFetcher()\n {\n \tif(m_pHandle)\n \t\tcurl_easy_cleanup(m_pHandle);\n-\tcurl_global_cleanup();\n }\n \n void CFetcher::QueueAdd(CFetchTask *pTask, const char *pUrl, const char *pDest, int StorageType, void *pUser, COMPFUNC pfnCompCb, PROGFUNC pfnProgCb)"
    },
    {
      "sha": "85e617dfda7e47fb38256a463b5a1fb1c2083945",
      "filename": "src/engine/client/graphics_threaded.cpp",
      "status": "modified",
      "additions": 41,
      "deletions": 13,
      "changes": 54,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/graphics_threaded.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/graphics_threaded.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/client/graphics_threaded.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -1,4 +1,4 @@\n-/* (c) Magnus Auvinen. See licence.txt in the root of the distribution for more information. */\n+\t/* (c) Magnus Auvinen. See licence.txt in the root of the distribution for more information. */\n /* If you are missing that file, acquire a complete release at teeworlds.com.                */\n \n #include <base/detect.h>\n@@ -334,6 +334,17 @@ int CGraphics_Threaded::UnloadTexture(int Index)\n \tif(Index < 0)\n \t\treturn 0;\n \n+\tfor(std::map<std::string, int>::iterator it = m_TextureCache.begin(); it != m_TextureCache.end(); it++)\n+\t{\n+\t\tif((*it).second == Index)\n+\t\t{\n+\t\t\tif(g_Config.m_Debug)\n+\t\t\t\tdbg_msg(\"graphics/texture\", \"unloading %i : '%s'\", Index, (*it).first.c_str());\n+\t\t\tm_TextureCache.erase(it);\n+\t\t\tbreak;\n+\t\t}\n+\t}\n+\n \tCCommandBuffer::SCommand_Texture_Destroy Cmd;\n \tCmd.m_Slot = Index;\n \tm_pCommandBuffer->AddCommand(Cmd);\n@@ -429,24 +440,41 @@ int CGraphics_Threaded::LoadTextureRaw(int Width, int Height, int Format, const\n int CGraphics_Threaded::LoadTexture(const char *pFilename, int StorageType, int StoreFormat, int Flags)\n {\n \tint l = str_length(pFilename);\n-\tint ID;\n-\tCImageInfo Img;\n+\tint ID = m_InvalidTexture;\n \n \tif(l < 3)\n \t\treturn -1;\n-\tif(LoadPNG(&Img, pFilename, StorageType))\n+\n+\tstd::string FileName(pFilename);\n+\ttry\n+\t{\n+\t\tID = m_TextureCache.at(FileName);\n+\t\tif(g_Config.m_Debug)\n+\t\t\tdbg_msg(\"graphics/texture\", \"loading %i : '%s' from cache\", ID, pFilename);\n+\t}\n+\tcatch(std::out_of_range &e)\n \t{\n-\t\tif (StoreFormat == CImageInfo::FORMAT_AUTO)\n-\t\t\tStoreFormat = Img.m_Format;\n-\n-\t\tID = LoadTextureRaw(Img.m_Width, Img.m_Height, Img.m_Format, Img.m_pData, StoreFormat, Flags);\n-\t\tmem_free(Img.m_pData);\n-\t\tif(ID != m_InvalidTexture && g_Config.m_Debug)\n-\t\t\tdbg_msg(\"graphics/texture\", \"loaded %s\", pFilename);\n-\t\treturn ID;\n+\t\tCImageInfo Img;\n+\t\tif(LoadPNG(&Img, pFilename, StorageType))\n+\t\t{\n+\t\t\tif(StoreFormat == CImageInfo::FORMAT_AUTO)\n+\t\t\t\tStoreFormat = Img.m_Format;\n+\n+\t\t\tID = LoadTextureRaw(Img.m_Width, Img.m_Height, Img.m_Format, Img.m_pData, StoreFormat, Flags);\n+\t\t\tmem_free(Img.m_pData);\n+\t\t\tif(g_Config.m_Debug)\n+\t\t\t{\n+\t\t\t\tif(ID != m_InvalidTexture)\n+\t\t\t\t\tdbg_msg(\"graphics/texture\", \"loaded %s\", pFilename);\n+\t\t\t\telse\n+\t\t\t\t\tdbg_msg(\"graphics/texture\", \"failed to load %s\", pFilename);\n+\t\t\t}\n+\t\t}\n+\n+\t\tm_TextureCache.insert(std::pair<std::string, int>(FileName, ID));\n \t}\n \n-\treturn m_InvalidTexture;\n+\treturn ID;\n }\n \n int CGraphics_Threaded::LoadPNG(CImageInfo *pImg, const char *pFilename, int StorageType)"
    },
    {
      "sha": "f683a6605abceaeea7db6dd84def81f05484a98e",
      "filename": "src/engine/client/graphics_threaded.h",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/graphics_threaded.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/graphics_threaded.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/client/graphics_threaded.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -1,6 +1,8 @@\n #ifndef ENGINE_CLIENT_GRAPHICS_THREADED_H\n #define ENGINE_CLIENT_GRAPHICS_THREADED_H\n \n+#include <map>\n+#include <string>\n #include <engine/graphics.h>\n \n class CCommandBuffer\n@@ -392,6 +394,7 @@ class CGraphics_Threaded : public IEngineGraphics\n \tint m_aTextureIndices[MAX_TEXTURES];\n \tint m_FirstFreeTexture;\n \tint m_TextureMemoryUsage;\n+\tstd::map<std::string, int> m_TextureCache;\n \n \tvoid FlushVertices();\n \tvoid AddVertices(int Count);"
    },
    {
      "sha": "4444e756fea8c47f77e1e9eaef9edd7635623568",
      "filename": "src/engine/client/irc.cpp",
      "status": "modified",
      "additions": 13,
      "deletions": 13,
      "changes": 26,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/irc.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/irc.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/client/irc.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -156,6 +156,9 @@ bool CIRC::CanCloseCom(CIRCCom *pCom)\n \r\n void CIRC::StartConnection() // call this from a thread only!\r\n {\r\n+\tm_apIRCComs.delete_all();\r\n+\tm_apIRCComs.clear();\r\n+\r\n \tNETADDR BindAddr;\r\n \tmem_zero(&m_HostAddress, sizeof(m_HostAddress));\r\n \tmem_zero(&BindAddr, sizeof(BindAddr));\r\n@@ -553,7 +556,7 @@ void CIRC::StartConnection() // call this from a thread only!\n \t\t\t\t\t\t\t\t\t\t\t\t\telse\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\tstr_format(aBuf, sizeof(aBuf),\r\n \t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\t\"*** '%s' sent invalid information!\", aMsgFrom.c_str());\r\n-\t\t\t\t\t\t\t\t\t\t\t\t\tpCom->m_Buffer.push_back(aBuf);\r\n+\t\t\t\t\t\t\t\t\t\t\t\t\tpCom->m_Buffer.push_back(std::string(aBuf));\r\n \t\t\t\t\t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\t\t\t\t}\r\n \r\n@@ -698,12 +701,8 @@ void CIRC::StartConnection() // call this from a thread only!\n \t\t\t\t\t\t\t\tif(!pCom)\r\n \t\t\t\t\t\t\t\t{\r\n \t\t\t\t\t\t\t\t\t// search through all users\r\n-\t\t\t\t\t\t\t\t\tstatic std::list<const char *> s_AvailableQueries;\r\n-\t\t\t\t\t\t\t\t\tstatic int64 LastUpdateTime = 0;\r\n-\t\t\t\t\t\t\t\t\tif(time_get() > LastUpdateTime + 3 * time_freq())\r\n+\t\t\t\t\t\t\t\t\tstd::vector<const char *> s_AvailableQueries;\r\n \t\t\t\t\t\t\t\t\t{\r\n-//\t\t\t\t\t\t\t\t\t\tset_new_tick();\r\n-\t\t\t\t\t\t\t\t\t\tLastUpdateTime = time_get();\r\n \t\t\t\t\t\t\t\t\t\ts_AvailableQueries.clear();\r\n \t\t\t\t\t\t\t\t\t\tfor(unsigned c = 0; c < GetNumComs(); c++)\r\n \t\t\t\t\t\t\t\t\t\t{\r\n@@ -721,7 +720,7 @@ void CIRC::StartConnection() // call this from a thread only!\n \t\t\t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t\t\t}\r\n \r\n-\t\t\t\t\t\t\t\t\tfor(std::list<const char *>::iterator it = s_AvailableQueries.begin(); it != s_AvailableQueries.end(); it++)\r\n+\t\t\t\t\t\t\t\t\tfor(std::vector<const char *>::iterator it = s_AvailableQueries.begin(); it != s_AvailableQueries.end(); it++)\r\n \t\t\t\t\t\t\t\t\t{\r\n \t\t\t\t\t\t\t\t\t\tif(str_comp(*it, aMsgFrom.c_str()) == 0)\r\n \t\t\t\t\t\t\t\t\t\t{\r\n@@ -731,7 +730,7 @@ void CIRC::StartConnection() // call this from a thread only!\n \t\t\t\t\t\t\t\t\t}\r\n \r\n \t\t\t\t\t\t\t\t\tif(!pCom)\r\n-\t\t\t\t\t\t\t\t\t\tpCom = dynamic_cast<CIRCCom *>(GetCom(0)); // otherwise print it to the Status com\r\n+\t\t\t\t\t\t\t\t\t\tpCom = GetCom(0); // otherwise print it to the Status com\r\n \t\t\t\t\t\t\t\t}\r\n \r\n \t\t\t\t\t\t\t\tif(pCom)\r\n@@ -742,7 +741,7 @@ void CIRC::StartConnection() // call this from a thread only!\n \t\t\t\t\t\t\t\t\tif(MsgType == MSG_TYPE_ACTION)\r\n \t\t\t\t\t\t\t\t\t\tpCom->AddMessage(aMsgText.substr(8, -1).c_str());\r\n \t\t\t\t\t\t\t\t\telse\r\n-\t\t\t\t\t\t\t\t\t\tpCom->AddMessage_nofmt(aMsgText.c_str());\r\n+\t\t\t\t\t\t\t\t\t\tpCom->AddMessage_nofmt((aMsgFrom + \": \" + aMsgText).c_str());\r\n \t\t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\t}\r\n \t\t\t\t\t\t\telse\r\n@@ -946,7 +945,11 @@ void CIRC::StartConnection() // call this from a thread only!\n \t\t}\r\n \t}\r\n \r\n-\tDisconnect();\r\n+\tnet_tcp_close(m_Socket);\r\n+\r\n+\tmem_zero(m_CmdToken, sizeof(m_CmdToken));\r\n+\tm_State = STATE_DISCONNECTED;\r\n+\r\n }\r\n \r\n void CIRC::NextRoom()\r\n@@ -1128,10 +1131,7 @@ void CIRC::Disconnect(const char *pReason)\n \t\t\tSendRaw(\"QUIT\");\r\n \t}\r\n \r\n-\tnet_tcp_close(m_Socket);\r\n \tm_State = STATE_DISCONNECTED;\r\n-\r\n-\tmem_zero(m_CmdToken, sizeof(m_CmdToken));\r\n }\r\n \r\n void CIRC::SendMsg(const char *to, const char *msg, int type)\r"
    },
    {
      "sha": "80dcff95612020eb33ea3da58155091498ece6bd",
      "filename": "src/engine/client/lua.cpp",
      "status": "modified",
      "additions": 63,
      "deletions": 21,
      "changes": 84,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/lua.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/lua.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/client/lua.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -7,6 +7,8 @@\n #include <engine/console.h>\n #include <engine/shared/network.h>\n #include <game/localization.h>\n+#include <game/client/gameclient.h>\n+#include <game/client/components/console.h>\n \n #include \"lua.h\"\n #include \"luabinding.h\"\n@@ -51,8 +53,8 @@ void CLua::Shutdown()\n \n \tSaveAutoloads();\n \n-\tm_pLuaFiles.delete_all();\n-\tm_pLuaFiles.clear();\n+\tm_apLuaFiles.delete_all();\n+\tm_apLuaFiles.clear();\n }\n \n void CLua::SaveAutoloads()\n@@ -63,9 +65,9 @@ void CLua::SaveAutoloads()\n \tfs_storage_path(\"Teeworlds\", aFilePath, sizeof(aFilePath));\n \tstr_append(aFilePath, \"/luafiles.cfg\", sizeof(aFilePath));\n \tstd::ofstream f(aFilePath, std::ios::out | std::ios::trunc);\n-\tfor(int i = 0; i < m_pLuaFiles.size(); i++)\n-\t\tif(m_pLuaFiles[i]->GetScriptIsAutoload())\n-\t\t\tf << m_pLuaFiles[i]->GetFilename() << std::endl;\n+\tfor(int i = 0; i < m_apLuaFiles.size(); i++)\n+\t\tif(m_apLuaFiles[i]->GetScriptIsAutoload())\n+\t\t\tf << m_apLuaFiles[i]->GetFilename() << std::endl;\n \tf.close();\n #endif\n }\n@@ -74,7 +76,7 @@ void CLua::SortLuaFiles()\n {\n \tCALLSTACK_ADD();\n \n-\tconst int NUM = m_pLuaFiles.size();\n+\tconst int NUM = m_apLuaFiles.size();\n \tif(NUM < 2)\n \t\treturn;\n \n@@ -84,16 +86,16 @@ void CLua::SortLuaFiles()\n \t\tfor(int i = curr + 1; i < NUM; i++)\n \t\t{\n \t\t\tint c = 4;\n-\t\t\tfor(; str_uppercase(m_pLuaFiles[i]->GetFilename()[c]) == str_uppercase(m_pLuaFiles[minIndex]->GetFilename()[c]); c++);\n-\t\t\tif(str_uppercase(m_pLuaFiles[i]->GetFilename()[c]) < str_uppercase(m_pLuaFiles[minIndex]->GetFilename()[c]))\n+\t\t\tfor(; str_uppercase(m_apLuaFiles[i]->GetFilename()[c]) == str_uppercase(m_apLuaFiles[minIndex]->GetFilename()[c]); c++);\n+\t\t\tif(str_uppercase(m_apLuaFiles[i]->GetFilename()[c]) < str_uppercase(m_apLuaFiles[minIndex]->GetFilename()[c]))\n \t\t\t\tminIndex = i;\n \t\t}\n \n \t\tif(minIndex != curr)\n \t\t{\n-\t\t\tCLuaFile* temp = m_pLuaFiles[curr];\n-\t\t\tm_pLuaFiles[curr] = m_pLuaFiles[minIndex];\n-\t\t\tm_pLuaFiles[minIndex] = temp;\n+\t\t\tCLuaFile* temp = m_apLuaFiles[curr];\n+\t\t\tm_apLuaFiles[curr] = m_apLuaFiles[minIndex];\n+\t\t\tm_apLuaFiles[minIndex] = temp;\n \t\t}\n \t}\n }\n@@ -117,8 +119,8 @@ void CLua::AddUserscript(const char *pFilename)\n \t\treturn;\n \n \t// don't add duplicates\n-\tfor(int i = 0; i < m_pLuaFiles.size(); i++)\n-\t\tif(str_comp(m_pLuaFiles[i]->GetFilename(), pFilename) == 0)\n+\tfor(int i = 0; i < m_apLuaFiles.size(); i++)\n+\t\tif(str_comp(m_apLuaFiles[i]->GetFilename(), pFilename) == 0)\n \t\t\treturn;\n \n \tstd::string file = pFilename;\n@@ -132,9 +134,9 @@ void CLua::AddUserscript(const char *pFilename)\n \tif(g_Config.m_Debug)\n \t\tdbg_msg(\"Lua\", \"adding script '%s' to the list\", file.c_str());\n \n-\tint index = m_pLuaFiles.add(new CLuaFile(this, file, Autoload));\n+\tint index = m_apLuaFiles.add(new CLuaFile(this, file, Autoload));\n \tif(Autoload)\n-\t\tm_pLuaFiles[index]->Init();\n+\t\tm_apLuaFiles[index]->Init();\n #endif\n }\n \n@@ -224,11 +226,27 @@ int CLua::HandleException(const char *pError, CLuaFile *pLF)\n {\n \tif(!pLF)\n \t\treturn -1;\n+\tbool Console = str_comp(pLF->GetFilename(), \"[console]\") == 0;\n+\n+\tif(!pError)\n+\t\tpError = \"no error message\";\n \n \tif(str_comp_nocase(pError, \"not enough memory\") == 0)\n \t{\n-\t\tdbg_msg(\"lua/FATAL\", \"script %s hit OOM condition, killing it!\", pLF->GetFilename());\n-\t\tpLF->Unload(true);\n+\t\tif(!Console)\n+\t\t{\n+\t\t\tdbg_msg(\"lua/FATAL\", \"script %s hit OOM condition, killing it!\", pLF->GetFilename());\n+\t\t\tpLF->Unload(true);\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tlua_close(m_pCGameClient->m_pGameConsole->m_pStatLuaConsole->m_LuaHandler.m_pLuaState);\n+\t\t\tm_pCGameClient->m_pGameConsole->m_pStatLuaConsole->InitLua();\n+\t\t\tm_pCGameClient->m_pGameConsole->m_pStatLuaConsole->m_LuaHandler.m_FullLine = \"\";\n+\t\t\tm_pCGameClient->m_pGameConsole->m_pStatLuaConsole->m_LuaHandler.m_pDebugChild = 0;\n+\t\t\tm_pCGameClient->m_pGameConsole->m_pStatLuaConsole->m_LuaHandler.m_ScopeCount = 0;\n+\t\t\tm_pCGameClient->m_pGameConsole->m_pStatLuaConsole->m_LuaHandler.m_Inited = false;\n+\t\t}\n \t\treturn 0;\n \t}\n \n@@ -245,19 +263,43 @@ int CLua::HandleException(const char *pError, CLuaFile *pLF)\n \t\t\t\tpError = pFilenameEnding+4;\n \t\t}\n \t}\n+\n \tpLF->m_Exceptions.add(std::string(pError));\n+\tif(Console)\n+\t{\n+\t\tchar aLine[512];\n+\t\tstr_format(aLine, sizeof(aLine), \"EXCEPTION(%03i): %s\", pLF->m_Exceptions.size(), pError);\n+\t\tm_pCGameClient->m_pGameConsole->m_pStatLuaConsole->PrintLine(aLine);\n+\t}\n \n \tif(g_Config.m_Debug)\n \t{\n \t\tchar aError[1024];\n-\t\tstr_format(aError, sizeof(aError), \"{%i/100} %s\", pLF->m_Exceptions.size(), pError);\n+\t\tstr_format(aError, sizeof(aError), \"{%i/100} [%s] %s\", pLF->m_Exceptions.size(), pLF->GetFilename(), pError);\n \t\tm_pConsole->Print(IConsole::OUTPUT_LEVEL_DEBUG, \"lua|EXCEPTION\", aError);\n \t}\n \tif(pLF->m_Exceptions.size() < 100)\n \t\treturn pLF->m_Exceptions.size();\n-\tpLF->m_pErrorStr = Localize(\"Error count limit exceeded (too many exceptions thrown)\");\n-\tpLF->Unload(true);\n-\tdbg_msg(\"lua|ERROR\", \"<<< unloaded script '%s' (error count exceeded limit)\", pLF->GetFilename());\n+\tif(!Console)\n+\t{\n+\t\tpLF->m_pErrorStr = Localize(\"Error count limit exceeded (too many exceptions thrown)\");\n+\t\tpLF->Unload(true);\n+\t\tdbg_msg(\"lua|ERROR\", \"<<< unloaded script '%s' (error count exceeded limit)\", pLF->GetFilename());\n+\t}\n+\telse\n+\t{\n+\t\t// reload the lua console\n+\t\t//lua_close(m_pCGameClient->m_pGameConsole->m_pStatLuaConsole->m_LuaHandler.m_pLuaState);\n+\t\t//m_pCGameClient->m_pGameConsole->m_pStatLuaConsole->InitLua();\n+\t\tm_pCGameClient->m_pGameConsole->m_pStatLuaConsole->LoadLuaFile(\"data/luabase/events.lua\");\n+\t\tlua_gc(m_pCGameClient->m_pGameConsole->m_pStatLuaConsole->m_LuaHandler.m_pLuaState, LUA_GCCOLLECT, 0),\n+\t\tm_pCGameClient->m_pGameConsole->m_pStatLuaConsole->m_LuaHandler.m_FullLine = \"\";\n+\t\tm_pCGameClient->m_pGameConsole->m_pStatLuaConsole->m_LuaHandler.m_pDebugChild = 0;\n+\t\tm_pCGameClient->m_pGameConsole->m_pStatLuaConsole->m_LuaHandler.m_ScopeCount = 0;\n+\t\tm_pCGameClient->m_pGameConsole->m_pStatLuaConsole->m_LuaHandler.m_Inited = true; // this must be true if we don't recreate the whole lua state\n+\t\tm_pCGameClient->m_pGameConsole->m_pStatLuaConsole->PrintLine(\"--- LUA CONSOLE RELOADED ---\");\n+\t\tpLF->m_Exceptions.clear();\n+\t}\n \n \treturn 0;\n }"
    },
    {
      "sha": "e90d067f43826a7b78e0fe31f0c988e0d5fb3d50",
      "filename": "src/engine/client/lua.h",
      "status": "modified",
      "additions": 23,
      "deletions": 32,
      "changes": 55,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/lua.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/lua.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/client/lua.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -12,18 +12,21 @@\n \n #if defined(FEATURE_LUA)\n #define LUA_FIRE_EVENT(EVENTNAME, ...) \\\n+\tif(g_Config.m_ClLua) \\\n \t{ \\\n-\t\tif(g_Config.m_ClLua) \\\n-\t\t\tfor(int ijdfg = 0; ijdfg < CLua::Client()->Lua()->GetLuaFiles().size(); ijdfg++) \\\n-\t\t\t{ \\\n-\t\t\t\tCLuaFile *pLF = CLua::Client()->Lua()->GetLuaFiles()[ijdfg]; \\\n-\t\t\t\tif(pLF->State() != CLuaFile::STATE_LOADED) \\\n-\t\t\t\t\tcontinue; \\\n-\t\t\t\tLuaRef lfunc = pLF->GetFunc(EVENTNAME); \\\n-\t\t\t\tif(lfunc) try { lfunc(__VA_ARGS__); CLua::Client()->LuaCheckDrawingState(pLF->L(), EVENTNAME); } catch(std::exception &e) { CLua::Client()->Lua()->HandleException(e, pLF); } \\\n-\t\t\t} \\\n+\t\tfor(int ijdfg = 0; ijdfg < CLua::Client()->Lua()->GetLuaFiles().size(); ijdfg++) \\\n+\t\t{ \\\n+\t\t\tCLuaFile *pLF = CLua::Client()->Lua()->GetLuaFiles()[ijdfg]; \\\n+\t\t\tif(pLF->State() != CLuaFile::STATE_LOADED) \\\n+\t\t\t\tcontinue; \\\n+\t\t\tLuaRef lfunc = pLF->GetFunc(EVENTNAME); \\\n+\t\t\tif(lfunc) try { lfunc(__VA_ARGS__); CLua::Client()->LuaCheckDrawingState(pLF->L(), EVENTNAME); } catch(std::exception &e) { CLua::Client()->Lua()->HandleException(e, pLF); } \\\n+\t\t} \\\n+\t\tif(CGameConsole::m_pStatLuaConsole->m_LuaHandler.m_pDebugChild == NULL) \\\n+\t\t{ \\\n \t\t\tLuaRef confunc = getGlobal(CGameConsole::m_pStatLuaConsole->m_LuaHandler.m_pLuaState, EVENTNAME); \\\n-\t\t\tif(confunc) try { confunc(__VA_ARGS__); } catch(std::exception &e) { printf(\"LUA EXCEPTION: console: %s\\n\", e.what()); } \\\n+\t\t\tif(confunc) try { confunc(__VA_ARGS__); } catch(std::exception &e) { CLua::Client()->Lua()->HandleException(e, CGameConsole::m_pStatLuaConsole->m_LuaHandler.m_pLuaState); } \\\n+\t\t} \\\n \t}\n #else\n #define LUA_FIRE_EVENT(EVENTNAME, ...) ;\n@@ -40,30 +43,10 @@ class CLuaFile;\n using namespace luabridge;\n #endif\n \n-struct LuaBinaryCert\n-{\n-\tchar aIssuer[64];\n-\tchar aDate[64];\n-\tunsigned char aHashMD[SHA256_DIGEST_LENGTH];\n-\tint PermissionFlags;\n-};\n-\n-struct LuaCertHeader\n-{\n-\tenum { LUA_CERT_VERSION = 3 };\n-\tshort Version;\n-\tbool FileBigEndian;\n-\tint DataSize;\n-};\n-\n-class CUnzip\n-{\n-\n-};\n \n class CLua\n {\n-\tarray<CLuaFile*> m_pLuaFiles;\n+\tarray<CLuaFile*> m_apLuaFiles;\n \tarray<std::string> m_aAutoloadFiles;\n \tIStorageTW *m_pStorage;\n \tclass IConsole *m_pConsole;\n@@ -96,7 +79,15 @@ class CLua\n \tstatic CGameClient * m_pCGameClient;\n \n \tvoid SetGameClient(IGameClient *pGameClient);\n-\tarray<CLuaFile*> &GetLuaFiles() { return m_pLuaFiles; }\n+\tarray<CLuaFile*> &GetLuaFiles() { return m_apLuaFiles; }\n+\tint NumActiveScripts() const\n+\t{\n+\t\tint num = 0;\n+\t\tfor(int i = 0; i < m_apLuaFiles.size(); i++)\n+\t\t\tif(m_apLuaFiles[i]->State() == CLuaFile::STATE_LOADED)\n+\t\t\t\tnum++;\n+\t\treturn num;\n+\t}\n \n \tIStorageTW *Storage() const { return m_pStorage; }\n "
    },
    {
      "sha": "24acd7b94d0c8e355a05e8b6b19b4bf97952eef9",
      "filename": "src/engine/client/lua_apidef.cpp",
      "status": "modified",
      "additions": 3,
      "deletions": 2,
      "changes": 5,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/lua_apidef.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/lua_apidef.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/client/lua_apidef.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -185,8 +185,8 @@ void CLuaFile::RegisterLuaCallbacks(lua_State *L) // LUABRIDGE!\n \n \t\t/// Game.Ui\n \t\t.beginClass<CUI>(\"CUI\")\n-\t\t\t.addFunction(\"DoLabel\", &CUI::DoLabel)\n-\t\t\t.addFunction(\"DoLabelScaled\", &CUI::DoLabelScaled)\n+\t\t\t.addFunction(\"DoLabel\", &CUI::DoLabelLua)\n+\t\t\t.addFunction(\"DoLabelScaled\", &CUI::DoLabelScaledLua)\n \t\t\t.addFunction(\"Scale\", &CUI::Scale)\n \t\t\t.addFunction(\"Screen\", &CUI::Screen)\n \t\t\t.addFunction(\"MouseX\", &CUI::MouseX)\n@@ -500,6 +500,7 @@ void CLuaFile::RegisterLuaCallbacks(lua_State *L) // LUABRIDGE!\n \t\t\t.addData(\"LocalTee\", &CGameClient::m_PredictedChar) */\n \n \t\t\t.addFunction(\"IntersectCharacter\", &CGameClient::IntersectCharacterLua)\n+\t\t\t.addFunction(\"SendKill\", &CGameClient::SendKill)\n \t\t.endClass()\n \n \t\t// MAIN NAMESPACE"
    },
    {
      "sha": "d5a0f8c8256a9d5cf1926e9a5cdf1e46993458e3",
      "filename": "src/engine/client/luabinding.cpp",
      "status": "modified",
      "additions": 5,
      "deletions": 0,
      "changes": 5,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/luabinding.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/luabinding.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/client/luabinding.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -197,7 +197,12 @@ int CLuaBinding::LuaPrintOverride(lua_State *L)\n \t// pop all to clean up the stack\n     lua_pop(L, nargs);\n \n+\tCGameClient *pGameClient = (CGameClient *)CLua::GameClient();\n+\tif(pGameClient->m_pGameConsole->m_pStatLuaConsole->m_LuaHandler.m_pDebugChild == L)\n+\t\tpGameClient->m_pGameConsole->m_pStatLuaConsole->PrintLine(aMsg);\n+\n \tdbg_msg(aSys, \"%s\", aMsg);\n+\n \treturn 0;\n }\n "
    },
    {
      "sha": "28dbea132b1099bdcadd963e8f6563076be8e078",
      "filename": "src/engine/client/luafile.cpp",
      "status": "modified",
      "additions": 1,
      "deletions": 2,
      "changes": 3,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/luafile.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/luafile.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/client/luafile.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -139,7 +139,6 @@ void CLuaFile::OpenLua()\n \n \tlua_atpanic(m_pLuaState, CLua::Panic);\n \tlua_register(m_pLuaState, \"errorfunc\", CLua::ErrorFunc);\n-\t//lua_register(m_pLuaState, \"print\", CLuaFile::LuaPrintOverride);\n \n \t//luaL_openlibs(m_pLuaState);  // we don't need certain libs -> open them all manually\n \n@@ -148,7 +147,7 @@ void CLuaFile::OpenLua()\n \tluaopen_string(m_pLuaState);// string.* functions\n \tluaopen_table(m_pLuaState);\t// table operations\n \tluaopen_bit(m_pLuaState);\t// bit operations\n-\t//luaopen_jit(m_pLuaState);\t// control the jit-compiler [don't needed]\n+\t//luaopen_jit(m_pLuaState);\t// control the jit-compiler [not needed]\n \n #endif\n }"
    },
    {
      "sha": "38af7742efd87463024bd383f3a3280d66ac196f",
      "filename": "src/engine/client/text.cpp",
      "status": "modified",
      "additions": 20,
      "deletions": 9,
      "changes": 29,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/text.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/client/text.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/client/text.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -11,6 +11,7 @@\n \n // ft2 texture\n #include <ft2build.h>\n+#include <game/client/components/fontmgr.h>\n #include FT_FREETYPE_H\n \n // TODO: Refactor: clean this up\n@@ -491,7 +492,7 @@ class CTextRender : public IEngineTextRender\n \t}\n \n \n-\tvirtual void SetCursor(CTextCursor *pCursor, float x, float y, float FontSize, int Flags)\n+\tvirtual void SetCursor(CTextCursor *pCursor, float x, float y, float FontSize, int Flags, CFont *pFont = 0)\n \t{\n \t\tmem_zero(pCursor, sizeof(*pCursor));\n \t\tpCursor->m_FontSize = FontSize;\n@@ -501,32 +502,33 @@ class CTextRender : public IEngineTextRender\n \t\tpCursor->m_Y = y;\n \t\tpCursor->m_LineCount = 1;\n \t\tpCursor->m_LineWidth = -1;\n-\t\tpCursor->m_Flags = Flags;\n \t\tpCursor->m_CharCount = 0;\n+\t\tpCursor->m_Flags = Flags;\n+\t\tpCursor->m_pFont = pFont;\n \t}\n \n \n-\tvirtual void Text(void *pFontSetV, float x, float y, float Size, const char *pText, float MaxWidth)\n+\tvirtual void Text(CFont *pFontSetV, float x, float y, float Size, const char *pText, float MaxWidth)\n \t{\n \t\tCTextCursor Cursor;\n-\t\tSetCursor(&Cursor, x, y, Size, TEXTFLAG_RENDER);\n+\t\tSetCursor(&Cursor, x, y, Size, TEXTFLAG_RENDER, pFontSetV);\n \t\tCursor.m_LineWidth = MaxWidth;\n \t\tTextEx(&Cursor, pText, -1);\n \t}\n \n-\tvirtual float TextWidth(void *pFontSetV, float Size, const char *pText, int Length, float LineWidth = -1)\n+\tvirtual float TextWidth(CFont *pFontSetV, float Size, const char *pText, int Length, float LineWidth = -1)\n \t{\n \t\tCTextCursor Cursor;\n-\t\tSetCursor(&Cursor, 0, 0, Size, 0);\n+\t\tSetCursor(&Cursor, 0, 0, Size, 0, pFontSetV);\n \t\tif(LineWidth > 0)\n \t\t\tCursor.m_LineWidth = LineWidth;\n \t\treturn TextEx(&Cursor, pText, Length);\n \t}\n \n-\tvirtual int TextLineCount(void *pFontSetV, float Size, const char *pText, float LineWidth)\n+\tvirtual int TextLineCount(CFont *pFontSetV, float Size, const char *pText, float LineWidth)\n \t{\n \t\tCTextCursor Cursor;\n-\t\tSetCursor(&Cursor, 0, 0, Size, 0);\n+\t\tSetCursor(&Cursor, 0, 0, Size, 0, pFontSetV);\n \t\tCursor.m_LineWidth = LineWidth;\n \t\tTextEx(&Cursor, pText, -1);\n \t\treturn Cursor.m_LineCount;\n@@ -553,7 +555,16 @@ class CTextRender : public IEngineTextRender\n \t\tif(!pText)\n \t\t\treturn -1.0f;\n \n-\t\tCFont *pFont = pCursor->m_pFont;\n+\t\tif(str_length(pText) == 0)\n+\t\t\treturn 0.0f;\n+\n+\t\tCFont *pFont = NULL;\n+\t\tif(pCursor->m_pFont)\n+\t\t{\n+\t\t\tpFont = pCursor->m_pFont;\n+\t\t\tif(!pFont)\n+\t\t\t\tpFont = pCursor->m_pFont;\n+\t\t}\n \t\tCFontSizeData *pSizeData = NULL;\n \n \t\t//dbg_msg(\"textrender\", \"rendering text '%s'\", text);"
    },
    {
      "sha": "6eb5c62043f2f42e184ae8248acef73555c6eda5",
      "filename": "src/engine/server/server.cpp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/server/server.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/server/server.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/server/server.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -1730,7 +1730,7 @@ int CServer::Run()\n \t\t\t\t\t\t\t\tm_aClients[c].m_DnsblLookup.m_Job.Status() == CJob::STATE_DONE)\n \t\t\t\t\t{\n \n-\t\t\t\t\t\tif (m_aClients[c].m_DnsblLookup.m_Addr.type == NETTYPE_INVALID)\n+\t\t\t\t\t\tif (m_aClients[c].m_DnsblLookup.m_Job.Result() != 0)\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\t// entry not found -> whitelisted\n \t\t\t\t\t\t\tm_aClients[c].m_DnsblState = CClient::DNSBL_STATE_WHITELISTED;"
    },
    {
      "sha": "c6cbdc74cb2930199a7991c317982935f746813a",
      "filename": "src/engine/shared/config_variables.h",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/shared/config_variables.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/shared/config_variables.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/shared/config_variables.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -128,6 +128,7 @@ MACRO_CONFIG_INT(GfxVsync, gfx_vsync, 0, 0, 1, CFGFLAG_SAVE|CFGFLAG_CLIENT, \"Ver\n MACRO_CONFIG_INT(GfxResizable, gfx_resizable, 0, 0, 1, CFGFLAG_SAVE|CFGFLAG_CLIENT, \"Enables window resizing\")\n MACRO_CONFIG_INT(GfxDisplayAllModes, gfx_display_all_modes, 0, 0, 1, CFGFLAG_SAVE|CFGFLAG_CLIENT, \"\")\n MACRO_CONFIG_INT(GfxTextureCompression, gfx_texture_compression, 0, 0, 1, CFGFLAG_SAVE|CFGFLAG_CLIENT, \"Use texture compression\")\n+//MACRO_CONFIG_INT(GfxTextureCaching, gfx_texture_caching, 1, 0, 1, CFGFLAG_SAVE|CFGFLAG_CLIENT, \"Enable texture caching; uses more RAM but reduces some loading times\")\n #if defined(__ANDROID__)\n MACRO_CONFIG_INT(GfxHighDetail, gfx_high_detail, 0, 0, 1, CFGFLAG_SAVE|CFGFLAG_CLIENT, \"High detail\")\n MACRO_CONFIG_INT(GfxLowGraphics, gfx_low_graphics, 0, 0, 1, CFGFLAG_SAVE|CFGFLAG_CLIENT, \"Disables various graphic effects\")\n@@ -200,7 +201,7 @@ MACRO_CONFIG_INT(EcBantime, ec_bantime, 0, 0, 1440, CFGFLAG_ECON, \"The time a cl\n MACRO_CONFIG_INT(EcAuthTimeout, ec_auth_timeout, 30, 1, 120, CFGFLAG_ECON, \"Time in seconds before the the econ authentification times out\")\n MACRO_CONFIG_INT(EcOutputLevel, ec_output_level, 1, 0, 2, CFGFLAG_ECON, \"Adjusts the amount of information in the external console\")\n \n-MACRO_CONFIG_INT(Debug, debug, 0, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SERVER, \"Debug mode\")\n+MACRO_CONFIG_INT(Debug, debug, 0, 0, 3, CFGFLAG_CLIENT|CFGFLAG_SERVER, \"Debug mode\")\n MACRO_CONFIG_INT(DbgDirections, dbg_directions, 0, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SERVER, \"Debug player aiming directions\")\n MACRO_CONFIG_INT(DbgStress, dbg_stress, 0, 0, 0, CFGFLAG_CLIENT|CFGFLAG_SERVER, \"Stress systems\")\n MACRO_CONFIG_INT(DbgStressNetwork, dbg_stress_network, 0, 0, 0, CFGFLAG_CLIENT|CFGFLAG_SERVER, \"Stress network\")"
    },
    {
      "sha": "024f1c264da4e324bc1c32565aa0680b70b926be",
      "filename": "src/engine/shared/console.cpp",
      "status": "modified",
      "additions": 4,
      "deletions": 4,
      "changes": 8,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/shared/console.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/shared/console.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/shared/console.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -439,15 +439,15 @@ void CConsole::ExecuteLineStroked(int Stroke, const char *pStr, int ClientID)\n \t\t\t\t\t\t\t{\n \t\t\t\t\t\t\t\tfor (int i = 0; i < MAX_CLIENTS; i++)\n \t\t\t\t\t\t\t\t{\n-\t\t\t\t\t\t\t\t\t\tResult.SetVictim(i);\n-\t\t\t\t\t\tpCommand->m_pfnCallback(&Result, pCommand->m_pUserData);\n+\t\t\t\t\t\t\t\t\tResult.SetVictim(i);\n+\t\t\t\t\t\t\t\t\tpCommand->m_pfnCallback(&Result, pCommand->m_pUserData);\n \t\t\t\t\t\t\t\t}\n \t\t\t\t\t\t\t}\n \t\t\t\t\t\t\telse\n-\t\t\t\t\t\tpCommand->m_pfnCallback(&Result, pCommand->m_pUserData);\n+\t\t\t\t\t\t\t\tpCommand->m_pfnCallback(&Result, pCommand->m_pUserData);\n \t\t\t\t\t\t}\n \t\t\t\t\t\telse\n-\t\t\t\t\t\tpCommand->m_pfnCallback(&Result, pCommand->m_pUserData);\n+\t\t\t\t\t\t\tpCommand->m_pfnCallback(&Result, pCommand->m_pUserData);\n \n \t\t\t\t\t\tif (pCommand->m_Flags&CMDFLAG_TEST)\n \t\t\t\t\t\t\tm_Cheated = true;"
    },
    {
      "sha": "42d18d82d19cc008e1e0a42ec0629e1cbe40ee94",
      "filename": "src/engine/shared/jobs.cpp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/shared/jobs.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/shared/jobs.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/shared/jobs.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -49,7 +49,7 @@ int CJobPool::Init(int NumThreads)\n {\n \t// start threads\n \tfor(int i = 0; i < NumThreads; i++)\n-\t\tthread_init(WorkerThread, this);\n+\t\tthread_detach(thread_init(WorkerThread, this));\n \treturn 0;\n }\n "
    },
    {
      "sha": "e0d5e7f05dc54538c1e6744df9535cfba33ff6d3",
      "filename": "src/engine/shared/protocol.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/shared/protocol.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/shared/protocol.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/shared/protocol.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -108,6 +108,7 @@ enum\n \tVERSION_DDNET_HOOKDURATION_TUNE = 607,\n \tVERSION_DDNET_FIREDELAY_TUNE = 701,\n \tVERSION_DDNET_UPDATER_FIXED = 707,\n+\tVERSION_DDNET_GAMETICK = 10042,\n };\n \n #endif"
    },
    {
      "sha": "1d5f64b6f43d4efa6134845248101cb22bb1b5e7",
      "filename": "src/engine/shared/storage.cpp",
      "status": "modified",
      "additions": 80,
      "deletions": 2,
      "changes": 82,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/shared/storage.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/shared/storage.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/shared/storage.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -112,8 +112,18 @@ class CStorage : public IStorageTW\n \n \t\t\tif(Pos >= MAX_PATH_LENGTH || !File)\n \t\t\t{\n-\t\t\t\tdbg_msg(\"storage\", \"couldn't open storage.cfg\");\n-\t\t\t\treturn;\n+\t\t\t\tdbg_msg(\"storage\", \"couldn't open storage.cfg, generating one\");\n+\t\t\t\tif(!GenerateStorageCfg())\n+\t\t\t\t{\n+\t\t\t\t\tdbg_msg(\"storage\", \"failed to generate storage.cfg\");\n+\t\t\t\t\treturn;\n+\t\t\t\t}\n+\t\t\t\tFile = io_open(\"storage.cfg\", IOFLAG_READ);\n+\t\t\t\tif(!File)\n+\t\t\t\t{\n+\t\t\t\t\tdbg_msg(\"storage\", \"couldn't open storage.cfg after generating it\");\n+\t\t\t\t\treturn;\n+\t\t\t\t}\n \t\t\t}\n \t\t}\n \n@@ -310,6 +320,27 @@ class CStorage : public IStorageTW\n \t\t}\n \t}\n \n+\tvirtual int ListDirectoryVerbose(int Type, const char *pPath, FS_LISTDIR_CALLBACK_VERBOSE pfnCallback, void *pUser)\n+\t{\n+\t\tchar aBuffer[MAX_PATH_LENGTH];\n+\t\tint result = 0;\n+\t\tif(Type == TYPE_ALL)\n+\t\t{\n+\t\t\t// list all available directories\n+\t\t\tfor(int i = 0; i < m_NumPaths; ++i)\n+\t\t\t\tresult = fs_listdir_verbose(GetPath(i, pPath, aBuffer, sizeof(aBuffer)), pfnCallback, i, pUser);\n+\t\t}\n+\t\telse if(Type >= 0 && Type < m_NumPaths)\n+\t\t{\n+\t\t\t// list wanted directory\n+\t\t\tresult = fs_listdir_verbose(GetPath(Type, pPath, aBuffer, sizeof(aBuffer)), pfnCallback, Type, pUser);\n+\t\t}\n+\t\telse\n+\t\t\tdbg_msg(\"storage\", \"tried to list directory '%s' with invalid type %i\", pPath, Type);\n+\n+\t\treturn result;\n+\t}\n+\n \tvirtual const char *GetPath(int Type, const char *pDir, char *pBuffer, unsigned BufferSize)\n \t{\n \t\tstr_format(pBuffer, BufferSize, \"%s%s%s\", m_aaStoragePaths[Type], !m_aaStoragePaths[Type][0] ? \"\" : \"/\", pDir);\n@@ -495,6 +526,53 @@ class CStorage : public IStorageTW\n \t\treturn m_aExecutableName;\n \t}\n \n+\tbool GenerateStorageCfg() const\n+\t{\n+\t\tIOHANDLE file = io_open(\"storage.cfg\", IOFLAG_WRITE);\n+\t\tif(!file)\n+\t\t\treturn false;\n+\n+\t\t#define write_line(line) io_write(file, line, sizeof(line)-1); io_write_newline(file)\n+\n+\t\twrite_line(\"####\");\n+\t\twrite_line(\"# This specifies where and in which order Teeworlds looks\");\n+\t\twrite_line(\"# for its data (sounds, skins, ...). The search goes top\");\n+\t\twrite_line(\"# down which means the first path has the highest priority.\");\n+\t\twrite_line(\"# Furthermore the top entry also defines the save path where\");\n+\t\twrite_line(\"# all data (settings.cfg, screenshots, ...) are stored.\");\n+\t\twrite_line(\"# There are 3 special paths available:\");\n+\t\twrite_line(\"#    $USERDIR\");\n+\t\twrite_line(\"#    - ~/.appname on UNIX based systems\");\n+\t\twrite_line(\"#    - ~/Library/Applications Support/appname on Mac OS X\");\n+\t\twrite_line(\"#    - %APPDATA%/Appname on Windows based systems\");\n+\t\twrite_line(\"#    $DATADIR\");\n+\t\twrite_line(\"#    - the 'data' directory which is part of an official\");\n+\t\twrite_line(\"#    release\");\n+\t\twrite_line(\"#    $CURRENTDIR\");\n+\t\twrite_line(\"#    - current working directory\");\n+\t\twrite_line(\"#\");\n+\t\twrite_line(\"#\");\n+\t\twrite_line(\"# The default file has the following entries:\");\n+\t\twrite_line(\"#    add_path $USERDIR\");\n+\t\twrite_line(\"#    add_path $DATADIR\");\n+\t\twrite_line(\"#    add_path $CURRENTDIR\");\n+\t\twrite_line(\"#\");\n+\t\twrite_line(\"# A customised one could look like this:\");\n+\t\twrite_line(\"#    add_path user\");\n+\t\twrite_line(\"#    add_path mods/mymod\");\n+\t\twrite_line(\"####\");\n+\t\twrite_line(\"\");\n+\t\twrite_line(\"add_path $USERDIR\");\n+\t\twrite_line(\"add_path $DATADIR\");\n+\t\twrite_line(\"add_path $CURRENTDIR\");\n+\n+\t\t#undef write_line\n+\n+\t\tio_close(file);\n+\n+\t\treturn true;\n+\t}\n+\n \tstatic IStorageTW *Create(const char *pApplicationName, int StorageType, int NumArgs, const char **ppArguments)\n \t{\n \t\tCStorage *p = new CStorage();"
    },
    {
      "sha": "9a89dc914b7e50deb46d50d21f5c74b8edaf2088",
      "filename": "src/engine/shared/storage.h",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/shared/storage.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/shared/storage.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/shared/storage.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -24,7 +24,7 @@ class CStorage : public IStorageTW\n \n \tint Init(const char *pApplicationName, const char *pArgv0);\n \n-\tint FindDatadir(const char *pArgv0);\n+\tvoid FindDatadir(const char *pArgv0);\n \n \tvirtual void ListDirectory(int Types, const char *pPath, FS_LISTDIR_CALLBACK pfnCallback, void *pUser);\n \tvirtual void ListDirectoryInfo(int Type, const char *pPath, FS_LISTDIR_INFO_CALLBACK pfnCallback, void *pUser) = 0;"
    },
    {
      "sha": "1d50163718abafa82cba2018b8ad1ce14d71d262",
      "filename": "src/engine/storage.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/storage.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/storage.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/storage.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -29,6 +29,7 @@ class IStorageTW : public IInterface\n \t};\n \n \tvirtual void ListDirectory(int Type, const char *pPath, FS_LISTDIR_CALLBACK pfnCallback, void *pUser) = 0;\n+\tvirtual int ListDirectoryVerbose(int Type, const char *pPath, FS_LISTDIR_CALLBACK_VERBOSE pfnCallback, void *pUser) = 0;\n \tvirtual void ListDirectoryInfo(int Type, const char *pPath, FS_LISTDIR_INFO_CALLBACK pfnCallback, void *pUser) = 0;\n \tvirtual IOHANDLE OpenFile(const char *pFilename, int Flags, int Type, char *pBuffer = 0, int BufferSize = 0) = 0;\n \tvirtual bool FindFile(const char *pFilename, const char *pPath, int Type, char *pBuffer, int BufferSize) = 0;"
    },
    {
      "sha": "dbf7f97ad57befb65b290a30b2c7be01b4e642c6",
      "filename": "src/engine/textrender.h",
      "status": "modified",
      "additions": 16,
      "deletions": 4,
      "changes": 20,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/textrender.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/engine/textrender.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/engine/textrender.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -2,6 +2,7 @@\n /* If you are missing that file, acquire a complete release at teeworlds.com.                */\n #ifndef ENGINE_TEXTRENDER_H\n #define ENGINE_TEXTRENDER_H\n+\n #include \"kernel.h\"\n \n enum\n@@ -11,7 +12,18 @@ enum\n \tTEXTFLAG_STOP_AT_END=4\n };\n \n+enum\n+{\n+\tFONT_REGULAR = 0,\n+\tFONT_BOLD,\n+\tFONT_ITALIC,\n+\tFONT_BOLD_ITALIC,\n+\tFONT_NUM_TYPES\n+};\n+\n+\n class CFont;\n+class CFontFile;\n \n class CTextCursor\n {\n@@ -34,7 +46,7 @@ class ITextRender : public IInterface\n {\n \tMACRO_INTERFACE(\"textrender\", 0)\n public:\n-\tvirtual void SetCursor(CTextCursor *pCursor, float x, float y, float FontSize, int Flags) = 0;\n+\tvirtual void SetCursor(CTextCursor *pCursor, float x, float y, float FontSize, int Flags, class CFont *pFont = 0) = 0;\n \n \tvirtual CFont *LoadFont(const char *pFilename) = 0;\n \tvirtual void DestroyFont(CFont *pFont) = 0;\n@@ -47,9 +59,9 @@ class ITextRender : public IInterface\n \t// old foolish interface\n \tvirtual void TextColor(float r, float g, float b, float a) = 0;\n \tvirtual void TextOutlineColor(float r, float g, float b, float a) = 0;\n-\tvirtual void Text(void *pFontSetV, float x, float y, float Size, const char *pText, float MaxWidth) = 0;\n-\tvirtual float TextWidth(void *pFontSetV, float Size, const char *pText, int Length, float LineWidth = -1) = 0;\n-\tvirtual int TextLineCount(void *pFontSetV, float Size, const char *pText, float LineWidth) = 0;\n+\tvirtual void Text(class CFont *pFontSetV, float x, float y, float Size, const char *pText, float MaxWidth) = 0;\n+\tvirtual float TextWidth(class CFont *pFontSetV, float Size, const char *pText, int Length, float LineWidth = -1) = 0;\n+\tvirtual int TextLineCount(class CFont *pFontSetV, float Size, const char *pText, float LineWidth) = 0;\n };\n \n class IEngineTextRender : public ITextRender"
    },
    {
      "sha": "d5f6ef4e460241e0b75d04af9b601ca33963d60c",
      "filename": "src/game/client/component.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/component.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/component.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/component.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -37,6 +37,7 @@ class CComponent\n \tvirtual void OnStateChange(int NewState, int OldState) {};\n \tvirtual void OnConsoleInit() {};\n \tvirtual void OnInit() {};\n+\tvirtual void OnShutdown() {};\n \tvirtual void OnReset() {};\n \tvirtual void OnRender() {};\n \tvirtual void OnRelease() {};"
    },
    {
      "sha": "41449bb0c2c45fb6a17865599ebe80ed9178ea95",
      "filename": "src/game/client/components/binds.cpp",
      "status": "modified",
      "additions": 31,
      "deletions": 1,
      "changes": 32,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/binds.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/binds.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/binds.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -175,6 +175,7 @@ void CBinds::OnConsoleInit()\n \t\tpConfig->RegisterCallback(ConfigSaveCallback, this);\n \n \tConsole()->Register(\"bind\", \"s[key] r[command]\", CFGFLAG_CLIENT, ConBind, this, \"Bind key to execute the command\");\n+\tConsole()->Register(\"bind_print\", \"s[key]\", CFGFLAG_CLIENT, ConBindPrint, this, \"Print command executed by this keybinding\");\n \tConsole()->Register(\"unbind\", \"s[key]\", CFGFLAG_CLIENT, ConUnbind, this, \"Unbind key\");\n \tConsole()->Register(\"unbindall\", \"\", CFGFLAG_CLIENT, ConUnbindAll, this, \"Unbind all keys\");\n \tConsole()->Register(\"find_bind\", \"r[command]\", CFGFLAG_CLIENT, ConFindBind, this, \"Find the key the command is bind to\");\n@@ -204,6 +205,35 @@ void CBinds::ConBind(IConsole::IResult *pResult, void *pUserData)\n \tpBinds->Bind(id, pResult->GetString(1));\n }\n \n+void CBinds::ConBindPrint(IConsole::IResult *pResult, void *pUserData)\n+{\n+\tCBinds *pBinds = (CBinds *)pUserData;\n+\tconst char *pKeyName = pResult->GetString(0);\n+\tint id = pBinds->GetKeyID(pKeyName);\n+\n+\tif (!id)\n+\t{\n+\t\tchar aBuf[256];\n+\t\tstr_format(aBuf, sizeof(aBuf), \"key %s not found\", pKeyName);\n+\t\tpBinds->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"binds\", aBuf);\n+\t}\n+\telse \n+\t{\n+\t\tchar aBuf[256];\n+\n+\t\tif (pBinds->m_aaKeyBindings[id][0] == '\\0')\n+\t\t{\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s (%d) is not bound\", pKeyName, id);\n+\t\t}\n+\t\telse \n+\t\t{\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s (%d) = %s\", pKeyName, id, pBinds->m_aaKeyBindings[id]);\n+\t\t}\n+\t\t\n+\t\tpBinds->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"binds\", aBuf);\n+\t}\n+}\n+\n \n void CBinds::ConUnbind(IConsole::IResult *pResult, void *pUserData)\n {\n@@ -265,7 +295,7 @@ void CBinds::ConDumpBind(IConsole::IResult *pResult, void *pUserData)\n \t\tpBinds->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"binds\", aBuf);\n \t\treturn;\n \t}\n-\tpBinds->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"binds\", \"no command bound to key %s\", pResult->GetString(0));\n+\tpBinds->Console()->Printf(IConsole::OUTPUT_LEVEL_STANDARD, \"binds\", \"no command bound to key %s\", pResult->GetString(0));\n \n }\n "
    },
    {
      "sha": "d5a69f7c20b5b74d09cfca36feaecd2b21912b62",
      "filename": "src/game/client/components/binds.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/binds.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/binds.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/binds.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -12,6 +12,7 @@ class CBinds : public CComponent\n \tint GetKeyID(const char *pKeyName);\n \n \tstatic void ConBind(IConsole::IResult *pResult, void *pUserData);\n+\tstatic void ConBindPrint(IConsole::IResult *pResult, void *pUserData);\n \tstatic void ConUnbind(IConsole::IResult *pResult, void *pUserData);\n \tstatic void ConUnbindAll(IConsole::IResult *pResult, void *pUserData);\n \tstatic void ConFindBind(IConsole::IResult *pResult, void *pUserData);"
    },
    {
      "sha": "b5b6f3b73cf7c67dcd59ef75cc2529999b99b7ea",
      "filename": "src/game/client/components/chat.cpp",
      "status": "modified",
      "additions": 66,
      "deletions": 25,
      "changes": 91,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/chat.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/chat.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/chat.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -33,18 +33,29 @@ CChat::CChat()\n {\n \tOnReset();\n \n-\tm_pTranslator = new(mem_alloc(sizeof(CTranslator), sizeof(void*))) CTranslator();\n-\tm_pTranslator->Init();\n-\n \tm_GotKeys = false;\n \t//m_pKeyPair = GenerateKeyPair(512, 3);\n }\n \n-CChat::~CChat()\n+\n+void CChat::OnInit()\n+{\n+\tm_pTranslator = new CTranslator();\n+\tif(!m_pTranslator->Init())\n+\t{\n+\t\tdelete m_pTranslator;\n+\t\tm_pTranslator = 0;\n+\t\tdbg_msg(\"chat\", \"failed to init translator\");\n+\t}\n+}\n+\n+void CChat::OnShutdown()\n {\n \tif(m_pTranslator)\n-\t\tmem_free(m_pTranslator);\n-\tm_pTranslator = 0;\n+\t{\n+//\t\tm_pTranslator->Shutdown();\n+\t\tdelete m_pTranslator;\n+\t}\n }\n \n void CChat::OnReset()\n@@ -184,6 +195,9 @@ bool CChat::OnInput(IInput::CEvent Event)\n \tif(m_Mode == MODE_NONE)\n \t\treturn false;\n \n+\tif(m_pClient->m_pMenus->IsActive() && Event.m_Key != KEY_ESCAPE)\n+\t\treturn false;\n+\n \tif(Event.m_Flags&IInput::FLAG_PRESS)\n \t{\n \t\tif(Input()->KeyIsPressed(KEY_LCTRL))\n@@ -228,7 +242,7 @@ bool CChat::OnInput(IInput::CEvent Event)\n \t\t\telse // handle skipping: jump to spaces and special ASCII characters\n \t\t\t{\n \t\t\t\tint SearchDirection = 0;\n-\t\t\t\tif(Event.m_Key == KEY_LEFT)\n+\t\t\t\tif(Event.m_Key == KEY_LEFT || Event.m_Key == KEY_BACKSPACE)\n \t\t\t\t\tSearchDirection = -1;\n \t\t\t\telse if(Event.m_Key == KEY_RIGHT)\n \t\t\t\t\tSearchDirection = 1;\n@@ -238,18 +252,31 @@ bool CChat::OnInput(IInput::CEvent Event)\n \t\t\t\t\tint FoundAt = SearchDirection > 0 ? m_Input.GetLength()-1 : 0;\n \t\t\t\t\tfor(int i = m_Input.GetCursorOffset()+SearchDirection; SearchDirection > 0 ? i < m_Input.GetLength()-1 : i > 0; i+=SearchDirection)\n \t\t\t\t\t{\n-\t\t\t\t\t\tint next = i+SearchDirection;\n-\t\t\t\t\t\tif(\t(m_Input.GetString()[next] == ' ') ||\n-\t\t\t\t\t\t\t   (m_Input.GetString()[next] >= 32 && m_Input.GetString()[next] <= 47) ||\n-\t\t\t\t\t\t\t   (m_Input.GetString()[next] >= 58 && m_Input.GetString()[next] <= 64) ||\n-\t\t\t\t\t\t\t   (m_Input.GetString()[next] >= 91 && m_Input.GetString()[next] <= 96) )\n+\t\t\t\t\t\tint Next = i+SearchDirection;\n+\t\t\t\t\t\tif(\t(m_Input.GetString()[Next] == ' ') ||\n+\t\t\t\t\t\t\t   (m_Input.GetString()[Next] >= 32 && m_Input.GetString()[Next] <= 47) ||\n+\t\t\t\t\t\t\t   (m_Input.GetString()[Next] >= 58 && m_Input.GetString()[Next] <= 64) ||\n+\t\t\t\t\t\t\t   (m_Input.GetString()[Next] >= 91 && m_Input.GetString()[Next] <= 96) )\n \t\t\t\t\t\t{\n \t\t\t\t\t\t\tFoundAt = i;\n \t\t\t\t\t\t\tif(SearchDirection < 0)\n \t\t\t\t\t\t\t\tFoundAt++;\n \t\t\t\t\t\t\tbreak;\n \t\t\t\t\t\t}\n \t\t\t\t\t}\n+\t\t\t\t\tif(Event.m_Key == KEY_BACKSPACE)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tif(m_Input.GetCursorOffset() != 0)\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tchar aText[512];\n+\t\t\t\t\t\t\tstr_copy(aText, m_Input.GetString(), FoundAt + 1);\n+\t\t\t\t\t\t\tif(m_Input.GetCursorOffset() != str_length(m_Input.GetString()))\n+\t\t\t\t\t\t\t{\n+\t\t\t\t\t\t\t\tstr_append(aText, m_Input.GetString() + m_Input.GetCursorOffset(), str_length(m_Input.GetString()));\n+\t\t\t\t\t\t\t}\n+\t\t\t\t\t\t\tm_Input.Set(aText);\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n \t\t\t\t\tm_Input.SetCursorOffset(FoundAt);\n \t\t\t\t}\n \t\t\t}\n@@ -601,7 +628,7 @@ void CChat::OnMessage(int MsgType, void *pRawMsg)\n \t\t\t}\n \t\t}\n \n-\t\tif(g_Config.m_ClTransIn &&\n+\t\tif(TranslatorAvailable() && g_Config.m_ClTransIn &&\n \t\t\tstr_length(pMsg->m_pMessage) > 4 &&\n \t\t\tpMsg->m_ClientID != m_pClient->m_Snap.m_LocalClientID &&\n \t\t\tpMsg->m_ClientID != -1)\n@@ -825,18 +852,21 @@ void CChat::OnRender()\n {\n \tCALLSTACK_ADD();\n \n-\tif(m_pTranslator->GetTranslation())\n+\tif(TranslatorAvailable())\n \t{\n-\t\tchar aBuf[512];\n-\t\tif(m_pTranslator->GetTranslation()->m_In)\n+\t\tif(m_pTranslator->GetTranslation())\n \t\t{\n-\t\t\tstr_format(aBuf, sizeof(aBuf), \"'%s' (%s → %s)\", m_pTranslator->GetTranslation()->m_Text, m_pTranslator->GetTranslation()->m_SrcLang, m_pTranslator->GetTranslation()->m_DstLang);\n-\t\t\tAddLine(-1337, 0, aBuf);\n-\t\t}\n-\t\telse\n-\t\t\tSay(0, m_pTranslator->GetTranslation()->m_Text, true);\n+\t\t\tchar aBuf[512];\n+\t\t\tif(m_pTranslator->GetTranslation()->m_In)\n+\t\t\t{\n+\t\t\t\tstr_format(aBuf, sizeof(aBuf), \"'%s' (%s → %s)\", m_pTranslator->GetTranslation()->m_Text, m_pTranslator->GetTranslation()->m_SrcLang, m_pTranslator->GetTranslation()->m_DstLang);\n+\t\t\t\tAddLine(-1337, 0, aBuf);\n+\t\t\t}\n+\t\t\telse\n+\t\t\t\tSay(0, m_pTranslator->GetTranslation()->m_Text, true);\n \n-\t\tm_pTranslator->RemoveTranslation();\n+\t\t\tm_pTranslator->RemoveTranslation();\n+\t\t}\n \t}\n \n \tif (!g_Config.m_ClShowChat)\n@@ -950,6 +980,15 @@ void CChat::OnRender()\n \t\tif(Now > m_aLines[r].m_Time+g_Config.m_ClShowhudChatMsgTime*time_freq() && !m_Show)\n \t\t\tbreak;\n \n+\t\tfloat SmoothBlend = 1.0f;\n+\t\tfloat SmoothYOffs = 0.0f;\n+\t\tif(g_Config.m_ClSmoothChat)\n+\t\t{\n+\t\t\tfloat X = ((float)Now - (float)m_aLines[r].m_Time+1.0f) / time_freq();\n+\t\t\tSmoothBlend = 1.0f - 3.0f * expf(-4.0f * (X + 0.5f) + 1.6f);\n+\t\t\tSmoothYOffs = 3.0f - SmoothBlend * 3.0f;\n+\t\t}\n+\n \t\tchar aName[64] = \"\";\n \t\tif(g_Config.m_ClShowIDsChat && m_aLines[r].m_ClientID != -1 && m_aLines[r].m_aName[0] != '\\0')\n \t\t{\n@@ -979,7 +1018,9 @@ void CChat::OnRender()\n \t\tif(y < HeightLimit)\n \t\t\tbreak;\n \n-\t\tfloat Blend = Now > m_aLines[r].m_Time+14*time_freq() && !m_Show ? 1.0f-(Now-m_aLines[r].m_Time-14*time_freq())/(2.0f*time_freq()) : 1.0f;\n+\t\ty += SmoothYOffs;\n+\n+\t\tfloat Blend = min(SmoothBlend, Now > m_aLines[r].m_Time+14*time_freq() && !m_Show ? 1.0f-(Now-m_aLines[r].m_Time-14*time_freq())/(2.0f*time_freq()) : 1.0f);\n \n \t\t// reset the cursor\n \t\tTextRender()->SetCursor(&Cursor, Begin + (g_Config.m_ClChatAvatar ? 3.0f : 0.0f), y, FontSize, TEXTFLAG_RENDER);\n@@ -1087,7 +1128,7 @@ bool CChat::HandleTCommands(const char *pMsg)\n {\n \tCALLSTACK_ADD();\n \n-\tif(!g_Config.m_ClTransChatCmds || !(pMsg[0] == '$' && pMsg[1] == '$'))\n+\tif(!TranslatorAvailable() || !g_Config.m_ClTransChatCmds || !(pMsg[0] == '$' && pMsg[1] == '$'))\n \t\treturn false;\n \n \tchar aCmd[512][256] = {{0}};\n@@ -1173,7 +1214,7 @@ void CChat::Say(int Team, const char *pLine, bool NoTrans, bool CalledByLua)\n \tif(HandleTCommands(pLine))\n \t\treturn;\n \n-\tif(g_Config.m_ClTransOut && str_length(aMessage) > 4 && aMessage[0] != '/' && !NoTrans)\n+\tif(TranslatorAvailable() && g_Config.m_ClTransOut && str_length(aMessage) > 4 && aMessage[0] != '/' && !NoTrans)\n \t{\n \t\tm_pTranslator->RequestTranslation(g_Config.m_ClTransOutSrc, g_Config.m_ClTransOutDst, aMessage, false);\n \t\treturn;"
    },
    {
      "sha": "7524bb579acafd251029b8b4b70bfc45b04fde39",
      "filename": "src/game/client/components/chat.h",
      "status": "modified",
      "additions": 5,
      "deletions": 2,
      "changes": 7,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/chat.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/chat.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/chat.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -99,7 +99,6 @@ class CChat : public CComponent\n \n public:\n \tCChat();\n-\t~CChat();\n \n \tbool IsActive() const { return m_Mode != MODE_NONE; }\n \tint GetMode() const { return m_Mode; }\n@@ -115,6 +114,8 @@ class CChat : public CComponent\n \n \tvoid SayChat(const char *pLine);\n \n+\tvirtual void OnInit();\n+\tvirtual void OnShutdown();\n \tvirtual void OnReset();\n \tvirtual void OnConsoleInit();\n \tvirtual void OnStateChange(int NewState, int OldState);\n@@ -123,6 +124,8 @@ class CChat : public CComponent\n \tvirtual void OnMessage(int MsgType, void *pRawMsg);\n \tvirtual bool OnInput(IInput::CEvent Event);\n \n+\tbool TranslatorAvailable() const { return m_pTranslator != NULL; }\n+\n \t// crypt stuff\n \tRSA *m_pKeyPair;\n \tbool m_GotKeys;\n@@ -133,7 +136,7 @@ class CChat : public CComponent\n \tchar *DecryptMsg(const char *pMsg);\n \tvoid SaveKeys(RSA *pKeyPair, const char *pKeyName);\n \tvoid LoadKeys(const char *pKeyName);\n-\t\n+\n \tstd::string m_CryptSendQueue;\n };\n #endif"
    },
    {
      "sha": "d0bc138b8cfb0263fde497ce831cbe68a0951a71",
      "filename": "src/game/client/components/console.cpp",
      "status": "modified",
      "additions": 96,
      "deletions": 50,
      "changes": 146,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/console.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/console.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/console.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -38,6 +38,7 @@\n #include \"chat.h\"\n #include \"menus.h\"\n #include \"irc.h\"\n+#include \"fontmgr.h\"\n #include \"console.h\"\n \n CGameConsole::CInstance * CGameConsole::m_pStatLuaConsole = 0;\n@@ -170,6 +171,7 @@ void CGameConsole::CInstance::ExecuteLine(const char *pLine)\n \t\t{\n \t\t\tm_LuaHandler.m_ScopeCount = 0;\n \t\t\tm_LuaHandler.m_FullLine = \"\";\n+\t\t\tm_LuaHandler.m_pDebugChild = 0;\n \t\t\tPrintLine(\"Reset complete\");\n \t\t\treturn;\n \t\t}\n@@ -178,13 +180,13 @@ void CGameConsole::CInstance::ExecuteLine(const char *pLine)\n \t\t\tm_LuaHandler.m_ScopeCount = 0;\n \t\t\tm_LuaHandler.m_FullLine = \"\";\n \t\t\tm_LuaHandler.m_Inited = false;\n+\t\t\tm_LuaHandler.m_pDebugChild = 0;\n \t\t\tlua_close(m_LuaHandler.m_pLuaState);\n \t\t\tInitLua();\n \t\t\tPrintLine(\"Reload complete\");\n \t\t\treturn;\n \t\t}\n \t\tint Status = 0;\n-\t\tchar ErrorMsg[512];\n \t\tbool ScopeIncreased = false;\n \n \t\tif(!m_LuaHandler.m_Inited)  // this is yet quite retarded!\n@@ -238,10 +240,12 @@ void CGameConsole::CInstance::ExecuteLine(const char *pLine)\n \t\t\t\t}\n \t\t\t\tm_LuaHandler.m_ScopeCount--;\n \n-\t\t\t\tif(m_LuaHandler.m_ScopeCount == 0)  //if we are now at zero after decreasing => print new line!\n+\t\t\t\tif(m_LuaHandler.m_ScopeCount == 0 &&\n+\t\t\t\t\t\tm_LuaHandler.m_FullLine.c_str()[0] != '\\0' && str_comp(aBuf, m_LuaHandler.m_FullLine.c_str()) != 0)  //if we are now at zero after decreasing => print new line! (but only if it was multiline entry)\n \t\t\t\t{\n-\t\t\t\t\tPrintLine(aBuf);\n-\t\t\t\t\tPrintLine(\"\");\n+\t\t\t\t\tPrintLine(pLine);\n+\t\t\t\t\t//PrintLine(aBuf, true);\n+\t\t\t\t\t//PrintLine(\"\", true);\n \t\t\t\t}\n \t\t\t}\n \t\t}\n@@ -251,54 +255,60 @@ void CGameConsole::CInstance::ExecuteLine(const char *pLine)\n \n \t\tif(m_LuaHandler.m_ScopeCount == 0)\n \t\t{\n+\t\t\tlua_State *L = m_LuaHandler.m_pLuaState;\n+\t\t\tif(m_LuaHandler.m_pDebugChild != NULL)\n+\t\t\t\tL = m_LuaHandler.m_pDebugChild;\n+\n+\t\t\tPrintLine((\"> \" + m_LuaHandler.m_FullLine).c_str(), true);\n+\t\t\tif(m_LuaHandler.m_FullLine.c_str()[0] == '=')\n+\t\t\t\tm_LuaHandler.m_FullLine = std::string(\"return \") + std::string(m_LuaHandler.m_FullLine.c_str()+1);\n+\n \t\t\ttry\n \t\t\t{\n-\t\t\t\tluaL_loadstring(m_LuaHandler.m_pLuaState, m_LuaHandler.m_FullLine.c_str());\n-\t\t\t\tStatus = lua_pcall(m_LuaHandler.m_pLuaState, 0, LUA_MULTRET, 0);\n-\n-\t\t\t\tif(Status)\n+\t\t\t\tlua_pushcclosure(L, CLua::ErrorFunc, 0);\n+\t\t\t\tif(luaL_loadstring(L, m_LuaHandler.m_FullLine.c_str()) != 0)\n+\t\t\t\t\tm_pGameConsole->m_pClient->Client()->Lua()->HandleException(lua_tostring(L, -1), L);\n+\t\t\t\telse\n \t\t\t\t{\n-\t\t\t\t\tstr_format(ErrorMsg, sizeof(ErrorMsg), \"%s\", lua_tostring(m_LuaHandler.m_pLuaState, -1));\n+\t\t\t\t\tint stacksize = lua_gettop(L);\n+\t\t\t\t\tStatus = lua_pcall(L, 0, LUA_MULTRET, stacksize-1);\n \n-\t\t\t\t\tif(!str_comp(ErrorMsg, \"attempt to call a string value\"))  //HACKISH SOLUTION : Try recompile pLine with a print!\n+\t\t\t\t\tif(Status == 0)\n \t\t\t\t\t{\n-\t\t\t\t\t\tStatus = 0;\n-\n-\t\t\t\t\t\tchar aBuf[256];\n-\t\t\t\t\t\tstr_format(aBuf, sizeof(aBuf), \"print(%s)\", m_LuaHandler.m_FullLine.c_str());\n-\n-\t\t\t\t\t\tluaL_loadstring(m_LuaHandler.m_pLuaState, aBuf);\n-\t\t\t\t\t\tStatus = lua_pcall(m_LuaHandler.m_pLuaState, 0, LUA_MULTRET, 0);\n+\t\t\t\t\t\t/*\n+\t\t\t\t\t\t * at this point, the stack will have 1 additional function (errorfunc) and all return values on top.\n+\t\t\t\t\t\t */\n+\t\t\t\t\t\tint nresults = lua_gettop(L) - stacksize + 1;\n+\t\t\t\t\t\t//for(int i = 1; i <= lua_gettop(L); i++) // this one is for debugging purposes (prints the whole stack)\n+\t\t\t\t\t\tfor(int i = stacksize; i < stacksize+nresults; i++)\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tif(lua_isstring(L, i) || lua_isnumber(L, i))\n+\t\t\t\t\t\t\t\tPrintLine(lua_tostring(L, i));\n+\t\t\t\t\t\t\telse\n+\t\t\t\t\t\t\t\tPrintLine(luaL_typename(L, i));\n+\t\t\t\t\t\t}\n+\t\t\t\t\t\tlua_pop(L, nresults+1); // clean up the stack\n \t\t\t\t\t}\n \t\t\t\t}\n \t\t\t}\n \t\t\tcatch(std::exception &e)  //just to be sure...\n \t\t\t{\n+\t\t\t\tif(m_LuaHandler.m_pDebugChild)\n+\t\t\t\t\tm_pGameConsole->m_pClient->Client()->Lua()->HandleException(e, m_LuaHandler.m_pDebugChild);\n \t\t\t\tPrintLine(e.what());\n \t\t\t}\n \t\t\tcatch(...)\n \t\t\t{\n \t\t\t\tPrintLine(\"An unknown error occured!\");\n \t\t\t}\n \n-\t\t\t/*m_LuaHandler.m_FullLine.resize(m_LuaHandler.m_FullLine.size()-1);  //remove the last \" \"\n-\t\t\t//add this to the history :3\n-\t\t\tchar *pEntry = m_History.Allocate(m_LuaHandler.m_FullLine.size()+1);\n-\t\t\tmem_copy(pEntry, m_LuaHandler.m_FullLine.c_str(), m_LuaHandler.m_FullLine.size()+1);*/\n-\n-\n \t\t\tm_LuaHandler.m_FullLine = \"\";\n \t\t\tm_LuaHandler.m_ScopeCount = 0;\n \n-\t\t\tif(Status)\n-\t\t\t{\n-\t\t\t\tstr_format(ErrorMsg, sizeof(ErrorMsg), \"%s\", lua_tostring(m_LuaHandler.m_pLuaState, -1));\n-\t\t\t\tPrintLine(ErrorMsg);\n-\t\t\t}\n \t\t}\n \t\telse if(m_LuaHandler.m_ScopeCount < 0)\n \t\t{\n-\t\t\tPrintLine(\"Please don't end your stuff before you already started.\");\n+\t\t\tPrintLine(\"Please don't end your stuff before even having started.\");\n \t\t\tm_LuaHandler.m_ScopeCount = 0;\n \t\t\tm_LuaHandler.m_FullLine = \"\";\n \t\t}\n@@ -307,16 +317,17 @@ void CGameConsole::CInstance::ExecuteLine(const char *pLine)\n \t\t{\n \t\t\tchar aBuf[512] = { 0 };\n \n-\t\t\tint Limit = ScopeIncreased == true ? m_LuaHandler.m_ScopeCount-1 : m_LuaHandler.m_ScopeCount;\n+\t\t\tint Limit = ScopeIncreased ? m_LuaHandler.m_ScopeCount-1 : m_LuaHandler.m_ScopeCount;\n \n \t\t\tif(ActLine.find(\"else\") != std::string::npos)\n \t\t\t\tLimit--;\n \n \t\t\tfor(int i = 0; i < Limit; i++)\n-\t\t\t\tstr_append(aBuf, \"     \", sizeof(aBuf));\n+\t\t\t\tstr_append(aBuf, \"…     \", sizeof(aBuf));\n \n \t\t\tstr_append(aBuf, pLine, sizeof(aBuf));\n-\t\t\tPrintLine(aBuf);\n+\t\t\tif(Limit >= 0)\n+\t\t\t\tPrintLine(aBuf);\n \t\t}\n #endif // defined(FEATURE_LUA)\n \t}\n@@ -376,6 +387,13 @@ void CGameConsole::CInstance::OnInput(IInput::CEvent Event)\n \t\t\t\t\tm_Input.SetCursorOffset(str_length(aLine)-str_length(aRightPart));\n \t\t\t\t}\n \t\t\t}\n+\t\t\telse if(Event.m_Key == KEY_F) // handle searching\n+\t\t\t{\n+\t\t\t\tif(!m_pSearchString)\n+\t\t\t\t\tm_pSearchString = m_Input.GetString();\n+\t\t\t\telse\n+\t\t\t\t\tm_pSearchString = 0;\n+\t\t\t}\n \t\t}\n \t\telse if(Event.m_Key == KEY_RETURN || Event.m_Key == KEY_KP_ENTER)\n \t\t{\n@@ -490,16 +508,6 @@ void CGameConsole::CInstance::OnInput(IInput::CEvent Event)\n \t\t\t\tm_BacklogActLine = 0;\n \t\t\tHandled = true;\n \t\t}\n-\t\telse if(Event.m_Key == KEY_F)\n-\t\t{\n-\t\t\tif(m_CTRLPressed)\n-\t\t\t{\n-\t\t\t\tif(!m_pSearchString)\n-\t\t\t\t\tm_pSearchString = m_Input.GetString();\n-\t\t\t\telse\n-\t\t\t\t\tm_pSearchString = 0;\n-\t\t\t}\n-\t\t}\n \t\telse if(Event.m_Key == KEY_LSHIFT)\n \t\t{\n \t\t\tif(!m_CTRLPressed)\n@@ -873,7 +881,7 @@ void CGameConsole::OnRender()\n \n \tCInstance *pConsole = CurrentConsole();\n \t{\n-\t\tfloat FontSize = 10.0f;\n+\t\tfloat FontSize = (float)g_Config.m_ClMonoFontSize;\n \t\tfloat RowHeight = FontSize*1.25f;\n \t\tfloat x = 3;\n \t\tfloat y = ConsoleHeight - RowHeight - 5.0f;\n@@ -896,11 +904,11 @@ void CGameConsole::OnRender()\n \t\tInfo.m_Offset = pConsole->m_CompletionRenderOffset;\n \t\tInfo.m_Width = Screen.w;\n \t\tInfo.m_pCurrentCmd = pConsole->m_aCompletionBuffer;\n-\t\tTextRender()->SetCursor(&Info.m_Cursor, x+Info.m_Offset, y+RowHeight+2.0f, FontSize, TEXTFLAG_RENDER);\n+\t\tTextRender()->SetCursor(&Info.m_Cursor, x+Info.m_Offset, y+RowHeight+2.0f, FontSize, TEXTFLAG_RENDER, m_pClient->m_pFontMgrMono->GetFont(FONT_REGULAR));\n \n \t\t// render prompt\n \t\tCTextCursor Cursor;\n-\t\tTextRender()->SetCursor(&Cursor, x, y, FontSize, TEXTFLAG_RENDER);\n+\t\tTextRender()->SetCursor(&Cursor, x, y, FontSize, TEXTFLAG_RENDER, m_pClient->m_pFontMgrMono->GetFont(FONT_REGULAR));\n \t\tconst char *pPrompt = \"> \";\n \t\tif(m_pSearchString)\n \t\t\tpPrompt = \"[CTRL+F] SEARCHING» \";\n@@ -919,7 +927,17 @@ void CGameConsole::OnRender()\n \t\telse if(m_ConsoleType == CONSOLETYPE_LUA)\n \t\t{\n \t\t\tif(g_Config.m_ClLua)\n-\t\t\t\tpPrompt = \"Lua> \";\n+\t\t\t{\n+\t\t\t\tif(m_LuaConsole.m_LuaHandler.m_pDebugChild)\n+\t\t\t\t{\n+\t\t\t\t\tCLuaFile *pLF = CLuaBinding::GetLuaFile(m_LuaConsole.m_LuaHandler.m_pDebugChild);\n+\t\t\t\t\tstatic char s_aPrompt[128];\n+\t\t\t\t\tstr_format(s_aPrompt, sizeof(s_aPrompt), \"(%s) DEBUGGER> \", pLF->GetFilename()+4);\n+\t\t\t\t\tpPrompt = s_aPrompt;\n+\t\t\t\t}\n+\t\t\t\telse\n+\t\t\t\t\tpPrompt = \"Lua> \";\n+\t\t\t}\n \t\t\telse\n \t\t\t\tpPrompt = \"Lua disabled. Please enable Lua first. \";\n \t\t}\n@@ -965,14 +983,14 @@ void CGameConsole::OnRender()\n \t\t}\n \n \t\t// render console input (wrap line)\n-\t\tTextRender()->SetCursor(&Cursor, x, y, FontSize, 0);\n+\t\tTextRender()->SetCursor(&Cursor, x, y, FontSize, 0,  m_pClient->m_pFontMgrMono->GetFont(FONT_REGULAR));\n \t\tCursor.m_LineWidth = Screen.w - 10.0f - x;\n \t\tTextRender()->TextEx(&Cursor, aInputString, pConsole->m_Input.GetCursorOffset(Editing));\n \t\tTextRender()->TextEx(&Cursor, aInputString+pConsole->m_Input.GetCursorOffset(Editing), -1);\n \t\tint Lines = Cursor.m_LineCount;\n \n \t\ty -= (Lines - 1) * FontSize;\n-\t\tTextRender()->SetCursor(&Cursor, x, y, FontSize, TEXTFLAG_RENDER);\n+\t\tTextRender()->SetCursor(&Cursor, x, y, FontSize, TEXTFLAG_RENDER,  m_pClient->m_pFontMgrMono->GetFont(FONT_REGULAR));\n \t\tCursor.m_LineWidth = Screen.w - 10.0f - x;\n \n \t\tTextRender()->TextEx(&Cursor, aInputString, pConsole->m_Input.GetCursorOffset(Editing));\n@@ -1088,7 +1106,7 @@ void CGameConsole::OnRender()\n \t\t\t{\n \t\t\t\tif(pEntry->m_YOffset < 0.0f)\n \t\t\t\t{\n-\t\t\t\t\tTextRender()->SetCursor(&Cursor, 0.0f, 0.0f, FontSize, 0);\n+\t\t\t\t\tTextRender()->SetCursor(&Cursor, 0.0f, 0.0f, FontSize, 0, m_pClient->m_pFontMgrMono->GetFont(FONT_REGULAR));\n \t\t\t\t\tCursor.m_LineWidth = Screen.w-10;\n \t\t\t\t\tTextRender()->TextEx(&Cursor, pEntry->m_aText, -1);\n \t\t\t\t\tpEntry->m_YOffset = Cursor.m_Y+Cursor.m_FontSize+LineOffset;\n@@ -1180,7 +1198,7 @@ void CGameConsole::OnRender()\n \t\t\t\t// -------------------- end clipboard selection code -------------------\n \n \t\t\t\t//url highlighting\n-\t\t\t\tTextRender()->SetCursor(&Cursor, 0.0f, y-OffsetY, FontSize, TEXTFLAG_RENDER);\n+\t\t\t\tTextRender()->SetCursor(&Cursor, 0.0f, y-OffsetY, FontSize, TEXTFLAG_RENDER, m_pClient->m_pFontMgrMono->GetFont(FONT_REGULAR));\n \t\t\t\tCursor.m_LineWidth = Screen.w-10.0f;\n \n \t\t\t\tconst char *pCursor = pEntry->m_aText;\n@@ -1526,6 +1544,34 @@ int CGameConsole::PrintLuaLine(lua_State *L)\n \treturn 0;\n }\n \n+void CGameConsole::AttachLuaDebugger(const CLuaFile *pLF)\n+{\n+\t//m_LuaConsole.ClearBacklog();\n+\tfor(int i = 0; i < 27-10; i++)\n+\t\tm_LuaConsole.PrintLine(\"\");\n+\n+\tm_LuaConsole.m_LuaHandler.m_ScopeCount = 0;\n+\tm_LuaConsole.m_LuaHandler.m_FullLine = \"\";\n+\tm_LuaConsole.m_LuaHandler.m_pDebugChild = pLF->L();\n+\n+\tluaL_loadstring(pLF->L(), \"Import(\\\"debug\\\")\");\n+\tlua_pcall(pLF->L(), 0, LUA_MULTRET, 0);\n+\n+\tm_LuaConsole.PrintLine(\"> ---------------------------[ DEBUGGER STARTED ]---------------------------\");\n+\t{ char aBuf[256]; str_format(aBuf, sizeof(aBuf), \"> The lua debugger was attached to the script '%s'\", pLF->GetFilename()); m_LuaConsole.PrintLine(aBuf);}\n+\tm_LuaConsole.PrintLine(\"> Everything you execute from here will now be executed in the scope of the script.\");\n+\tm_LuaConsole.PrintLine(\"> Please note that you can break the running script by doing the wrong changes.\");\n+\tm_LuaConsole.PrintLine(\"> \");\n+\tm_LuaConsole.PrintLine(\"> The debug library has automatically been imported.\");\n+\tm_LuaConsole.PrintLine(\"> You may now use locals(), globals() and upvalues() to print all variables.\");\n+\tm_LuaConsole.PrintLine(\"> \");\n+\tm_LuaConsole.PrintLine(\"> To exit the debugger, type !reset or !reload\");\n+\tm_LuaConsole.PrintLine(\"> \");\n+\n+\tToggle(CONSOLETYPE_LUA);\n+\n+}\n+\n void CGameConsole::OnConsoleInit()\n {\n \t// init console instances"
    },
    {
      "sha": "dc65e01d127f7251af85cf56353c8bf7c75afd9f",
      "filename": "src/game/client/components/console.h",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/console.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/console.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/console.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -70,7 +70,8 @@ class CGameConsole : public CComponent\n \n \t\tstruct\n \t\t{\n-\t\t\tlua_State * m_pLuaState;\n+\t\t\tlua_State *m_pLuaState;\n+\t\t\tlua_State *m_pDebugChild;\n \t\t\tbool m_Inited;\n \n \t\t\tint m_ScopeCount;\n@@ -126,6 +127,8 @@ class CGameConsole : public CComponent\n \tvoid PrintLine(int Type, const char *pLine);\n \n \tstatic int PrintLuaLine(lua_State *L);\n+\tvoid AttachLuaDebugger(const class CLuaFile *pLF);\n+\tlua_State *GetDebuggerChild() const { return m_LuaConsole.m_LuaHandler.m_pDebugChild; }\n \tstatic CInstance * m_pStatLuaConsole;\n \n \tvirtual void OnStateChange(int NewState, int OldState);"
    },
    {
      "sha": "4e79f4eaa86a9b4034b2f1b27f0c13e3aad4fd58",
      "filename": "src/game/client/components/controls.cpp",
      "status": "modified",
      "additions": 2,
      "deletions": 1,
      "changes": 3,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/controls.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/controls.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/controls.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -235,7 +235,8 @@ int CControls::SnapInput(int *pData)\n \telse\n \t\tm_InputData[g_Config.m_ClDummy].m_PlayerFlags = PLAYERFLAG_PLAYING;\n \n-\tm_InputData[g_Config.m_ClDummy].m_PlayerFlags |= PLAYERFLAG_ATH1 | PLAYERFLAG_ATH2;\n+\tif(g_Config.m_ClNamePlatesBroadcastATH || m_pClient->Client()->Lua()->NumActiveScripts() > 0)\n+\t\tm_InputData[g_Config.m_ClDummy].m_PlayerFlags |= PLAYERFLAG_ATH1 | PLAYERFLAG_ATH2;\n \n \tif(m_pClient->m_pChat->m_CryptSendQueue.size())\n \t{"
    },
    {
      "sha": "299594657b7b22faf3fb0e67f4518e56382722e3",
      "filename": "src/game/client/components/emoticon.cpp",
      "status": "modified",
      "additions": 1,
      "deletions": 5,
      "changes": 6,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/emoticon.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/emoticon.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/emoticon.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -243,11 +243,7 @@ void CEmoticon::OnRender()\n \tif(!m_Active)\n \t\treturn;\n \n-#if defined(CONF_FAMILY_WINDOWS)\n-\tGraphics()->TextureSet(g_pData->m_aImages[IMAGE_ARROW].m_Id);\n-#else\n-\tGraphics()->TextureSet(g_pData->m_aImages[IMAGE_CURSOR].m_Id);\n-#endif\n+\tGraphics()->TextureSet(g_pData->m_aImages[IMAGE_HUDCURSOR].m_Id);\n \tGraphics()->QuadsBegin();\n \tGraphics()->SetColor(1, 1, 1, s_Val*1);\n \tIGraphics::CQuadItem QuadItem(s_Val*m_SelectorMouse.x + Screen.w / 2, s_Val*m_SelectorMouse.y + Screen.h / 2, 24, 24);"
    },
    {
      "sha": "120e9546d16c551413c4b1e18e0c15811879e60d",
      "filename": "src/game/client/components/fontmgr.cpp",
      "status": "modified",
      "additions": 149,
      "deletions": 80,
      "changes": 229,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/fontmgr.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/fontmgr.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/fontmgr.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -1,139 +1,208 @@\n \n #include <engine/console.h>\n+#include <engine/shared/config.h>\n \n #include \"fontmgr.h\"\n \n+#define ConfigFtFont (m_Type == TYPE_BASIC ? g_Config.m_FtFont : g_Config.m_FtMonoFont)\n+static const char *s_apFontFolders[] = { \"basic\", \"mono\" };\n+\n void CFontMgr::Init()\n {\n-\tm_pStorage = Kernel()->RequestInterface<IStorageTW>();\n-\tm_FontFiles.clear();\n-\tm_FontFiles.hint_size(10);\n+\tm_lFontFiles.clear();\n+\tm_ActiveFontIndex = -1;\n \n \tReloadFontlist();\n \n-\tif(g_Config.m_FtPreloadFonts)\n-\t\tfor(int i = 0; i < m_FontFiles.size(); i++)\n-\t\t\tInitFont(&m_FontFiles[i]);\n-\n-\t// load default font\n-\tchar aFontFile[256];\n-\tstr_format(aFontFile, sizeof(aFontFile), \"%s\", g_Config.m_FtFont);\n-\tif(str_comp(g_Config.m_FtFont, \"fonts/DejaVuSansCJKName.ttf\") == 0)\n-\t\tif (str_find(g_Config.m_ClLanguagefile, \"chinese\") != NULL || str_find(g_Config.m_ClLanguagefile, \"japanese\") != NULL ||\n-\t\t\tstr_find(g_Config.m_ClLanguagefile, \"korean\") != NULL)\n-\t\t\t\tstr_format(aFontFile, sizeof(aFontFile), \"fonts/DejavuWenQuanYiMicroHei.ttf\");\n+\t// load selected font\n+\tif(str_length(ConfigFtFont) == 0)\n+\t\tstr_copy(ConfigFtFont, \"DejaVuSansCJKName\", sizeof(ConfigFtFont));\n \n+\tchar aFontFile[256] = {0};\n+\tif(str_comp(ConfigFtFont, \"DejaVuSansCJKName\") == 0)\n+\t{\n+\t\t// for the combination of DejaVuSansCJKName and one of these languages, use a replacement font\n+\t\tif(str_find(g_Config.m_ClLanguagefile, \"chinese\") != NULL || str_find(g_Config.m_ClLanguagefile, \"japanese\") != NULL || str_find(g_Config.m_ClLanguagefile, \"korean\") != NULL)\n+\t\t\tstr_copy(ConfigFtFont, \"DejavuWenQuanYiMicroHei\", sizeof(ConfigFtFont));\n+\t}\n+\tif(str_length(aFontFile) == 0)\n+\t\tstr_copy(aFontFile, ConfigFtFont, sizeof(ConfigFtFont));\n \n-\tfor(int i = 0; i < m_FontFiles.size(); i++)\n+\tfor(int i = 0; i < m_lFontFiles.size(); i++)\n \t{\n-\t\tif(str_comp(m_FontFiles[i].m_Path.c_str(), aFontFile) == 0)\n+\t\tif(str_comp(m_lFontFiles[i].m_Name.c_str(), aFontFile) == 0)\n+\t\t{\n \t\t\tActivateFont(i);\n+\t\t\treturn;\n+\t\t}\n \t}\n+\n+\t// if all fails, just pick the first in our list\n+\tActivateFont(0);\n }\n \n-void CFontMgr::ActivateFont(int ListIndex)\n+bool CFontMgr::ActivateFont(int ListIndex)\n {\n-\tif(ListIndex > m_FontFiles.size())\n+\tif(ListIndex > m_lFontFiles.size())\n \t{\n-\t\tdbg_msg(\"fontmgr/error\", \"tried to load font that doesn't exist (%i > %i)\", ListIndex, m_FontFiles.size());\n-\t\treturn;\n+\t\tdbg_msg(\"fontmgr/error\", \"tried to load font that doesn't exist (%i > %i)\", ListIndex, m_lFontFiles.size());\n+\t\treturn false;\n \t}\n \n-\tFontFile *f = &m_FontFiles[ListIndex];\n-\tif(!f->m_pFont)\n-\t\tInitFont(f);\n+\tCFontFile *f = &m_lFontFiles[ListIndex];\n \n-\tTextRender()->SetDefaultFont(f->m_pFont);\n-\tm_ActiveFontIndex = ListIndex;\n+\tif(InitFont(f))\n+\t{\n+\t\tif(m_Type == TYPE_BASIC)\n+\t\t\tTextRender()->SetDefaultFont(f->m_apFonts[FONT_REGULAR]);\n+\t\tif(m_ActiveFontIndex >= 0)\n+\t\t\tUnloadFont(m_ActiveFontIndex);\n+\t\tm_ActiveFontIndex = ListIndex;\n+\t\t\tstr_copy(ConfigFtFont, m_lFontFiles[m_ActiveFontIndex].m_Name.c_str(), sizeof(ConfigFtFont));\n+\t\treturn true;\n+\t}\n+\treturn false;\n }\n \n-void CFontMgr::InitFont(FontFile *f)\n+bool CFontMgr::InitFont(CFontFile *f)\n {\n \tif(g_Config.m_Debug)\n-\t\tdbg_msg(\"fontmgr/debug\", \"loading font %p '%s' into memory\", f, f->m_Path.c_str());\n+\t\tdbg_msg(\"fontmgr/debug\", \"loading font %p '%s' into memory\", f, f->m_Name.c_str());\n+\n+\t// load regular\n+\tif(!InitFont_impl(f, FONT_REGULAR, \"r\"))\n+\t\tif(!InitFont_impl(f, FONT_REGULAR, \"R\"))\n+\t\t\tif(!InitFont_impl(f, FONT_REGULAR, \"-R\"))\n+\t\t\t\tif(!InitFont_impl(f, FONT_REGULAR, \"-Regular\"))\n+\t\t\t\t\tif(!InitFont_impl(f, FONT_REGULAR, \"Regular\"))\n+\t\t\t\t\t\tif(!InitFont_impl(f, FONT_REGULAR, \"\"))\n+\t\t\t\t\t\t\tConsole()->Printf(IConsole::OUTPUT_LEVEL_ADDINFO, \"fontmgr/error\", \"failed to load REGULAR font type for font='%s'\", f->m_Name.c_str());\n+\n+\t// load bold\n+\tif(!InitFont_impl(f, FONT_BOLD, \"b\"))\n+\t\tif(!InitFont_impl(f, FONT_BOLD, \"B\"))\n+\t\t\tif(!InitFont_impl(f, FONT_BOLD, \"-B\"))\n+\t\t\t\tif(!InitFont_impl(f, FONT_BOLD, \"-Bold\"))\n+\t\t\t\t\tif(!InitFont_impl(f, FONT_BOLD, \"Bold\"))\n+\t\t\t\t\t\tConsole()->Printf(IConsole::OUTPUT_LEVEL_ADDINFO, \"fontmgr/error\", \"failed to load BOLD font type for font='%s'\", f->m_Name.c_str());\n+\n+\t// load italic\n+\tif(!InitFont_impl(f, FONT_ITALIC, \"i\"))\n+\t\tif(!InitFont_impl(f, FONT_ITALIC, \"I\"))\n+\t\t\tif(!InitFont_impl(f, FONT_ITALIC, \"-I\"))\n+\t\t\t\tif(!InitFont_impl(f, FONT_ITALIC, \"-Italic\"))\n+\t\t\t\t\tif(!InitFont_impl(f, FONT_ITALIC, \"Italic\"))\n+\t\t\t\t\t\tif(!InitFont_impl(f, FONT_ITALIC, \"-Oblique\"))\n+\t\t\t\t\t\t\tif(!InitFont_impl(f, FONT_ITALIC, \"Oblique\"))\n+\t\t\t\t\t\t\t\tConsole()->Printf(IConsole::OUTPUT_LEVEL_ADDINFO, \"fontmgr/error\", \"failed to load ITALIC font type for font='%s'\", f->m_Name.c_str());\n+\n+\t// load bold italic\n+\tif(!InitFont_impl(f, FONT_BOLD_ITALIC, \"bi\"))\n+\t\tif(!InitFont_impl(f, FONT_BOLD_ITALIC, \"BI\"))\n+\t\t\tif(!InitFont_impl(f, FONT_BOLD_ITALIC, \"-BI\"))\n+\t\t\t\tif(!InitFont_impl(f, FONT_BOLD_ITALIC, \"-BoldItalic\"))\n+\t\t\t\t\tif(!InitFont_impl(f, FONT_BOLD_ITALIC, \"BoldItalic\"))\n+\t\t\t\t\t\tif(!InitFont_impl(f, FONT_BOLD_ITALIC, \"-BoldOblique\"))\n+\t\t\t\t\t\t\tif(!InitFont_impl(f, FONT_BOLD_ITALIC, \"BoldOblique\"))\n+\t\t\t\t\t\t\t\tConsole()->Printf(IConsole::OUTPUT_LEVEL_ADDINFO, \"fontmgr/error\", \"failed to load BOLD ITALIC font type for font='%s'\", f->m_Name.c_str());\n+\n+\treturn f->m_apFonts[FONT_REGULAR] != NULL;\n+}\n \n-\tchar aFilename[512];\n-\tIOHANDLE File = Storage()->OpenFile(f->m_Path.c_str(), IOFLAG_READ, IStorageTW::TYPE_ALL, aFilename, sizeof(aFilename));\n+bool CFontMgr::InitFont_impl(CFontFile *f, int Type, const char *pTypeStr)\n+{\n+\tchar aPath[512];\n+\tmem_zerob(aPath);\n+\tif(str_length(pTypeStr) > 2 || pTypeStr[0] == '-' || pTypeStr[0] == '\\0')\n+\t\tstr_formatb(aPath, \"fonts/%s/%s/%s%s.ttf\", s_apFontFolders[m_Type], f->m_Path.c_str(), f->m_Name.c_str(), pTypeStr);\n+\telse\n+\t\tstr_formatb(aPath, \"fonts/%s/%s/%s.ttf\", s_apFontFolders[m_Type], f->m_Path.c_str(), pTypeStr);\n+\n+\tchar aFullPath[512];\n+\tmem_zerob(aFullPath);\n+\tIOHANDLE File = Storage()->OpenFile(aPath, IOFLAG_READ, IStorageTW::TYPE_ALL, aFullPath, sizeof(aFullPath));\n \tif(File)\n \t{\n \t\tio_close(File);\n-\t\tf->m_pFont = TextRender()->LoadFont(aFilename);\n+\t\tf->m_apFonts[Type] = TextRender()->LoadFont(aFullPath);\n+\t\treturn true;\n \t}\n-\telse\n-\t\tConsole()->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"fontmgr/error\", \"failed to load font. file='%s'\", f->m_Path.c_str());\n+\telse if(g_Config.m_Debug)\n+\t\tdbg_msg(\"fontmgr/debug\", \"failed trying to load '%s'\", aPath);\n+\treturn false;\n }\n \n-void CFontMgr::LoadFolder(const char *pFolder)\n+void CFontMgr::UnloadFont(int ListIndex)\n {\n-\tdbg_msg(\"fontmgr\", \"scanning folder '%s'\", pFolder);\n-\tIStorageTW::CLoadHelper<CFontMgr> *pParams = new IStorageTW::CLoadHelper<CFontMgr>;\n-\tpParams->pSelf = this;\n-\tpParams->pFullDir = pFolder;\n+\tCFontFile *pFontFile = &m_lFontFiles[ListIndex];\n \n-\tm_pStorage->ListDirectory(IStorageTW::TYPE_ALL, pFolder, LoadFolderCallback, pParams);\n+\tfor(int i = 0; i < FONT_NUM_TYPES; i++)\n+\t{\n+\t\tCFont* pFont = pFontFile->m_apFonts[i];\n+\t\tif(pFont)\n+\t\t{\n+\t\t\tif(g_Config.m_Debug)\n+\t\t\t\tdbg_msg(\"fontmgr/debug\", \"destroying font data [%s:%i]:%p\", pFontFile->m_Name.c_str(), i, pFont);\n+\t\t\tTextRender()->DestroyFont(pFont);\n+\t\t}\n+\t}\n+\tmem_zerob(pFontFile->m_apFonts);\n+\tdbg_msg(\"fontmgr\", \"unloaded font '%s'\", pFontFile->m_Name.c_str());\n+}\n \n-\tdelete pParams;\n+void CFontMgr::RemoveFont(int ListIndex)\n+{\n+\tUnloadFont(ListIndex);\n+\tm_lFontFiles.remove_index(ListIndex);\n+}\n \n-\tSortList();\n+void CFontMgr::LoadFolder()\n+{\n+\tchar aPath[64];\n+\tstr_formatb(aPath, \"fonts/%s\", s_apFontFolders[m_Type]);\n+\tStorage()->ListDirectory(IStorageTW::TYPE_ALL, aPath, LoadFolderCallback, &m_lFontFiles);\n+\tm_lFontFiles.sort_range();\n }\n \n int CFontMgr::LoadFolderCallback(const char *pName, int IsDir, int DirType, void *pUser)\n {\n \tif(pName[0] == '.')\n \t\treturn 0;\n \n-\tIStorageTW::CLoadHelper<CFontMgr> *pParams = (IStorageTW::CLoadHelper<CFontMgr> *)pUser;\n+\tsorted_array<CFontFile> *pList = (sorted_array<CFontFile>*)pUser;\n \n-\tCFontMgr *pSelf = pParams->pSelf;\n-\tconst char *pFullDir = pParams->pFullDir;\n+\tchar aFile[128];\n+\tstr_format(aFile, sizeof(aFile), \"%s\", pName);\n+\tdbg_msg(\"fontloader\", \"%s\", aFile);\n \n-\tchar aFile[64];\n-\tstr_format(aFile, sizeof(aFile), \"%s/%s\", pFullDir, pName);\n-\t//dbg_msg(\"fontloader\", \"%s\", aFile);\n+\t// make sure we don't add fonts multiple times\n+\tfor(int i = 0; i < pList->size(); i++)\n+\t\tif((*pList)[i].m_Name == std::string(aFile))\n+\t\t\treturn 0;\n \n \tif(IsDir)\n-\t\tpSelf->LoadFolder(aFile);\n+\t{\n+\t\tpList->add_unsorted(CFontFile(std::string(aFile)));\n+\t}\n \telse\n-\t\tpSelf->m_FontFiles.add(FontFile(aFile));\n-\n-\treturn 0;\n-}\n-\n-void CFontMgr::SortList()\n-{\n-\tconst int NUM = m_FontFiles.size();\n-\tif(NUM < 2)\n-\t\treturn;\n-\n-\tfor(int curr = 0; curr < NUM-1; curr++)\n \t{\n-\t\tint minIndex = curr;\n-\t\tfor(int i = curr + 1; i < NUM; i++)\n-\t\t{\n-\t\t\tint c = 4;\n-\t\t\tfor(; str_uppercase(m_FontFiles[i].m_Path.c_str()[c]) == str_uppercase(m_FontFiles[minIndex].m_Path.c_str()[c]); c++);\n-\t\t\tif(str_uppercase(m_FontFiles[i].m_Path.c_str()[c]) < str_uppercase(m_FontFiles[minIndex].m_Path.c_str()[c]))\n-\t\t\t\tminIndex = i;\n-\t\t}\n-\n-\t\tif(minIndex != curr)\n-\t\t{\n-\t\t\tFontFile temp = m_FontFiles[curr];\n-\t\t\tm_FontFiles[curr] = m_FontFiles[minIndex];\n-\t\t\tm_FontFiles[minIndex] = temp;\n-\t\t}\n+\t\tdbg_msg(\"fontmgr\", \"WARNING: found '%s' in the fonts root directory\", aFile);\n+\t\tdbg_msg(\"fontmgr\", \"WARNING: fonts must be in the subfolder <name>/r.ttf to be loaded!\");\n \t}\n+\n+\treturn 0;\n }\n \n void CFontMgr::ReloadFontlist()\n {\n-\t// delete the fonts from memory first and clear the list\n-\twhile(m_FontFiles.size() > 0)\n+\t// delete all but the active\n+\tfor(int i = 0; i < m_lFontFiles.size(); i++)\n \t{\n-\t\tif(m_FontFiles[0].m_pFont)\n-\t\t\tTextRender()->DestroyFont(m_FontFiles[0].m_pFont);\n-\t\tm_FontFiles.remove_index_fast(0);\n+\t\tif(i != m_ActiveFontIndex)\n+\t\t\tRemoveFont(i);\n \t}\n \n-\tLoadFolder(\"fonts\");\n+\tLoadFolder();\n+\tfor(int i = 0; i < m_lFontFiles.size(); i++)\n+\t\tm_lFontFiles[i].m_Path = m_lFontFiles[i].m_Name;\n }"
    },
    {
      "sha": "e3fa12f3865e97c5f4c3d4ef2f2c681a245b5a0b",
      "filename": "src/game/client/components/fontmgr.h",
      "status": "modified",
      "additions": 58,
      "deletions": 22,
      "changes": 80,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/fontmgr.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/fontmgr.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/fontmgr.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -3,43 +3,79 @@\n \n #include <string>\n \n-#include <base/tl/array.h>\n+#include <base/tl/sorted_array.h>\n+#include <game/client/component.h>\n #include <engine/storage.h>\n #include <engine/textrender.h>\n \n-#include <game/client/component.h>\n \n-class CFontMgr : public CComponent\n+struct CFontFile\n {\n-\tstruct FontFile\n+\tstd::string m_Name;\n+\tstd::string m_Path;\n+\tCFont *m_apFonts[FONT_NUM_TYPES];\n+\n+\tCFontFile() { clear(); }\n+\tCFontFile(const std::string& Name) { clear(); m_Name = Name; }\n+\n+\tvoid clear()\n \t{\n-\t\tFontFile() { m_Path = \"\"; m_pFont = 0; }\n-\t\tFontFile(std::string Path) { m_Path = Path; m_pFont = 0; }\n-\t\tstd::string m_Path;\n-\t\tCFont *m_pFont;\n-\t};\n+\t\tm_Name = \"\";\n+\t\tmem_zero(m_apFonts, sizeof(m_apFonts));\n+\t}\n \n-\tarray<FontFile> m_FontFiles;\n-\tint m_ActiveFontIndex;\n+\tbool operator<(const CFontFile& other) { return str_comp(this->m_Name.c_str(), other.m_Name.c_str()) < 0; }\n+};\n+\n+class IFontMgr : public CComponent\n+{\n+public:\n+\tenum { TYPE_BASIC, TYPE_MONO };\n \n-\tvoid SortList();\n-\tvoid LoadFolder(const char *pFolder);\n-\tvoid InitFont(FontFile *f);\n+\tvirtual void Init() = 0;\n+\tvirtual void ReloadFontlist() = 0;\n+\tvirtual bool ActivateFont(int ListIndex) = 0;\n \n+\tvirtual int GetNumFonts() const = 0;\n+\tvirtual int GetSelectedFontIndex() const = 0;\n+\tvirtual const char *GetFontPath(int ListIndex) const = 0;\n+\tvirtual CFont *GetFont(int FontFace) = 0;\n+};\n+\n+class CFontMgr : public IFontMgr\n+{\n+\tint m_ActiveFontIndex;\n+\tsorted_array<CFontFile> m_lFontFiles;\n+\n+\tvoid LoadFolder();\n+\tbool InitFont(CFontFile *f);\n+\tbool InitFont_impl(CFontFile *f, int Type, const char *pTypeStr);\n+\tvoid UnloadFont(int ListIndex);\n+\tvoid RemoveFont(int ListIndex);\n \n public:\n+\tconst int m_Type;\n+\tCFontMgr(int Type)\n+\t\t\t: m_Type(Type)\n+\t{\n+\t}\n+\n \tvoid Init();\n \tvoid ReloadFontlist();\n-\tvoid ActivateFont(int ListIndex);\n+\tbool ActivateFont(int ListIndex);\n \n-\tint GetNumFonts() const { return m_FontFiles.size(); }\n-\tint GetNumLoadedFonts() const { int ret = 0; for(int i = 0; i < m_FontFiles.size(); i++) if(m_FontFiles[i].m_pFont) ret++; return ret; }\n+\tint GetNumFonts() const { return m_lFontFiles.size(); }\n \tint GetSelectedFontIndex() const { return m_ActiveFontIndex; }\n-\tconst char *GetFontPath(int i) const { if(i >= 0 && i < m_FontFiles.size()) return m_FontFiles[i].m_Path.c_str(); return \"\"; }\n-\tCFont *GetFont(int i) const { if(i >= 0 && i < m_FontFiles.size()) return m_FontFiles[i].m_pFont; return 0; }\n-\n-protected:\n-\tIStorageTW *m_pStorage;\n+\tconst char *GetFontPath(int i) const { if(i >= 0 && i < m_lFontFiles.size()) return m_lFontFiles[i].m_Name.c_str(); return \"\"; }\n+\tCFont *GetFont(int FontFace)\n+\t{\n+\t\tif(FontFace < 0 || FontFace >= FONT_NUM_TYPES)\n+\t\t\tFontFace = FONT_REGULAR;\n+\t\tCFont *pFont = m_lFontFiles[m_ActiveFontIndex].m_apFonts[FontFace];\n+\t\tif(!pFont)\n+\t\t\tpFont = m_lFontFiles[m_ActiveFontIndex].m_apFonts[FONT_REGULAR]; // default to regular if wanted fontface not present\n+\t\treturn pFont;\n+\t}\n \n private:\n \tstatic int LoadFolderCallback(const char *pName, int IsDir, int DirType, void *pUser);"
    },
    {
      "sha": "78fd12927583de8fe03b87bc3ad1653465e9d74e",
      "filename": "src/game/client/components/gametexture.cpp",
      "status": "modified",
      "additions": 50,
      "deletions": 12,
      "changes": 62,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/gametexture.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/gametexture.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/gametexture.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -13,10 +13,21 @@ static const char *ms_pTextureDirs[] = {\n \t\t\"game\",\n \t\t\"cursor\",\n \t\t\"emotes\",\n-\t\t\"particles\"\n+\t\t\"particles\",\n+\t\t\"entities\"\n };\n \n \n+CGameTextureManager::CGameSkin::CGameSkin(const CDataImage &Image)\n+{\n+\tm_Texture = Image.m_Id;\n+\tconst char *pName = str_find_rev(Image.m_pFilename, \"/\");\n+\tif(!pName)\n+\t\tpName = Image.m_pFilename;\n+\tstr_copy(m_aName, pName, max(0, min((int)sizeof(m_aName), str_length(pName)-3)));\n+}\n+\n+\n int CGameTextureManager::SkinScan(const char *pName, int IsDir, int DirType, void *pUser)\n {\n \tint l = str_length(pName);\n@@ -32,7 +43,8 @@ int CGameTextureManager::SkinScan(const char *pName, int IsDir, int DirType, voi\n \tbool IsUsed = ((pData->m_ScanType == TEXTURE_GROUP_GAME && str_comp(pName, g_Config.m_TexGame) == 0)\t||\n \t \t\t\t(pData->m_ScanType == TEXTURE_GROUP_CURSOR && str_comp(pName, g_Config.m_TexCursor) == 0)\t||\n \t\t\t\t(pData->m_ScanType == TEXTURE_GROUP_EMOTE && str_comp(pName, g_Config.m_TexEmoticons) == 0)\t||\n-\t\t\t\t(pData->m_ScanType == TEXTURE_GROUP_PARTICLES && str_comp(pName, g_Config.m_TexParticles) == 0));\n+\t\t\t\t(pData->m_ScanType == TEXTURE_GROUP_PARTICLES && str_comp(pName, g_Config.m_TexParticles) == 0) ||\n+\t\t\t\t(pData->m_ScanType == TEXTURE_GROUP_ENTITIES && str_comp(pName, g_Config.m_TexEntities) == 0));\n \n \n \t// set skin data\n@@ -63,9 +75,10 @@ void CGameTextureManager::OnInit()\n \t\tstr_format(aBuf, sizeof(aBuf), \"textures/%s/!default.png\", ms_pTextureDirs[i]);\n \n \t\t// set default skin data\n-\t\tCGameSkin DefaultSkin;\n+\t\tCGameSkin DefaultSkin(g_pData->m_aImages[MapGroupToImage(i)]);\n+\t\t/*CGameSkin DefaultSkin;\n \t\tDefaultSkin.m_Texture = Graphics()->LoadTexture(aBuf, IStorageTW::TYPE_ALL, CImageInfo::FORMAT_AUTO, 0);\n-\t\tstr_format(DefaultSkin.m_aName, sizeof(DefaultSkin.m_aName), \"!default\");\n+\t\tstr_format(DefaultSkin.m_aName, sizeof(DefaultSkin.m_aName), \"!default\");*/\n \t\tm_aSkins[i].add(DefaultSkin);\n \n \n@@ -86,21 +99,22 @@ void CGameTextureManager::OnInit()\n void CGameTextureManager::OnReset()\n {\n \tSetTexture(IMAGE_GAME, g_Config.m_TexGame);\n-\tSetTexture(IMAGE_CURSOR, g_Config.m_TexCursor);\n+\tSetTexture(IMAGE_HUDCURSOR, g_Config.m_TexCursor);\n \tSetTexture(IMAGE_EMOTICONS, g_Config.m_TexEmoticons);\n \tSetTexture(IMAGE_PARTICLES, g_Config.m_TexParticles);\n }\n \n int CGameTextureManager::SetTexture(int Image, const char *pName)\n {\n-\tint Group =\t Image == IMAGE_GAME  ? TEXTURE_GROUP_GAME :\n-\t\t\t\t Image == IMAGE_CURSOR  ? TEXTURE_GROUP_CURSOR :\n-\t\t\t\t Image == IMAGE_EMOTICONS  ? TEXTURE_GROUP_EMOTE :\n-\t\t\t\t Image == IMAGE_PARTICLES  ? TEXTURE_GROUP_PARTICLES : -1;\n-\n+\tint Group = MapImageToGroup(Image);\n \tdbg_assert(Group >= 0 && Group < NUM_TEXTURE_GROUPS, \"CGameTextureManager::SetTexture invalid group\");\n \n-\treturn g_pData->m_aImages[Image].m_Id = FindTexture(Group, pName);\n+\tint result = g_pData->m_aImages[Image].m_Id = FindTexture(Group, pName);\n+\n+\tif(g_Config.m_Debug)\n+\t\tdbg_msg(\"gametexture/debug\", \"settings texture %i <- %i(%s) : %i('%s')\", Image, Group, ms_pTextureDirs[Group], result, pName);\n+\n+\treturn result;\n }\n \n int CGameTextureManager::FindTexture(int Group, const char *pName)\n@@ -113,10 +127,34 @@ int CGameTextureManager::FindTexture(int Group, const char *pName)\n \t\t\t{\n \t\t\t\tchar aPath[512];\n \t\t\t\tstr_format(aPath, sizeof(aPath), \"textures/%s/%s.png\", ms_pTextureDirs[Group], pName);\n-\t\t\t\tm_aSkins[Group][i].m_Texture = Graphics()->LoadTexture(aPath, IStorageTW::TYPE_ALL, CImageInfo::FORMAT_AUTO, 0);\n+\t\t\t\tif((m_aSkins[Group][i].m_Texture = Graphics()->LoadTexture(aPath, IStorageTW::TYPE_ALL, CImageInfo::FORMAT_AUTO, 0)) <= 0)\n+\t\t\t\t\tdbg_msg(\"gametexture/error\", \"failed to load '%s'\", aPath);\n+\t\t\t\telse if(g_Config.m_Debug)\n+\t\t\t\t\tdbg_msg(\"gametexture/debug\", \"loaded texture '%s'\", aPath);\n+\n \t\t\t}\n \t\t\treturn m_aSkins[Group][i].m_Texture;\n \t\t}\n \t}\n \treturn 0;\n }\n+\n+int CGameTextureManager::MapImageToGroup(int Image) const\n+{\n+\tint Group = Image == IMAGE_GAME ? TEXTURE_GROUP_GAME :\n+\t\t\t\tImage == IMAGE_HUDCURSOR ? TEXTURE_GROUP_CURSOR :\n+\t\t\t\tImage == IMAGE_EMOTICONS ? TEXTURE_GROUP_EMOTE :\n+\t\t\t\tImage == IMAGE_PARTICLES ? TEXTURE_GROUP_PARTICLES :\n+\t\t\t\tImage == IMAGE_ENTITIES ? TEXTURE_GROUP_ENTITIES : -1;\n+\treturn Group;\n+}\n+\n+int CGameTextureManager::MapGroupToImage(int Group) const\n+{\n+\tint Image = Group == TEXTURE_GROUP_GAME ? IMAGE_GAME :\n+\t\t\t\tGroup == TEXTURE_GROUP_CURSOR ? IMAGE_HUDCURSOR :\n+\t\t\t\tGroup == TEXTURE_GROUP_EMOTE ? IMAGE_EMOTICONS :\n+\t\t\t\tGroup == TEXTURE_GROUP_PARTICLES ? IMAGE_PARTICLES :\n+\t\t\t\tGroup == TEXTURE_GROUP_ENTITIES ? IMAGE_ENTITIES : IMAGE_NULL;\n+\treturn Image;\n+}"
    },
    {
      "sha": "0ec765222e2574845aae699d14c5a8201d4baa2f",
      "filename": "src/game/client/components/gametexture.h",
      "status": "modified",
      "additions": 9,
      "deletions": 2,
      "changes": 11,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/gametexture.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/gametexture.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/gametexture.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -2,6 +2,7 @@\n /* If you are missing that file, acquire a complete release at teeworlds.com.                */\n #ifndef GAME_CLIENT_COMPONENTS_GSKINS_H\n #define GAME_CLIENT_COMPONENTS_GSKINS_H\n+#include <queue>\n #include <base/vmath.h>\n #include <base/tl/sorted_array.h>\n #include <game/client/component.h>\n@@ -15,23 +16,28 @@ class CGameTextureManager : public CComponent\n \t\tint m_ScanType;\n \t};\n \n+\tint MapImageToGroup(int Image) const;\n+\tint MapGroupToImage(int Group) const;\n+\n public:\n \tenum\n \t{\n \t\tTEXTURE_GROUP_GAME=0,\n \t\tTEXTURE_GROUP_CURSOR,\n \t\tTEXTURE_GROUP_EMOTE,\n \t\tTEXTURE_GROUP_PARTICLES,\n+\t\tTEXTURE_GROUP_ENTITIES,\n \t\tNUM_TEXTURE_GROUPS\n \t};\n \n-\tstruct CGameSkin\n+\tclass CGameSkin\n \t{\n \t\tfriend class CGameTextureManager;\n-\tprivate:\n \t\tint m_Texture;\n \n \tpublic:\n+\t\tCGameSkin(){}\n+\t\tCGameSkin(const class CDataImage &Image);\n \t\tchar m_aName[128];\n \t\tint Texture() const { return m_Texture; }\n \n@@ -51,4 +57,5 @@ class CGameTextureManager : public CComponent\n \n \tstatic int SkinScan(const char *pName, int IsDir, int DirType, void *pUser);\n };\n+\n #endif"
    },
    {
      "sha": "e51b23c55700cb1ecc1736938b39c99c1f40d4ac",
      "filename": "src/game/client/components/hud.cpp",
      "status": "modified",
      "additions": 10,
      "deletions": 5,
      "changes": 15,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/hud.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/hud.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/hud.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -56,13 +56,18 @@ void CHud::RenderGameTimer()\n \t{\n \t\tchar aBuf[32];\n \t\tint Time = 0;\n-\t\tif(m_pClient->m_Snap.m_pGameInfoObj->m_TimeLimit && !m_pClient->m_Snap.m_pGameInfoObj->m_WarmupTimer)\n+\t\tif(m_pClient->m_Snap.m_pGameInfoObj->m_TimeLimit && (m_pClient->m_Snap.m_pGameInfoObj->m_WarmupTimer <= 0))\n \t\t{\n \t\t\tTime = m_pClient->m_Snap.m_pGameInfoObj->m_TimeLimit*60 - ((Client()->GameTick()-m_pClient->m_Snap.m_pGameInfoObj->m_RoundStartTick)/Client()->GameTickSpeed());\n \n \t\t\tif(m_pClient->m_Snap.m_pGameInfoObj->m_GameStateFlags&GAMESTATEFLAG_GAMEOVER)\n \t\t\t\tTime = 0;\n \t\t}\n+\t\telse if(m_pClient->m_Snap.m_pGameInfoObj->m_GameStateFlags&GAMESTATEFLAG_RACETIME)\n+\t\t{\n+\t\t\t//The Warmup timer is negative in this case to make sure that incompatible clients will not see a warmup timer\n+\t\t\tTime = (Client()->GameTick()+m_pClient->m_Snap.m_pGameInfoObj->m_WarmupTimer)/Client()->GameTickSpeed();\n+\t\t}\n \t\telse\n \t\t\tTime = (Client()->GameTick()-m_pClient->m_Snap.m_pGameInfoObj->m_RoundStartTick)/Client()->GameTickSpeed();\n \n@@ -89,7 +94,7 @@ void CHud::RenderGameTimer()\n \t\tfloat w = TextRender()->TextWidth(0, FontSize, aBuf, -1);\n \n \t\t// last 60 sec red, last 10 sec blink\n-\t\tif(m_pClient->m_Snap.m_pGameInfoObj->m_TimeLimit && Time <= 60 && !m_pClient->m_Snap.m_pGameInfoObj->m_WarmupTimer)\n+\t\tif(m_pClient->m_Snap.m_pGameInfoObj->m_TimeLimit && Time <= 60 && (m_pClient->m_Snap.m_pGameInfoObj->m_WarmupTimer <= 0))\n \t\t{\n \t\t\tfloat Alpha = Time <= 10 && (2*time_get()/time_freq()) % 2 ? 0.5f : 1.0f;\n \t\t\tTextRender()->TextColor(1.0f, 0.25f, 0.25f, Alpha);\n@@ -136,7 +141,7 @@ void CHud::RenderScoreHud()\n \t{\n \t\tint GameFlags = m_pClient->m_Snap.m_pGameInfoObj->m_GameFlags;\n \t\tfloat Whole = 300*Graphics()->ScreenAspect();\n-\t\tfloat StartY = 229.0f;\n+\t\tfloat StartY = 220.0f;\n \n \t\tif(GameFlags&GAMEFLAG_TEAMS && m_pClient->m_Snap.m_pGameDataObj)\n \t\t{\n@@ -303,7 +308,7 @@ void CHud::RenderWarmupTimer()\n \tCALLSTACK_ADD();\n \n \t// render warmup timer\n-\tif(m_pClient->m_Snap.m_pGameInfoObj->m_WarmupTimer)\n+\tif(m_pClient->m_Snap.m_pGameInfoObj->m_WarmupTimer > 0 && !(m_pClient->m_Snap.m_pGameInfoObj->m_GameStateFlags&GAMESTATEFLAG_RACETIME))\n \t{\n \t\tchar Buf[256];\n \t\tfloat FontSize = 20.0f;\n@@ -347,7 +352,7 @@ void CHud::RenderTextInfo()\n \t{\n \t\tchar aBuf[64];\n \t\tstr_format(aBuf, sizeof(aBuf), \"%d\", Client()->GetPredictionTime());\n-\t\tTextRender()->Text(0, m_Width-10-TextRender()->TextWidth(0,12,aBuf,-1), g_Config.m_ClShowfps ? 20 : 5, 12, aBuf, -1);\n+\t\tTextRender()->Text(0, m_Width-5-TextRender()->TextWidth(0, 9, aBuf, -1), g_Config.m_ClShowfps ? m_Height-25*UI()->Scale() : m_Height-14*UI()->Scale(), 9, aBuf, -1);\n \t}\n }\n "
    },
    {
      "sha": "cb81c1b3492ac3d4d2ac5c52c095ede0805c52e9",
      "filename": "src/game/client/components/identity.cpp",
      "status": "modified",
      "additions": 6,
      "deletions": 1,
      "changes": 7,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/identity.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/identity.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/identity.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -65,7 +65,7 @@ void CIdentity::SaveIdents()\n \t\tstr_format(aTeeEntry[USE_CUSTOM_COLOR], 64, \"%d\", pEntry->m_UseCustomColor);\n \t\tstr_format(aTeeEntry[COLOR_BODY], 64, \"%d\", pEntry->m_ColorBody);\n \t\tstr_format(aTeeEntry[COLOR_FEET], 64, \"%d\", pEntry->m_ColorFeet);\n-\t\t\n+\n \t\tfor(int j = 0; j < NUM_ENTRIES; j++)\n \t\t{\n \t\t\tio_write(File, aTeeEntry[j], (unsigned int)str_length(aTeeEntry[j]));\n@@ -77,6 +77,11 @@ void CIdentity::SaveIdents()\n \tdbg_msg(\"ident\", \"successfully saved %i/%i identities\", Successful, NumIdents());\n }\n \n+void CIdentity::OnShutdown()\n+{\n+\tSaveIdents();\n+}\n+\n int CIdentity::FindIDFiles(const char *pName, int IsDir, int DirType, void *pUser)\n {\n \tCALLSTACK_ADD();"
    },
    {
      "sha": "3ecb316131665cadb1e4cca1b15ca35cf99b6806",
      "filename": "src/game/client/components/identity.h",
      "status": "modified",
      "additions": 3,
      "deletions": 1,
      "changes": 4,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/identity.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/identity.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/identity.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -9,7 +9,9 @@\n class CIdentity : public CComponent\n {\n public:\n-\tvoid OnInit();\n+\tvirtual void OnInit();\n+\tvirtual void OnShutdown();\n+\n \tvoid SaveIdents();\n \n \tstruct CIdentEntry"
    },
    {
      "sha": "efc53c238bee3255cb0a8783e1442e3b52bb1112",
      "filename": "src/game/client/components/irc.cpp",
      "status": "modified",
      "additions": 4,
      "deletions": 11,
      "changes": 15,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/irc.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/irc.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/irc.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -120,7 +120,7 @@ void CIRCBind::SendCommand(const char* pCmd)\n \tm_pClient->IRC()->SendRaw(++pCmd);\n }\n \n-void CIRCBind::Connect() // XXX this is deprecated and only for compatibility\n+void CIRCBind::Connect()\n {\n \tif(IsConnected())\n \t\treturn;\n@@ -129,15 +129,7 @@ void CIRCBind::Connect() // XXX this is deprecated and only for compatibility\n \tthread_init(ListenIRCThread, this);\n }\n \n-void CIRCBind::Disconnect(char *pReason) // XXX this is deprecated and only for compatibility\n-{\n-\tif(!IsConnected())\n-\t\treturn;\n-\n-\tm_pClient->IRC()->Disconnect(pReason);\n-}\n-\n-void CIRCBind::OnNickChange(const char *pNewNick) // XXX this is deprecated and only for compatibility\n+void CIRCBind::OnNickChange(const char *pNewNick)\n {\n \tm_pClient->IRC()->SetNick(pNewNick);\n }\n@@ -157,5 +149,6 @@ void CIRCBind::OnReset()\n \n void CIRCBind::OnShutdown()\n {\n-\tDisconnect(g_Config.m_ClIRCLeaveMsg);\n+\tif(IsConnected())\n+\t\tm_pClient->IRC()->Disconnect(g_Config.m_ClIRCLeaveMsg);\n }"
    },
    {
      "sha": "9438662dac1addac621ff86ed6849349074c69bf",
      "filename": "src/game/client/components/irc.h",
      "status": "modified",
      "additions": 0,
      "deletions": 1,
      "changes": 1,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/irc.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/irc.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/irc.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -15,7 +15,6 @@ class CIRCBind : public CComponent\n \tCIRCBind();\n \n \tvoid Connect();\n-\tvoid Disconnect(char *pReason);\n \n \tvoid SendCommand(const char *pCmd);\n \tvoid OnNickChange(const char *pNewNick);"
    },
    {
      "sha": "23d484470916da922f428544ae9def7953056c9d",
      "filename": "src/game/client/components/mapimages.cpp",
      "status": "modified",
      "additions": 19,
      "deletions": 10,
      "changes": 29,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/mapimages.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/mapimages.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/mapimages.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -6,7 +6,9 @@\n #include <engine/serverbrowser.h>\n #include <game/client/component.h>\n #include <game/mapitems.h>\n+#include <game/generated/client_data.h>\n \n+#include \"gametexture.h\"\n #include \"mapimages.h\"\n \n CMapImages::CMapImages()\n@@ -92,24 +94,31 @@ int CMapImages::GetEntities()\n \tCServerInfo Info;\n \tClient()->GetServerInfo(&Info);\n \n-\tif(m_EntitiesTextures == -1 || str_comp(m_aEntitiesGameType, Info.m_aGameType))\n+//\tif(m_EntitiesTextures == -1 || str_comp(m_aEntitiesGameType, Info.m_aGameType))\n \t{\n \t\t// DDNet default to prevent delay in seeing entities\n-\t\tchar file[64] = \"ddnet\";\n+\t\tconst char *pFile = 0;\n \t\tif(IsDDNet(&Info))\n-\t\t\tstr_copy(file, \"ddnet\", sizeof(file));\n+\t\t\tpFile = \"ddnet\";\n \t\telse if(IsDDRace(&Info))\n-\t\t\tstr_copy(file, \"ddrace\", sizeof(file));\n+\t\t\tpFile = \"ddrace\";\n \t\telse if(IsRace(&Info))\n-\t\t\tstr_copy(file, \"race\", sizeof(file));\n+\t\t\tpFile = \"race\";\n \t\telse if(IsFNG(&Info))\n-\t\t\tstr_copy(file, \"fng\", sizeof(file));\n+\t\t\tpFile = \"fng\";\n \t\telse if(IsVanilla(&Info))\n-\t\t\tstr_copy(file, \"vanilla\", sizeof(file));\n+\t\t\tpFile = \"vanilla\";\n \n-\t\tchar path[64];\n-\t\tstr_format(path, sizeof(path), \"editor/entities_clear/%s.png\", file);\n-\t\tm_EntitiesTextures = Graphics()->LoadTexture(path, IStorageTW::TYPE_ALL, CImageInfo::FORMAT_AUTO, 0);\n+\t\tif(pFile)\n+\t\t{\n+\t\t\tchar aPath[256];\n+\t\t\tstr_format(aPath, sizeof(aPath), \"textures/entities/clear/%s.png\", pFile);\n+\t\t\tm_EntitiesTextures = Graphics()->LoadTexture(aPath, IStorageTW::TYPE_ALL, CImageInfo::FORMAT_AUTO, 0); // don't worry about leaks here, this is being cached\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tm_EntitiesTextures = g_pData->m_aImages[IMAGE_ENTITIES].m_Id;\n+\t\t}\n \n \t\tstr_copy(m_aEntitiesGameType, Info.m_aGameType, sizeof(m_aEntitiesGameType));\n \t}"
    },
    {
      "sha": "1f328a448366c23a4bd22b95b2758983b656242b",
      "filename": "src/game/client/components/maplayers.cpp",
      "status": "modified",
      "additions": 3,
      "deletions": 0,
      "changes": 3,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/maplayers.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/maplayers.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/maplayers.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -155,6 +155,9 @@ void CMapLayers::OnRender()\n \t\t\tfloat y0 = (pGroup->m_ClipY - Points[1]) / (Points[3]-Points[1]);\n \t\t\tfloat x1 = ((pGroup->m_ClipX+pGroup->m_ClipW) - Points[0]) / (Points[2]-Points[0]);\n \t\t\tfloat y1 = ((pGroup->m_ClipY+pGroup->m_ClipH) - Points[1]) / (Points[3]-Points[1]);\n+\t\t\t\n+\t\t\tif(x1 < 0.0f || x0 > 1.0f || y1 < 0.0f || y0 > 1.0f)\n+\t\t\t\tcontinue;\n \n \t\t\tGraphics()->ClipEnable((int)(x0*Graphics()->ScreenWidth()), (int)(y0*Graphics()->ScreenHeight()),\n \t\t\t\t(int)((x1-x0)*Graphics()->ScreenWidth()), (int)((y1-y0)*Graphics()->ScreenHeight()));"
    },
    {
      "sha": "04b30a44dc375f4114211f40df78d1f18b5b01bb",
      "filename": "src/game/client/components/menus.cpp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/menus.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -2556,7 +2556,7 @@ void CMenus::OnRender()\n \t// render cursor\n \tif(m_pClient->m_pGameConsole->IsClosed())\n \t{\n-\t\tGraphics()->TextureSet(g_pData->m_aImages[IMAGE_CURSOR].m_Id);\n+\t\tGraphics()->TextureSet(g_pData->m_aImages[IMAGE_HUDCURSOR].m_Id);\n \t\tGraphics()->QuadsBegin();\n \t\tGraphics()->QuadsSetRotation((float)g_Config.m_ClMouseRotation*((2.0f*3.1415926f)/360.0f));\n \t\tGraphics()->SetColor(1,1,1,1);\n@@ -2725,7 +2725,7 @@ bool CMenus::LockInput(IInput::CEvent e)\n \n \tif(m_HotbarActive || m_IRCActive)\n \t{\n-\t\tif((e.m_Flags&IInput::FLAG_PRESS) && (e.m_Key == KEY_MOUSE_1 || e.m_Key == KEY_MOUSE_2))\n+\t\tif((e.m_Flags&IInput::FLAG_PRESS)/* && (e.m_Key == KEY_MOUSE_1 || e.m_Key == KEY_MOUSE_2)*/)\n \t\t\treturn true;\n \t}\n \treturn false;"
    },
    {
      "sha": "c69ce0ce175f3bc86f6383431fd04f5b6b026c62",
      "filename": "src/game/client/components/menus.h",
      "status": "modified",
      "additions": 1,
      "deletions": 0,
      "changes": 1,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/menus.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -403,6 +403,7 @@ public:\tint m_LoadTotal;\n \tvoid RenderSettingsParticles(CUIRect MainView);\n \tvoid RenderSettingsEmoticons(CUIRect MainView);\n \tvoid RenderSettingsCursor(CUIRect MainView);\n+\tvoid RenderSettingsEntities(CUIRect MainView);\n \n \t// found in menus_manual.cpp\n \tvoid RenderManual(CUIRect MainView);"
    },
    {
      "sha": "77ab26f198971648274b7f7b7a814e81d80f418b",
      "filename": "src/game/client/components/menus_hotbar.cpp",
      "status": "modified",
      "additions": 9,
      "deletions": 6,
      "changes": 15,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_hotbar.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_hotbar.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/menus_hotbar.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -380,12 +380,15 @@ void CMenus::RenderHotbar(CUIRect MainView)\n \tr.y = MainView.h - r.h;\n \tRenderIdents(r);\n \n-\tCUIRect t;\n-\tMainView.HSplitTop(115.0f, &t, 0);\n-\tt.w = 340.0f;\n-\tt.x = MainView.w - t.w;\n-\tt.y = MainView.h / 2.0f - t.h / 2.0f;\n-\tRenderTrans(t);\n+\tif(m_pClient->m_pChat->TranslatorAvailable())\n+\t{\n+\t\tCUIRect t;\n+\t\tMainView.HSplitTop(115.0f, &t, 0);\n+\t\tt.w = 340.0f;\n+\t\tt.x = MainView.w - t.w;\n+\t\tt.y = MainView.h / 2.0f - t.h / 2.0f;\n+\t\tRenderTrans(t);\n+\t}\n \n \tCUIRect c;\n \tMainView.HSplitTop(125.0f, &c, 0);"
    },
    {
      "sha": "e810aba9b7902d0d882c004f3defe71dbcb53484",
      "filename": "src/game/client/components/menus_irc.cpp",
      "status": "modified",
      "additions": 10,
      "deletions": 4,
      "changes": 14,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_irc.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_irc.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/menus_irc.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -6,7 +6,9 @@\n #include <engine/textrender.h>\n \n #include \"irc.h\"\n+#include \"chat.h\"\n #include \"menus.h\"\n+#include \"fontmgr.h\"\n #include <game/client/components/console.h>\n #include <game/generated/client_data.h>\n \n@@ -46,7 +48,9 @@ bool CMenus::ToggleIRC()\n \t}\n \tRenderIRC(*UI()->Screen());\n \n-\tInput()->SetIMEState(m_IRCActive);\n+\tInput()->SetIMEState(m_IRCActive || m_MenuActive || m_pClient->m_pChat->IsActive());\n+\tUseMouseButtons(m_IRCActive || m_MenuActive);\n+\n \treturn m_IRCActive;\n }\n \n@@ -141,7 +145,7 @@ void CMenus::RenderIRC(CUIRect MainView)\n \t\tButtonBox.VSplitRight(80.0f, &ButtonBox, &Button);\n \t\tstatic CButtonContainer s_ButtonDisc;\n \t\tif(DoButton_Menu(&s_ButtonDisc, g_Config.m_ClIRCAutoconnect ? Localize(\"Reconnect\") : Localize(\"Disconnect\"), 0, &Button))\n-\t\t\tm_pClient->m_pIRCBind->Disconnect(g_Config.m_ClIRCLeaveMsg);\n+\t\t\tm_pClient->IRC()->Disconnect(g_Config.m_ClIRCLeaveMsg);\n \n \t\t// scroll through the tabs\n \t\tif(UI()->MouseInside(&ButtonBox) && m_pClient->m_pGameConsole->IsClosed())\n@@ -175,7 +179,9 @@ void CMenus::RenderIRC(CUIRect MainView)\n \t\t\t{\n \t\t\t\tCComChan *pChan = static_cast<CComChan*>(pCom);\n \t\t\t\tstatic float FadeVal[64] = { 0.0f };\n+\t\t\t\tmem_zero(&FadeVal, sizeof(FadeVal));\n \t\t\t\tstatic bool Add[64] = { true };\n+\t\t\t\tmem_set(&Add, true, sizeof(Add));\n \n \t\t\t\tif(Add[i])\n \t\t\t\t\tsmooth_set(&FadeVal[i], 1.0f, 120.0f, Client()->RenderFrameTime());\n@@ -428,7 +434,7 @@ void CMenus::RenderIRC(CUIRect MainView)\n \t\t\t\t\t\tvec3 rgb = HslToRgb(vec3((float)g_Config.m_ClMessageHighlightHue/255.0f, (float)g_Config.m_ClMessageHighlightSat/255.0f, (float)g_Config.m_ClMessageHighlightLht/255.0f));\n \t\t\t\t\t\tTextRender()->TextColor(rgb.r, rgb.g, rgb.b, 1.0f);\n \t\t\t\t\t}\n-\t\t\t\t\tUI()->DoLabelScaled(&Item.m_Rect, pChan->m_Buffer[i].c_str(), 10.0f, -1);\n+\t\t\t\t\tUI()->DoLabelScaled(&Item.m_Rect, pChan->m_Buffer[i].c_str(), (float)g_Config.m_ClMonoFontSize, -1, -1.0f, 0, m_pClient->m_pFontMgrMono->GetFont(FONT_REGULAR));\n \t\t\t\t\tTextRender()->TextColor(1,1,1,1);\n \t\t\t\t}\n \t\t\t}\n@@ -475,7 +481,7 @@ void CMenus::RenderIRC(CUIRect MainView)\n \t\t\t\t\tItem.m_Rect.x -= 1.7f*Item.m_Rect.w * s_HScrollbarVal;\n \t\t\t\t\tif(pQuery->m_Buffer[i].c_str())\n \t\t\t\t\t\tif(str_length(pQuery->m_Buffer[i].c_str()))\n-\t\t\t\t\t\t\tUI()->DoLabelScaled(&Item.m_Rect, pQuery->m_Buffer[i].c_str(), 10.0f, -1);\n+\t\t\t\t\t\t\tUI()->DoLabelScaled(&Item.m_Rect, pQuery->m_Buffer[i].c_str(), (float)g_Config.m_ClMonoFontSize, -1, -1.0f, 0, m_pClient->m_pFontMgrMono->GetFont(FONT_REGULAR));\n \t\t\t\t}\n \t\t\t}\n \t\t\tUiDoListboxEnd(&s_ChatScrollValue, 0);"
    },
    {
      "sha": "9127c549c8022c988e591e08488e8ae37e42526f",
      "filename": "src/game/client/components/menus_settings.cpp",
      "status": "removed",
      "additions": 0,
      "deletions": 3586,
      "changes": 3586,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/a26a883e6bfcd9bac39281065bbf7cad4c1a0155/src/game/client/components/menus_settings.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/a26a883e6bfcd9bac39281065bbf7cad4c1a0155/src/game/client/components/menus_settings.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/menus_settings.cpp?ref=a26a883e6bfcd9bac39281065bbf7cad4c1a0155"
    },
    {
      "sha": "45f384280fe7411bb5d827ae4a1b319d65e8be11",
      "filename": "src/game/client/components/menus_settings/settings.cpp",
      "status": "added",
      "additions": 898,
      "deletions": 0,
      "changes": 898,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/menus_settings/settings.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -0,0 +1,898 @@\n+/* (c) Magnus Auvinen. See licence.txt in the root of the distribution for more information. */\n+/* If you are missing that file, acquire a complete release at teeworlds.com.                */\n+#include \"SDL.h\" // SDL_VIDEO_DRIVER_X11\n+\n+#include <base/tl/string.h>\n+#include <base/tl/array.h>\n+\n+#include <base/math.h>\n+\n+#include <engine/engine.h>\n+#include <engine/graphics.h>\n+#include <engine/storage.h>\n+#include <engine/textrender.h>\n+#include <engine/updater.h>\n+#include <engine/shared/config.h>\n+#include <engine/shared/linereader.h>\n+\n+#include <game/generated/protocol.h>\n+#include <game/generated/client_data.h>\n+\n+#include <game/client/components/sounds.h>\n+#include <game/client/ui.h>\n+#include <game/client/render.h>\n+#include <game/client/gameclient.h>\n+#include <game/client/animstate.h>\n+#include <game/localization.h>\n+#include <game/version.h>\n+\n+#include \"../menus.h\"\n+#include \"../binds.h\"\n+#include \"../camera.h\"\n+#include \"../countryflags.h\"\n+#include \"game/client/components/fontmgr.h\"\n+#include \"../identity.h\"\n+#include \"../skins.h\"\n+#include \"../console.h\"\n+\n+\n+\n+/*\tThis is for scripts/update_localization.py to work, don't remove!\n+\tLocalize(\"Move left\");Localize(\"Move right\");Localize(\"Jump\");Localize(\"Fire\");Localize(\"Hook\");Localize(\"Hammer\");\n+\tLocalize(\"Pistol\");Localize(\"Shotgun\");Localize(\"Grenade\");Localize(\"Rifle\");Localize(\"Next weapon\");Localize(\"Prev. weapon\");\n+\tLocalize(\"Vote yes\");Localize(\"Vote no\");Localize(\"Chat\");Localize(\"Team chat\");Localize(\"Show chat\");Localize(\"Emoticon\");\n+\tLocalize(\"Spectator mode\");Localize(\"Spectate next\");Localize(\"Spectate previous\");Localize(\"Console\");Localize(\"Remote console\");Localize(\"Screenshot\");Localize(\"Scoreboard\");Localize(\"Respawn\");\n+\tLocalize(\"Hammerfly Dummy\");Localize(\"Hidden Chat\");Localize(\"Crypted Chat\");Localize(\"Hookfly Dummy\");Localize(\"Toggle X-Ray\");Localize(\"Zoom in\");\n+\tLocalize(\"Zoom out\");Localize(\"Toggle IRC\");Localize(\"Toggle Lua Console\");Localize(\"Toggle Hotbar\");Localize(\"Unlock Mouse\");\n+*/\n+\n+\n+\n+class CLanguage\n+{\n+public:\n+\tCLanguage() {}\n+\tCLanguage(const char *n, const char *f, int Code) : m_Name(n), m_FileName(f), m_CountryCode(Code) {}\n+\n+\tstring m_Name;\n+\tstring m_FileName;\n+\tint m_CountryCode;\n+\n+\tbool operator<(const CLanguage &Other) { return m_Name < Other.m_Name; }\n+};\n+\n+void LoadLanguageIndexfile(IStorageTW *pStorage, IConsole *pConsole, sorted_array<CLanguage> *pLanguages)\n+{\n+\tIOHANDLE File = pStorage->OpenFile(\"languages/index.txt\", IOFLAG_READ, IStorageTW::TYPE_ALL);\n+\tif(!File)\n+\t{\n+\t\tpConsole->Print(IConsole::OUTPUT_LEVEL_ADDINFO, \"localization\", \"couldn't open index file\");\n+\t\treturn;\n+\t}\n+\n+\tchar aOrigin[128];\n+\tchar aReplacement[128];\n+\tCLineReader LineReader;\n+\tLineReader.Init(File);\n+\tchar *pLine;\n+\twhile((pLine = LineReader.Get()))\n+\t{\n+\t\tif(!str_length(pLine) || pLine[0] == '#') // skip empty lines and comments\n+\t\t\tcontinue;\n+\n+\t\tstr_copy(aOrigin, pLine, sizeof(aOrigin));\n+\n+\t\tpLine = LineReader.Get();\n+\t\tif(!pLine)\n+\t\t{\n+\t\t\tpConsole->Print(IConsole::OUTPUT_LEVEL_ADDINFO, \"localization\", \"unexpected end of index file\");\n+\t\t\tbreak;\n+\t\t}\n+\n+\t\tif(pLine[0] != '=' || pLine[1] != '=' || pLine[2] != ' ')\n+\t\t{\n+\t\t\tchar aBuf[128];\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"malform replacement for index '%s'\", aOrigin);\n+\t\t\tpConsole->Print(IConsole::OUTPUT_LEVEL_ADDINFO, \"localization\", aBuf);\n+\t\t\t(void)LineReader.Get();\n+\t\t\tcontinue;\n+\t\t}\n+\t\tstr_copy(aReplacement, pLine+3, sizeof(aReplacement));\n+\n+\t\tpLine = LineReader.Get();\n+\t\tif(!pLine)\n+\t\t{\n+\t\t\tpConsole->Print(IConsole::OUTPUT_LEVEL_ADDINFO, \"localization\", \"unexpected end of index file\");\n+\t\t\tbreak;\n+\t\t}\n+\n+\t\tif(pLine[0] != '=' || pLine[1] != '=' || pLine[2] != ' ')\n+\t\t{\n+\t\t\tchar aBuf[128];\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"malform replacement for index '%s'\", aOrigin);\n+\t\t\tpConsole->Print(IConsole::OUTPUT_LEVEL_ADDINFO, \"localization\", aBuf);\n+\t\t\tcontinue;\n+\t\t}\n+\n+\t\tchar aFileName[128];\n+\t\tstr_format(aFileName, sizeof(aFileName), \"languages/%s.txt\", aOrigin);\n+\t\tpLanguages->add(CLanguage(aReplacement, aFileName, str_toint(pLine+3)));\n+\t}\n+\tio_close(File);\n+}\n+\n+void CMenus::RenderLanguageSelection(CUIRect MainView)\n+{\n+\tCALLSTACK_ADD();\n+\n+\tstatic CButtonContainer s_LanguageList;\n+\tstatic int s_SelectedLanguage = 0;\n+\tstatic sorted_array<CLanguage> s_Languages;\n+\tstatic float s_ScrollValue = 0;\n+\n+\tif(s_Languages.size() == 0)\n+\t{\n+\t\ts_Languages.add(CLanguage(\"English\", \"\", 826));\n+\t\tLoadLanguageIndexfile(Storage(), Console(), &s_Languages);\n+\t\tfor(int i = 0; i < s_Languages.size(); i++)\n+\t\t\tif(str_comp(s_Languages[i].m_FileName, g_Config.m_ClLanguagefile) == 0)\n+\t\t\t{\n+\t\t\t\ts_SelectedLanguage = i;\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t}\n+\n+\tint OldSelected = s_SelectedLanguage;\n+\n+#if defined(__ANDROID__)\n+\tUiDoListboxStart(&s_LanguageList , &MainView, 50.0f, Localize(\"Language\"), \"\", s_Languages.size(), 1, s_SelectedLanguage, s_ScrollValue);\n+#else\n+\tUiDoListboxStart(&s_LanguageList , &MainView, 24.0f, Localize(\"Language\"), \"\", s_Languages.size(), 2, s_SelectedLanguage, s_ScrollValue);\n+#endif\n+\n+\tfor(sorted_array<CLanguage>::range r = s_Languages.all(); !r.empty(); r.pop_front())\n+\t{\n+\t\tCPointerContainer Container(&r.front());\n+\t\tCListboxItem Item = UiDoListboxNextItem(&Container);\n+\n+\t\tif(Item.m_Visible)\n+\t\t{\n+\t\t\tCUIRect Rect;\n+\t\t\tItem.m_Rect.VSplitLeft(Item.m_Rect.h*2.0f, &Rect, &Item.m_Rect);\n+\t\t\tRect.VMargin(6.0f, &Rect);\n+\t\t\tRect.HMargin(3.0f, &Rect);\n+\t\t\tvec4 Color(1.0f, 1.0f, 1.0f, 1.0f);\n+\t\t\tm_pClient->m_pCountryFlags->Render(r.front().m_CountryCode, &Color, Rect.x, Rect.y, Rect.w, Rect.h);\n+\t\t\tItem.m_Rect.HSplitTop(2.0f, 0, &Item.m_Rect);\n+\t\t\tUI()->DoLabelScaled(&Item.m_Rect, r.front().m_Name, 16.0f, -1);\n+\t\t}\n+\t}\n+\n+\ts_SelectedLanguage = UiDoListboxEnd(&s_ScrollValue, 0);\n+\n+\tif(OldSelected != s_SelectedLanguage)\n+\t{\n+\t\tstr_copy(g_Config.m_ClLanguagefile, s_Languages[s_SelectedLanguage].m_FileName, sizeof(g_Config.m_ClLanguagefile));\n+\t\tg_Localization.Load(s_Languages[s_SelectedLanguage].m_FileName, Storage(), Console());\n+\n+\t\t// Load Font\n+\t\tstatic CFont *pDefaultFont = 0;\n+\t\tchar aFilename[512];\n+\t\tconst char *pFontFile = \"fonts/DejaVuSansCJKName.ttf\";\n+\t\tif (str_find(g_Config.m_ClLanguagefile, \"chinese\") != NULL || str_find(g_Config.m_ClLanguagefile, \"japanese\") != NULL ||\n+\t\t\tstr_find(g_Config.m_ClLanguagefile, \"korean\") != NULL)\n+\t\t\tpFontFile = \"fonts/DejavuWenQuanYiMicroHei.ttf\";\n+\t\tIOHANDLE File = Storage()->OpenFile(pFontFile, IOFLAG_READ, IStorageTW::TYPE_ALL, aFilename, sizeof(aFilename));\n+\t\tif(File)\n+\t\t{\n+\t\t\tio_close(File);\n+\t\t\tpDefaultFont = TextRender()->LoadFont(aFilename);\n+\t\t\tTextRender()->SetDefaultFont(pDefaultFont);\n+\t\t}\n+\t\tif(!pDefaultFont)\n+\t\t\tConsole()->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"gameclient\", \"failed to load font. filename='%s'\", pFontFile);\n+\t}\n+}\n+\n+void CMenus::RenderSettings(CUIRect MainView)\n+{\n+\tCALLSTACK_ADD();\n+\n+\t//static int s_SettingsPage = 0;\n+\n+\t// render background\n+\tCUIRect Temp, TabBar, RestartWarning;\n+\tMainView.VSplitRight(120.0f, &MainView, &TabBar);\n+\tRenderTools()->DrawUIRect(&MainView, ms_ColorTabbarActive, CUI::CORNER_B|CUI::CORNER_TL, 10.0f);\n+\tMainView.Margin(10.0f, &MainView);\n+\tMainView.HSplitBottom(15.0f, &MainView, &RestartWarning);\n+\tTabBar.HSplitTop(50.0f, &Temp, &TabBar);\n+\tRenderTools()->DrawUIRect(&Temp, ms_ColorTabbarActive, CUI::CORNER_R, 10.0f);\n+\n+\tMainView.HSplitTop(10.0f, 0, &MainView);\n+\n+\tCUIRect Button;\n+\n+\tconst char *aTabs[] = {\n+\t\tLocalize(\"Language\"),\n+\t\tLocalize(\"General\"),\n+\t\tLocalize(\"Identities\"),\n+\t\tLocalize(\"Controls\"),\n+\t\tLocalize(\"Graphics\"),\n+\t\tLocalize(\"Sound\"),\n+\t\t(\"Haxx\"),\n+\t\tm_pfnAppearanceSubpage == NULL ? Localize(\"Appearance\") : Localize(\"< back\"),\n+\t\tLocalize(\"Misc.\"),\n+#if defined(FEATURE_LUA)\n+\t\tLocalize(\"Lua\"),\n+#endif\n+\t\t//Localize(\"All\")\n+\t};\n+\n+\tconst int NumTabs = (int)(sizeof(aTabs)/sizeof(*aTabs));\n+\tstatic float FadeVals[NumTabs] = {0.0f};\n+\n+\tfor(int i = 0; i < NumTabs; i++)\n+\t{\n+\t\tTabBar.HSplitTop(i == PAGE_SETTINGS_HAXX || i == PAGE_SETTINGS_LUA ? 24 : 10, &Button, &TabBar);\n+\t\tTabBar.HSplitTop(26, &Button, &TabBar);\n+\t\tif(UI()->MouseInside(&Button))\n+\t\t\tsmooth_set(&FadeVals[i], 5.0f, 10.0f, Client()->RenderFrameTime());\n+\t\telse\n+\t\t\tsmooth_set(&FadeVals[i], 0.0f, 10.0f, Client()->RenderFrameTime());\n+\t\tButton.w += FadeVals[i];\n+\t\tCPointerContainer Container(&aTabs[i]);\n+\t\tif(DoButton_MenuTab(&Container, aTabs[i], g_Config.m_UiSettingsPage == i, &Button, CUI::CORNER_R,\n+\t\t\t\ti == PAGE_SETTINGS_APPEARANCE && m_pfnAppearanceSubpage ? vec4(0.8f, 0.6f, 0.25f, ms_ColorTabbarActive.a) : ms_ColorTabbarActive\n+\t\t\t\t))\n+\t\t{\n+\t\t\tm_pfnAppearanceSubpage = 0;\n+\t\t\tg_Config.m_UiSettingsPage = i;\n+\t\t}\n+\t}\n+\n+\tMainView.Margin(10.0f, &MainView);\n+\n+\tif(g_Config.m_UiSettingsPage == PAGE_SETTINGS_LANGUAGE)\n+\t\tRenderLanguageSelection(MainView);\n+\telse if(g_Config.m_UiSettingsPage == PAGE_SETTINGS_GENERAL)\n+\t\tRenderSettingsGeneral(MainView);\n+\telse if(g_Config.m_UiSettingsPage == PAGE_SETTINGS_IDENTITIES)\n+\t\tRenderSettingsIdent(MainView);\n+\telse if(g_Config.m_UiSettingsPage == PAGE_SETTINGS_CONTROLS)\n+\t\tRenderSettingsControls(MainView);\n+\telse if(g_Config.m_UiSettingsPage == PAGE_SETTINGS_GRAPHICS)\n+\t\tRenderSettingsGraphics(MainView);\n+\telse if(g_Config.m_UiSettingsPage == PAGE_SETTINGS_SOUND)\n+\t\tRenderSettingsSound(MainView);\n+\telse if(g_Config.m_UiSettingsPage == PAGE_SETTINGS_HAXX)\n+\t\tRenderSettingsHaxx(MainView);\n+\telse if(g_Config.m_UiSettingsPage == PAGE_SETTINGS_APPEARANCE)\n+\t\tRenderSettingsAppearance(MainView);\n+\telse if(g_Config.m_UiSettingsPage == PAGE_SETTINGS_MISC)\n+\t\tRenderSettingsDDNet(MainView);\n+\telse if\t(g_Config.m_UiSettingsPage == PAGE_SETTINGS_LUA)\n+\t\tRenderSettingsLua(MainView);\n+\t//else if\t(g_Config.m_UiSettingsPage == PAGE_SETTINGS_ALL)\n+\t//\tRenderSettingsAll(MainView);\n+\n+\tif(m_NeedRestartUpdate)\n+\t{\n+\t\tTextRender()->TextColor(1.0f, 0.4f, 0.4f, 1.0f);\n+\t\tUI()->DoLabelScaled(&RestartWarning, Localize(\"DDNet Client needs to be restarted to complete update!\"), 14.0f, -1);\n+\t\tTextRender()->TextColor(1.0f, 1.0f, 1.0f, 1.0f);\n+\t}\n+\telse if(m_NeedRestartGraphics || m_NeedRestartSound || m_NeedRestartDDNet)\n+\t{\n+\t\tstatic CButtonContainer s_ButtonRestart;\n+\t\tif(DoButton_Menu(&s_ButtonRestart, Localize(\"You must restart the game for all settings to take effect.\"), 0, &RestartWarning, 0, CUI::CORNER_ALL, vec4(0.75f, 0.18f, 0.18f, 0.83f)))\n+\t\t\tClient()->Restart();\n+\t}\n+}\n+\n+void CMenus::RenderSettingsDDNet(CUIRect MainView)\n+{\n+\tCALLSTACK_ADD();\n+\n+\tCUIRect Button, Left, Right, LeftLeft, Demo, Gameplay, Miscellaneous, Label, Background;\n+\n+\tbool CheckSettings = false;\n+\tstatic int s_InpMouseOld = g_Config.m_InpMouseOld;\n+\n+\tMainView.HSplitTop(100.0f, &Demo , &MainView);\n+\n+\tDemo.HSplitTop(30.0f, &Label, &Demo);\n+\tUI()->DoLabelScaled(&Label, Localize(\"Demo\"), 20.0f, -1);\n+\tDemo.Margin(5.0f, &Demo);\n+\tDemo.VSplitMid(&Left, &Right);\n+\tLeft.VSplitRight(5.0f, &Left, 0);\n+\tRight.VMargin(5.0f, &Right);\n+\n+\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\tstatic CButtonContainer s_ButtonAutoRaceRecord;\n+\tif(DoButton_CheckBox(&s_ButtonAutoRaceRecord, Localize(\"Save the best demo of each race\"), g_Config.m_ClAutoRaceRecord, &Button))\n+\t{\n+\t\tg_Config.m_ClAutoRaceRecord ^= 1;\n+\t}\n+\n+\tRight.HSplitTop(20.0f, &Button, &Right);\n+\tstatic CButtonContainer s_ButtonRaceGhost;\n+\tif(DoButton_CheckBox(&s_ButtonRaceGhost, Localize(\"Ghost\"), g_Config.m_ClRaceGhost, &Button))\n+\t{\n+\t\tg_Config.m_ClRaceGhost ^= 1;\n+\t}\n+\n+\tif(g_Config.m_ClRaceGhost)\n+\t{\n+\t\tRight.HSplitTop(5.0f, 0, &Right);\n+\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\tstatic CButtonContainer s_ButtonRaceShowGhost;\n+\t\tif(DoButton_CheckBox(&s_ButtonRaceShowGhost, Localize(\"Show ghost\"), g_Config.m_ClRaceShowGhost, &Button))\n+\t\t{\n+\t\t\tg_Config.m_ClRaceShowGhost ^= 1;\n+\t\t}\n+\n+\t\tRight.HSplitTop(5.0f, 0, &Right);\n+\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\tstatic CButtonContainer s_ButtonRaceSaveGhost;\n+\t\tif(DoButton_CheckBox(&s_ButtonRaceSaveGhost, Localize(\"Save ghost\"), g_Config.m_ClRaceSaveGhost, &Button))\n+\t\t{\n+\t\t\tg_Config.m_ClRaceSaveGhost ^= 1;\n+\t\t}\n+\t}\n+\n+\tMainView.HSplitTop(290.0f, &Gameplay , &MainView);\n+\n+\tGameplay.HSplitTop(30.0f, &Label, &Gameplay);\n+\tUI()->DoLabelScaled(&Label, Localize(\"Gameplay\"), 20.0f, -1);\n+\tGameplay.Margin(5.0f, &Gameplay);\n+\tGameplay.VSplitMid(&Left, &Right);\n+\tLeft.VSplitRight(5.0f, &Left, 0);\n+\tRight.VMargin(5.0f, &Right);\n+\n+\t{\n+\t\tCUIRect Button, Label;\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tButton.VSplitLeft(120.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Overlay entities\"), 14.0f, -1);\n+\t\tstatic CButtonContainer s_ButtonOverlayEntities;\n+\t\tg_Config.m_ClOverlayEntities = (int)(DoScrollbarH(&s_ButtonOverlayEntities, &Button, g_Config.m_ClOverlayEntities/100.0f, 0, g_Config.m_ClOverlayEntities)*100.0f);\n+\t}\n+\n+\t{\n+\t\tCUIRect Button, Label;\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tButton.VSplitMid(&LeftLeft, &Button);\n+\n+\t\tButton.VSplitLeft(50.0f, &Label, &Button);\n+\t\tLabel.VSplitRight(5.0f, &Label, 0);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Alpha\"), 14.0f, -1);\n+\t\tstatic CButtonContainer s_ButtonShowOthersAlpha;\n+\t\tg_Config.m_ClShowOthersAlpha = (int)(DoScrollbarH(&s_ButtonShowOthersAlpha, &Button, g_Config.m_ClShowOthersAlpha /100.0f, 0, g_Config.m_ClShowOthersAlpha)*100.0f);\n+\n+\t\tstatic CButtonContainer s_ButtonShowOthers;\n+\t\tif(DoButton_CheckBox(&s_ButtonShowOthers, Localize(\"Show others\"), g_Config.m_ClShowOthers, &LeftLeft))\n+\t\t{\n+\t\t\tg_Config.m_ClShowOthers ^= 1;\n+\t\t}\n+\t}\n+\n+\tLeft.HSplitTop(5.0f, 0, &Left);\n+\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\tstatic CButtonContainer s_ButtonShowQuads;\n+\tif(DoButton_CheckBox(&s_ButtonShowQuads, Localize(\"Show quads\"), g_Config.m_ClShowQuads, &Button))\n+\t{\n+\t\tg_Config.m_ClShowQuads ^= 1;\n+\t}\n+\n+\tRight.HSplitTop(20.0f, &Label, &Right);\n+\tLabel.VSplitLeft(130.0f, &Label, &Button);\n+\tchar aBuf[256];\n+\tstr_format(aBuf, sizeof(aBuf), \"%s: %i\", Localize(\"Default zoom\"), g_Config.m_ClDefaultZoom);\n+\tUI()->DoLabelScaled(&Label, aBuf, 14.0f, -1);\n+\t//Right.HSplitTop(20.0f, &Button, 0);\n+\tButton.HMargin(2.0f, &Button);\n+\tstatic CButtonContainer s_ButtonDefaultZoom;\n+\tg_Config.m_ClDefaultZoom = static_cast<int>(DoScrollbarH(&s_ButtonDefaultZoom, &Button, g_Config.m_ClDefaultZoom/20.0f, 0, g_Config.m_ClDefaultZoom)*20.0f+0.1f);\n+\n+\tRight.HSplitTop(20.0f, &Label, &Right);\n+\tLabel.VSplitLeft(130.0f, &Label, &Button);\n+\tstr_format(aBuf, sizeof(aBuf), \"%s: %i\", Localize(\"AntiPing limit\"), g_Config.m_ClAntiPingLimit);\n+\tUI()->DoLabelScaled(&Label, aBuf, 14.0f, -1);\n+\t//Right.HSplitTop(20.0f, &Button, 0);\n+\tButton.HMargin(2.0f, &Button);\n+\tstatic CButtonContainer s_ButtonAntiPingLimit;\n+\tg_Config.m_ClAntiPingLimit = static_cast<int>(DoScrollbarH(&s_ButtonAntiPingLimit, &Button, g_Config.m_ClAntiPingLimit/200.0f, 0, g_Config.m_ClAntiPingLimit)*200.0f+0.1f);\n+\n+\tRight.HSplitTop(20.0f, &Button, &Right);\n+\tstatic CButtonContainer s_ButtonAntiPing;\n+\tif(DoButton_CheckBox(&s_ButtonAntiPing, Localize(\"AntiPing\"), g_Config.m_ClAntiPing, &Button))\n+\t{\n+\t\tg_Config.m_ClAntiPing ^= 1;\n+\t}\n+\n+\tif(g_Config.m_ClAntiPing)\n+\t{\n+\t\tRight.HSplitTop(5.0f, 0, &Right);\n+\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\tstatic CButtonContainer s_ButtonAntiPingPlayers;\n+\t\tif(DoButton_CheckBox(&s_ButtonAntiPingPlayers, Localize(\"AntiPing: predict other players\"), g_Config.m_ClAntiPingPlayers, &Button))\n+\t\t{\n+\t\t\tg_Config.m_ClAntiPingPlayers ^= 1;\n+\t\t}\n+\n+\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\tstatic CButtonContainer s_ButtonAntiPingWeapons;\n+\t\tif(DoButton_CheckBox(&s_ButtonAntiPingWeapons, Localize(\"AntiPing: predict weapons\"), g_Config.m_ClAntiPingWeapons, &Button))\n+\t\t{\n+\t\t\tg_Config.m_ClAntiPingWeapons ^= 1;\n+\t\t}\n+\n+\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\tstatic CButtonContainer s_ButtonAntiPingGrenade;\n+\t\tif(DoButton_CheckBox(&s_ButtonAntiPingGrenade, Localize(\"AntiPing: predict grenade paths\"), g_Config.m_ClAntiPingGrenade, &Button))\n+\t\t{\n+\t\t\tg_Config.m_ClAntiPingGrenade ^= 1;\n+\t\t}\n+\t}\n+\telse\n+\t{\n+\t\tRight.HSplitTop(60.0f, 0, &Right);\n+\t}\n+\n+\tLeft.HSplitTop(5.0f, 0, &Left);\n+\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\tstatic CButtonContainer s_ButtonShowOtherHookColl;\n+\tif(DoButton_CheckBox(&s_ButtonShowOtherHookColl, Localize(\"Show other players' hook collision lines\"), g_Config.m_ClShowOtherHookColl, &Button))\n+\t{\n+\t\tg_Config.m_ClShowOtherHookColl ^= 1;\n+\t}\n+\n+\tLeft.HSplitTop(5.0f, 0, &Left);\n+\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\tstatic CButtonContainer s_ButtonShowDirection;\n+\tif(DoButton_CheckBox(&s_ButtonShowDirection, Localize(\"Show other players' key presses\"), g_Config.m_ClShowDirection, &Button))\n+\t{\n+\t\tg_Config.m_ClShowDirection ^= 1;\n+\t}\n+\n+\tLeft.HSplitTop(5.0f, 0, &Left);\n+\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\tstatic CButtonContainer s_ButtonMouseOld;\n+\tif(DoButton_CheckBox(&s_ButtonMouseOld, Localize(\"Raw Mouse Input\"), !g_Config.m_InpMouseOld, &Button, Localize(\"Use raw mouse input mode (the \\\"new one\\\")\\nWARNING: MIGHT BE BUGGY/SLOW ON SOME SYSTEMS! In that case turn it off.\")))\n+\t{\n+\t\tg_Config.m_InpMouseOld ^= 1;\n+\t\tCheckSettings = true;\n+\t}\n+\n+\tif(CheckSettings)\n+\t{\n+\t\tif(s_InpMouseOld == g_Config.m_InpMouseOld)\n+\t\t\tm_NeedRestartDDNet = false;\n+\t\telse\n+\t\t\tm_NeedRestartDDNet = true;\n+\t}\n+\n+\tLeft.HSplitTop(5.0f, &Button, &Left);\n+\tRight.HSplitTop(5.0f, &Button, &Right);\n+\tCUIRect aRects[2] = { Left, Right };\n+\taRects[0].VSplitRight(10.0f, &aRects[0], 0);\n+\taRects[1].VSplitLeft(10.0f, 0, &aRects[1]);\n+\n+\tint *pColorSlider[2][3] = {{&g_Config.m_ClBackgroundHue, &g_Config.m_ClBackgroundSat, &g_Config.m_ClBackgroundLht}, {&g_Config.m_ClBackgroundEntitiesHue, &g_Config.m_ClBackgroundEntitiesSat, &g_Config.m_ClBackgroundEntitiesLht}};\n+\n+\tconst char *paParts[] = {\n+\t\tLocalize(\"Background (regular)\"),\n+\t\tLocalize(\"Background (entities)\")};\n+\tconst char *paLabels[] = {\n+\t\tLocalize(\"Hue\"),\n+\t\tLocalize(\"Sat.\"),\n+\t\tLocalize(\"Lht.\")};\n+\n+\tfor(int i = 0; i < 2; i++)\n+\t{\n+\t\taRects[i].HSplitTop(20.0f, &Label, &aRects[i]);\n+\t\tUI()->DoLabelScaled(&Label, paParts[i], 14.0f, -1);\n+\t\taRects[i].VSplitLeft(20.0f, 0, &aRects[i]);\n+\t\taRects[i].HSplitTop(2.5f, 0, &aRects[i]);\n+\n+\t\tfor(int s = 0; s < 3; s++)\n+\t\t{\n+\t\t\taRects[i].HSplitTop(20.0f, &Label, &aRects[i]);\n+\t\t\tLabel.VSplitLeft(100.0f, &Label, &Button);\n+\t\t\tButton.HMargin(2.0f, &Button);\n+\n+\t\t\tfloat k = (*pColorSlider[i][s]) / 255.0f;\n+\t\t\tCPointerContainer s_Scrollbar(&pColorSlider[i][s]);\n+\t\t\tk = DoScrollbarH(&s_Scrollbar, &Button, k, 0, k*255.0f);\n+\t\t\t*pColorSlider[i][s] = (int)(k*255.0f);\n+\t\t\tUI()->DoLabelScaled(&Label, paLabels[s], 15.0f, -1);\n+\t\t}\n+\t}\n+\n+\t{\n+\t\tstatic float s_Map = 0.0f;\n+\t\taRects[1].HSplitTop(25.0f, &Background, &aRects[1]);\n+\t\tBackground.HSplitTop(20.0f, &Background, 0);\n+\t\tBackground.VSplitLeft(100.0f, &Label, &Left);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Map\"), 14.0f, -1);\n+\t\tstatic CButtonContainer s_ButtonBackgroundEntities;\n+\t\tDoEditBox(&s_ButtonBackgroundEntities, &Left, g_Config.m_ClBackgroundEntities, sizeof(g_Config.m_ClBackgroundEntities), 14.0f, &s_Map);\n+\n+\t\taRects[1].HSplitTop(20.0f, &Button, 0);\n+\t\tstatic CButtonContainer s_ButtonBackgroundShowTilesLayers;\n+\t\tif(DoButton_CheckBox(&s_ButtonBackgroundShowTilesLayers, Localize(\"Show tiles layers from BG map\"), g_Config.m_ClBackgroundShowTilesLayers, &Button))\n+\t\t{\n+\t\t\tg_Config.m_ClBackgroundShowTilesLayers ^= 1;\n+\t\t}\n+\t}\n+\n+\tMainView.HSplitTop(30.0f, &Label, &Miscellaneous);\n+\tUI()->DoLabelScaled(&Label, Localize(\"Miscellaneous\"), 20.0f, -1);\n+\tMiscellaneous.VMargin(5.0f, &Miscellaneous);\n+\tMiscellaneous.VSplitMid(&Left, &Right);\n+\tLeft.VSplitRight(5.0f, &Left, 0);\n+\tRight.VMargin(5.0f, &Right);\n+\n+\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\tstatic CButtonContainer s_ButtonHttpMapDownload;\n+\tif(DoButton_CheckBox(&s_ButtonHttpMapDownload, Localize(\"Try fast HTTP map download first\"), g_Config.m_ClHttpMapDownload, &Button))\n+\t{\n+\t\tg_Config.m_ClHttpMapDownload ^= 1;\n+\t}\n+\n+\t// Updater\n+#if defined(CONF_FAMILY_WINDOWS) || (defined(CONF_PLATFORM_LINUX) && !defined(__ANDROID__))\n+\t{\n+\t\tLeft.HSplitTop(5.0f, 0, &Left);\n+\t\tLeft.HSplitTop(20.0f, &Label, &Left);\n+\t\tbool NeedUpdate = Client()->LatestVersion()[2] && str_comp(Client()->LatestVersion(), GAME_ATH_VERSION) != 0;\n+\t\tint State = Updater()->GetCurrentState();\n+\n+\t\t// update button\n+\t\tif(NeedUpdate && State <= IUpdater::CLEAN)\n+\t\t{\n+\t\t\tstr_format(aBuf, sizeof(aBuf), Localize(\"New Client Version '%s' is available!\"), Client()->LatestVersion());\n+\t\t\tLabel.VSplitLeft(TextRender()->TextWidth(0, 14.0f, aBuf, -1) + 10.0f, &Label, &Button);\n+\t\t\tButton.VSplitLeft(TextRender()->TextWidth(0, Button.h*ms_FontmodHeight, Localize(\"Update now\"), -1), &Button, 0);\n+\t\t\tstatic CButtonContainer s_ButtonUpdate;\n+\t\t\tif(DoButton_Menu(&s_ButtonUpdate, Localize(\"Update now\"), 0, &Button))\n+\t\t\t\tUpdater()->InitiateUpdate();\n+\t\t}\n+\t\telse if(State >= IUpdater::GETTING_MANIFEST && State < IUpdater::NEED_RESTART)\n+\t\t\tstr_format(aBuf, sizeof(aBuf), Localize(\"Updating...\"));\n+\t\telse if(State == IUpdater::NEED_RESTART){\n+\t\t\tstr_format(aBuf, sizeof(aBuf), Localize(\"AllTheHaxx updated!\"));\n+\t\t\tm_NeedRestartUpdate = true;\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tstr_copy(aBuf, Localize(\"No updates available\"), sizeof(aBuf));\n+\t\t\tLabel.VSplitLeft(TextRender()->TextWidth(0, 14.0f, Localize(\"No updates available\"), -1) + 10.0f, &Label, &Button);\n+\t\t\tButton.VSplitLeft(max(100.0f, TextRender()->TextWidth(0, 14.0f, Localize(\"Check now\"), -1)), &Button, 0);\n+\t\t\tstatic CButtonContainer s_ButtonUpdate;\n+\t\t\tif(DoButton_Menu(&s_ButtonUpdate, Localize(\"Check now\"), 0, &Button))\n+\t\t\t{\n+\t\t\t\tClient()->CheckVersionUpdate();\n+\t\t\t}\n+\t\t}\n+\t\tUI()->DoLabelScaled(&Label, aBuf, 14.0f, -1);\n+\t\tTextRender()->TextColor(1.0f, 1.0f, 1.0f, 1.0f);\n+\t}\n+#endif\n+\n+\tRight.HSplitTop(20.0f, &Button, &Right);\n+\tstatic CButtonContainer s_Checkbox;\n+\tif(DoButton_CheckBox(&s_Checkbox, Localize(\"Enable Timeout Protection\"), g_Config.m_ClTimeoutProtection, &Button))\n+\t\tg_Config.m_ClTimeoutProtection ^= 1;\n+\n+\tif(g_Config.m_ClTimeoutProtection)\n+\t{\n+\t\tstatic CButtonContainer s_ButtonTimeout;\n+\t\tRight.HSplitTop(5.0f, 0, &Right);\n+\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\tButton.VSplitLeft(Button.w*(2.0f/3.0f), &Button, &Label);\n+\t\tif(DoButton_Menu(&s_ButtonTimeout, Localize(\"New random timeout code\"), 0, &Button, Localize(\"WARNING: In case you recently timed out somewhere:\\nGenerating a new code will invalidate your timeout protection on all servers!\")))\n+\t\t{\n+\t\t\tClient()->GenerateTimeoutSeed();\n+\t\t}\n+\n+\t\tUI()->DoLabelScaled(&Label, g_Config.m_ClTimeoutSeed, 12, 1);\n+\t}\n+}\n+\n+int CMenus::SkinCacheListdirCallback(const char *name, int is_dir, int dir_type, void *user)\n+{\n+\tif(is_dir)\n+\t{\n+\t\tif(name[0] != '.')\n+\t\t\tdbg_msg(\"skincache\", \"warning: skincache seems to be polluted: Found a folder '%s', ignoring.\", name);\n+\t\treturn 0;\n+\t}\n+\tIStorageTW *pStorage = (IStorageTW *)user;\n+\tchar aBuf[256];\n+\tstr_format(aBuf, sizeof(aBuf), \"downloadedskins/%s\", name);\n+\tif(pStorage->RemoveFile(aBuf, IStorageTW::TYPE_SAVE))\n+\t\tdbg_msg(\"skincache\", \"deleted file '%s'\", aBuf);\n+\telse\n+\t\tdbg_msg(\"skincache\", \"failed to delete file %s\", aBuf);\n+\treturn 0;\n+}\n+\n+\n+void CMenus::RenderSettingsIRC(CUIRect MainView)\n+{\n+\tCALLSTACK_ADD();\n+\n+\tCUIRect Button;\n+\tMainView.Margin(5.0f, &MainView);\n+\n+\tMainView.HSplitTop(30.0f, &Button, &MainView);\n+\tUI()->DoLabelScaled(&Button, Localize(\"Chat\"), 20.0f, 0, -1);\n+\n+\tMainView.HSplitTop(7.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_ButtonIRCAutoconnect;\n+\tif(DoButton_CheckBox(&s_ButtonIRCAutoconnect, Localize(\"Connect automatically\"), g_Config.m_ClIRCAutoconnect, &Button, Localize(\"Connect to the Chat automatically on startup ... yeah, be social!\")))\n+\t\tg_Config.m_ClIRCAutoconnect ^= 1;\n+\n+\tMainView.HSplitTop(5.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_ButtonIRCPrintChat;\n+\tif(DoButton_CheckBox(&s_ButtonIRCPrintChat, Localize(\"Print to console\"), g_Config.m_ClIRCPrintChat, &Button))\n+\t\tg_Config.m_ClIRCPrintChat ^= 1;\n+\n+\tMainView.HSplitTop(5.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_ButtonSndIRC;\n+\tif(DoButton_CheckBox(&s_ButtonSndIRC, Localize(\"Play sound notification\"), g_Config.m_SndIRC, &Button))\n+\t\tg_Config.m_SndIRC ^= 1;\n+\n+\tMainView.HSplitTop(5.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_ButtonIRCAllowJoin;\n+\tif(DoButton_CheckBox(&s_ButtonIRCAllowJoin, Localize(\"Allow others to join you\"), g_Config.m_ClIRCAllowJoin, &Button))\n+\t\tg_Config.m_ClIRCAllowJoin ^= 1;\n+\n+\tconst char *s_apLabels[] = {\n+\t\t\tLocalize(\"Nickname\"),\n+\t\t//\tLocalize(\"Username\"),\n+\t\t\tLocalize(\"Password\"),\n+\t\t\tLocalize(\"Q Auth Name\"),\n+\t\t\tLocalize(\"Q Auth Pass\"),\n+\t\t\tLocalize(\"Modes\"),\n+\t\t\tLocalize(\"Leave Message\"),\n+\t};\n+\n+\tCUIRect Background;\n+\tMainView.HSplitTop(7.5f, 0, &Background);\n+\tBackground.h = 25.0f*(sizeof(s_apLabels)/sizeof(s_apLabels[0]))+7.5f;\n+\tRenderTools()->DrawUIRect(&Background, vec4(0.2f, 0.5f, 0.2f, 0.68f), CUI::CORNER_ALL, 4.0f);\n+\n+\tCUIRect Label;\n+\tint LabelIndex = 0;\n+#define DO_NEXT_LABEL Button.VSplitLeft(Button.w*0.4f, &Label, &Button); UI()->DoLabel(&Label, s_apLabels[LabelIndex++], 12.0f, -1, Label.w-3);\n+\n+\tMainView.VMargin(5.0f, &MainView);\n+\tMainView.HSplitTop(15.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tDO_NEXT_LABEL\n+\tstatic float s_OffsetNick = 0.0f;\n+\tstatic CButtonContainer s_EditboxIRCNick;\n+\tDoEditBox(&s_EditboxIRCNick, &Button, g_Config.m_ClIRCNick, sizeof(g_Config.m_ClIRCNick), 12.0f, &s_OffsetNick, false);\n+/*\n+\tMainView.HSplitTop(5.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tDO_NEXT_LABEL\n+\tstatic float s_OffsetUser = 0.0f;\n+\tstatic CButtonContainer s_EditboxIRCUser;\n+\tDoEditBox(&s_EditboxIRCUser, &Button, g_Config.m_ClIRCUser, sizeof(g_Config.m_ClIRCUser), 12.0f, &s_OffsetUser, false);\n+*/\n+\tMainView.HSplitTop(5.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tDO_NEXT_LABEL\n+\tstatic float s_OffsetPass = 0.0f;\n+\tstatic CButtonContainer s_EditboxIRCPass;\n+\tDoEditBox(&s_EditboxIRCPass, &Button, g_Config.m_ClIRCPass, sizeof(g_Config.m_ClIRCPass), 12.0f, &s_OffsetPass, true);\n+\n+\tMainView.HSplitTop(5.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tDO_NEXT_LABEL\n+\tstatic float s_OffsetQAuthName = 0.0f;\n+\tstatic CButtonContainer s_EditboxIRCQAuthName;\n+\tDoEditBox(&s_EditboxIRCQAuthName, &Button, g_Config.m_ClIRCQAuthName, sizeof(g_Config.m_ClIRCQAuthName), 12.0f, &s_OffsetQAuthName, false);\n+\n+\tMainView.HSplitTop(5.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tDO_NEXT_LABEL\n+\tstatic float s_OffsetQAuthPass = 0.0f;\n+\tstatic CButtonContainer s_EditboxIRCQAuthPass;\n+\tDoEditBox(&s_EditboxIRCQAuthPass, &Button, g_Config.m_ClIRCQAuthPass, sizeof(g_Config.m_ClIRCQAuthPass), 12.0f, &s_OffsetQAuthPass, true);\n+\n+\tMainView.HSplitTop(5.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tDO_NEXT_LABEL\n+\tstatic float s_OffsetModes = 0.0f;\n+\tstatic CButtonContainer s_EditboxIRCModes;\n+\tDoEditBox(&s_EditboxIRCModes, &Button, g_Config.m_ClIRCModes, sizeof(g_Config.m_ClIRCModes), 12.0f, &s_OffsetModes, false);\n+\n+\tMainView.HSplitTop(5.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tDO_NEXT_LABEL\n+\tstatic float s_OffsetLeaveMsg = 0.0f;\n+\tstatic CButtonContainer s_EditboxIRCLeaveMsg;\n+\tDoEditBox(&s_EditboxIRCLeaveMsg, &Button, g_Config.m_ClIRCLeaveMsg, sizeof(g_Config.m_ClIRCLeaveMsg), 12.0f, &s_OffsetLeaveMsg, false);\n+\n+#undef DO_NEXT_LABEL\n+}\n+\n+\n+\n+\n+// sort arrays\n+template<class T>\n+static void sort_simple_array(array<T> *pArray)\n+{\n+\tconst int NUM = pArray->size();\n+\tif(NUM < 2)\n+\t\treturn;\n+\n+\tfor(int curr = 0; curr < NUM-1; curr++)\n+\t{\n+\t\tint minIndex = curr;\n+\t\tfor(int i = curr + 1; i < NUM; i++)\n+\t\t{\n+\t\t\tint c = 4;\n+\t\t\tfor(; str_uppercase((*pArray)[i].pName[c]) == str_uppercase((*pArray)[minIndex].pName[c]); c++);\n+\t\t\tif(str_uppercase((*pArray)[i].pName[c]) < str_uppercase((*pArray)[minIndex].pName[c]))\n+\t\t\t\tminIndex = i;\n+\t\t}\n+\n+\t\tif(minIndex != curr)\n+\t\t{\n+\t\t\tT temp = (*pArray)[curr];\n+\t\t\t(*pArray)[curr] = (*pArray)[minIndex];\n+\t\t\t(*pArray)[minIndex] = temp;\n+\t\t}\n+\t}\n+}\n+\n+struct ConfigVar\n+{\n+\tconst char *pName;\n+\tint Type;\n+\tconst char *pTooltip;\n+};\n+\n+struct ConfigInt : public ConfigVar\n+{\n+\tint *pValue;\n+\tint Default;\n+\tint Min;\n+\tint Max;\n+};\n+\n+struct ConfigString : public ConfigVar\n+{\n+\tchar *pStr;\n+\tconst char *pDef;\n+\tint MaxLength;\n+};\n+\n+void CMenus::RenderSettingsAll(CUIRect MainView)\n+{\n+\tCALLSTACK_ADD();\n+\n+\tstatic array<ConfigInt> s_IntVars;\n+\tstatic array<ConfigString> s_StringVars;\n+\n+\tif(s_IntVars.size() == 0)\n+\t{\n+\n+#define MACRO_CONFIG_INT(NAME,SCRIPTNAME,DEF,MIN,MAX,SAVE,DESC) \\\n+\t\tif((SAVE)&CFGFLAG_CLIENT) \\\n+\t\t{ \\\n+\t\t\tConfigInt e; \\\n+\t\t\te.pName = #SCRIPTNAME; \\\n+\t\t\te.Type = 1; \\\n+\t\t\te.pValue = &g_Config.m_##NAME; \\\n+\t\t\te.pTooltip = DESC; \\\n+\t\t\te.Default = DEF; \\\n+\t\t\te.Min = MIN; \\\n+\t\t\te.Max = MAX; \\\n+\t\t\ts_IntVars.add(e); \\\n+\t\t}\n+\n+\n+#define MACRO_CONFIG_STR(NAME,SCRIPTNAME,LEN,DEF,SAVE,DESC) \\\n+\t\tif((SAVE)&CFGFLAG_CLIENT) \\\n+\t\t{ \\\n+\t\t\tConfigString e; \\\n+\t\t\te.pName = #SCRIPTNAME; \\\n+\t\t\te.Type = 2; \\\n+\t\t\te.pTooltip = DESC; \\\n+\t\t\te.pStr = g_Config.m_##NAME; \\\n+\t\t\te.pDef = DEF; \\\n+\t\t\te.MaxLength = LEN; \\\n+\t\t\ts_StringVars.add(e); \\\n+\t\t}\n+\n+#include <engine/shared/config_variables.h>\n+#undef MACRO_CONFIG_INT\n+#undef MACRO_CONFIG_STR\n+\n+\t\tsort_simple_array<ConfigInt>(&s_IntVars);\n+\t\tsort_simple_array<ConfigString>(&s_StringVars);\n+\n+\t} // end of one-time-initialization thingy\n+\n+\n+\tstatic CButtonContainer s_Listbox;\n+\tstatic float s_ScrollVal = 0.0f;\n+\tstatic CButtonContainer s_IDs[1024];\n+\tstatic CButtonContainer s_ScrollbarIDs[1024];\n+\tstatic CButtonContainer s_EditboxIDs[1024];\n+\tstatic float s_EditboxOffsets[1024] = {0.0f};\n+\tCUIRect Test; MainView.Margin(20.0f, &Test);\n+\tUiDoListboxStart(&s_Listbox, &MainView, 40.0f, Localize(\"-- Collection of all config variables --\"), Localize(\"(only for advanced players - be careful!)\"), s_IntVars.size()+s_StringVars.size(), 1, -1, s_ScrollVal);\n+\tint i;\n+\tfor(i = 0; i < s_IntVars.size(); i++) // INT VARS VIA SLIDER\n+\t{\n+\t\tif(i >= 1024)\n+\t\t\tbreak;\n+\n+\t\tCListboxItem Item = UiDoListboxNextItem(&s_IDs[i], 0);\n+\n+\t\tif(!Item.m_Visible)\n+\t\t\tcontinue;\n+\n+\t\tCUIRect Button, Text;\n+\n+\t\tConfigInt *var = &s_IntVars[i];\n+\t\tint *pVal = var->pValue;\n+\t\tif(!pVal)\n+\t\t{\n+\t\t\tdbg_msg(\"WTF\", \"%i %p %s\", i, var, var->pName);\n+\t\t\tcontinue;\n+\t\t}\n+\t\tItem.m_Rect.VSplitLeft(Item.m_Rect.w/3, &Text, &Button);\n+\t\tUI()->DoLabelScaled(&Text, var->pName, 13.0f, -1, Text.w-5.0f);\n+\t\tButton.Margin(12.0f, &Button);\n+\t\t//**(var->pValue) = */round_to_int((var->Max-var->Min)*DoScrollbarH(&s_IDs[i], &Button, (*(var->pValue))/(var->Max-var->Min), var->pTooltip, *(var->pValue)));\n+\t\t*pVal = max(var->Min, round_to_int((var->Max)*DoScrollbarH(&s_ScrollbarIDs[i], &Button, (float)*pVal/(float)var->Max, var->pTooltip, *pVal)));\n+\t}\n+\tfor(int j = 0; j < s_StringVars.size(); j++) // STRING VARS VIA EDITBOX\n+\t{\n+\t\tif(i+j >= 1024)\n+\t\t\tbreak;\n+\n+\t\tCListboxItem Item = UiDoListboxNextItem(&s_IDs[i+j], 0);\n+\n+\t\tif(!Item.m_Visible)\n+\t\t\tcontinue;\n+\n+\t\tCUIRect Button, Text;\n+\t\tConfigString *var = &s_StringVars[j];\n+\t\tif(!(var->pStr))\n+\t\t{\n+\t\t\tdbg_msg(\"so ne\", \"kacke %s\", var->pName);\n+\t\t\tcontinue;\n+\t\t}\n+\t\tItem.m_Rect.VSplitLeft(Item.m_Rect.w/3, &Text, &Button);\n+\t\tUI()->DoLabelScaled(&Text, var->pName, 13.0f, -1, Text.w-5.0f);\n+\t\tButton.Margin(7.0f, &Button);\n+\t\tButton.VSplitRight(Button.w/3, &Button, &Text); Text.x+=2.5f;\n+\t\tDoEditBox(&s_EditboxIDs[j], &Button, var->pStr, var->MaxLength, 13.0f, &s_EditboxOffsets[j], false, CUI::CORNER_ALL, 0, -1, var->pTooltip);\n+\t\tText.VSplitRight(100.0f, &Text, &Button);\n+\t\tchar aBuf[128];\n+\t\tstr_format(aBuf, sizeof(aBuf), Localize(\"Length: %i/%i\"), str_length(var->pStr), var->MaxLength-1);\n+\t\tUI()->DoLabelScaled(&Text, aBuf, 12.0f, -1, Text.w-5.0f);\n+\t\tstatic CButtonContainer s_ResetButtons[1024];\n+\t\tif(DoButton_Menu(&s_ResetButtons[j], Localize(\"Default\"), 0, &Button, var->pDef))\n+\t\t\tstr_copy(var->pStr, var->pDef, var->MaxLength);\n+\t}\n+\n+\tUiDoListboxEnd(&s_ScrollVal, 0);\n+}"
    },
    {
      "sha": "efb33e670934a4dd7fad5e060b2cdb4fe5632974",
      "filename": "src/game/client/components/menus_settings/settings_appearance.cpp",
      "status": "added",
      "additions": 161,
      "deletions": 0,
      "changes": 161,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_appearance.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_appearance.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/menus_settings/settings_appearance.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -0,0 +1,161 @@\n+#include \"../menus.h\"\n+\n+#include <engine/textrender.h>\n+#include \"game/client/components/fontmgr.h\"\n+\n+void CMenus::RenderSettingsAppearance(CUIRect MainView)\n+{\n+\tCALLSTACK_ADD();\n+\n+\tif(m_pfnAppearanceSubpage)\n+\t{\n+\t\t(*this.*m_pfnAppearanceSubpage)(MainView);\n+\t\treturn;\n+\t}\n+\n+\tCUIRect Left, Right, Button;\n+\t//MainView.VSplitMid(&Left, &Right);\n+\tMainView.VMargin(MainView.w/3, &Left);\n+\n+\tstatic int s_Buttons[16] = {0};\n+\tunsigned int index = 0;\n+\n+#define DO_NEXT_BUTTON(BASERECT, TITLE, CALLBACK) \\\n+\tLeft.HSplitTop(10.0f, 0, &BASERECT); \\\n+\tLeft.HSplitTop(50.0f, &Button, &BASERECT); \\\n+\tTextRender()->Text(0, Button.x+Button.w-TextRender()->TextWidth(0, Button.h, \">\", 1)-10.0f, Button.y-Button.h/3.6f, Button.h, \">\", 9999); \\\n+\t{CPointerContainer Container(&s_Buttons[index++]); \\\n+\tif(DoButton_MenuTab(&Container, TITLE, 0, &Button, CUI::CORNER_ALL)) \\\n+\t\tm_pfnAppearanceSubpage = &CMenus::CALLBACK;}\n+\n+\tDO_NEXT_BUTTON(Left, \"HUD\", RenderSettingsAppearanceHUD);\n+\tDO_NEXT_BUTTON(Left, Localize(\"Textures\"), RenderSettingsAppearanceTexture);\n+\tDO_NEXT_BUTTON(Left, Localize(\"Fonts\"), RenderSettingsAppearanceFont);\n+\n+//\tRenderTools()->DrawUIRect(&Button, vec4(0,1,1,1), 0, 0);\n+}\n+\n+void CMenus::RenderSettingsAppearanceHUD(CUIRect MainView) // here will be more tabs and stuff I think\n+{\n+\tCALLSTACK_ADD();\n+\n+\t//RenderTools()->DrawUIRect(&MainView, vec4(1,0,1,1), 0, 0); // debuggi ^^\n+\tRenderSettingsHUD(MainView);\n+}\n+\n+void CMenus::RenderSettingsAppearanceTexture(CUIRect MainView)\n+{\n+\tCALLSTACK_ADD();\n+\n+\t//RenderTools()->DrawUIRect(&MainView, vec4(0,1,1,1), 0, 0);\n+\tRenderSettingsTexture(MainView);\n+}\n+\n+void CMenus::RenderSettingsAppearanceFont(CUIRect MainView)\n+{\n+\tCALLSTACK_ADD();\n+\n+\tenum\n+\t{\n+\t\tPAGE_BASIC = 0,\n+\t\tPAGE_MONO = 1\n+\t};\n+\n+\tstatic int s_FontPageType = PAGE_BASIC;\n+\n+\t{\n+\t\tCUIRect Button, Bar;\n+\n+\t\tMainView.HSplitTop(20.0f, &Bar, &MainView);\n+\t\tBar.VSplitMid(&Button, &Bar);\n+\n+\t\tstatic CButtonContainer s_ButtonPlayer;\n+\t\tif(DoButton_MenuTab(&s_ButtonPlayer, Localize(\"Basic Font\"), s_FontPageType == PAGE_BASIC, &Button, CUI::CORNER_L))\n+\t\t\ts_FontPageType = PAGE_BASIC;\n+\n+\t\tstatic CButtonContainer s_ButtonTee;\n+\t\tif(DoButton_MenuTab(&s_ButtonTee, Localize(\"Monospace Font\"), s_FontPageType == PAGE_MONO, &Bar, CUI::CORNER_R))\n+\t\t\ts_FontPageType = PAGE_MONO;\n+\t}\n+\n+\tIFontMgr *pFontMgr = s_FontPageType == PAGE_BASIC ? m_pClient->m_pFontMgrBasic : m_pClient->m_pFontMgrMono;\n+\tconst int NUM_FONTS = pFontMgr->GetNumFonts();\n+\t{\n+\t\tchar aBuf[64];\n+\t\tCUIRect OptionsBar, Button;\n+\t\tMainView.VSplitRight(MainView.w*0.4f, &MainView, &OptionsBar);\n+\t\tOptionsBar.x += 5.0f;\n+\n+\t\tOptionsBar.HSplitTop(20.0f, &Button, &OptionsBar);\n+\t\tstr_format(aBuf, sizeof(aBuf), Localize(\"%i fonts installed\"), NUM_FONTS);\n+\t\tButton.x += 10.0f;\n+\t\tUI()->DoLabelScaled(&Button, aBuf, Button.h-5.0f, -1, Button.w-3.0f);\n+\n+\t\tOptionsBar.HSplitTop(10.0f, &Button, &OptionsBar);\n+\t\tOptionsBar.HSplitTop(20.0f, &Button, &OptionsBar);\n+\t\tstatic CButtonContainer s_ReloadButton;\n+\t\tif(DoButton_Menu(&s_ReloadButton, Localize(\"Reload\"), 0, &Button))\n+\t\t\tpFontMgr->ReloadFontlist();\n+\n+\t\t// render some preview text in different sizes\n+\t\tfor(float s = 9.0f; s <= 19.0f;\n+\t\t\ts == 9.0f ? s = 13.0f :\n+\t\t\t\ts == 13.0f ? s = 19.0f :\n+\t\t\t\ts++)\n+\t\t{\n+\t\t\tOptionsBar.HSplitTop(30.0f, &Button, &OptionsBar);\n+\t\t\tOptionsBar.HSplitTop(10.0f, &Button, &OptionsBar);\n+\t\t\t{\n+\t\t\t\tchar aText[32];\n+\t\t\t\tstr_format(aText, sizeof(aText), \"Some size %i text:\", round_to_int(s));\n+\t\t\t\tUI()->DoLabelScaled(&Button, aText, s, -1);\n+\t\t\t}\n+\n+\t\t\tCTextCursor Cursor;\n+\t\t\tOptionsBar.HSplitTop(5.0f+s, &Button, &OptionsBar);\n+\t\t\tOptionsBar.HSplitTop(3.0f+s, &Button, &OptionsBar);\n+\t\t\tTextRender()->SetCursor(&Cursor, Button.x, Button.y, s, TEXTFLAG_RENDER, pFontMgr->GetFont(FONT_BOLD));\n+\t\t\tTextRender()->TextEx(&Cursor, s_FontPageType == PAGE_BASIC ? \"Some bold text\" : \"Some bold monospace text\", -1);\n+\n+\t\t\tOptionsBar.HSplitTop(5.0f, &Button, &OptionsBar);\n+\t\t\tOptionsBar.HSplitTop(3.0f+s, &Button, &OptionsBar);\n+\t\t\tTextRender()->SetCursor(&Cursor, Button.x, Button.y, s, TEXTFLAG_RENDER, pFontMgr->GetFont(FONT_ITALIC));\n+\t\t\tTextRender()->TextEx(&Cursor, s_FontPageType == PAGE_BASIC ? \"Some italic text\" : \"Some italic monospace text\", -1);\n+\n+\t\t\tOptionsBar.HSplitTop(5.0f, &Button, &OptionsBar);\n+\t\t\tOptionsBar.HSplitTop(3.0f+s, &Button, &OptionsBar);\n+\t\t\tTextRender()->SetCursor(&Cursor, Button.x, Button.y, s, TEXTFLAG_RENDER, pFontMgr->GetFont(FONT_BOLD_ITALIC));\n+\t\t\tTextRender()->TextEx(&Cursor, s_FontPageType == PAGE_BASIC ? \"Bold and italic text\" : \"Bold and italic monospace text\", -1);\n+\t\t}\n+\t}\n+\n+\t{\n+\t\tconst int OldSelected = pFontMgr->GetSelectedFontIndex();\n+\t\tstatic int pIDItem[2][128];\n+\t\tstatic CButtonContainer s_Listbox;\n+\t\tstatic float s_ScrollValue[2] = {0.0f, 0.0f};\n+\t\tUiDoListboxStart(&s_Listbox, &MainView, 30.0f, Localize(\"Font Selector - Game Font\"), 0, NUM_FONTS, 2, OldSelected, s_ScrollValue[s_FontPageType], CUI::CORNER_ALL);\n+\t\tfor(int i = 0; i < NUM_FONTS; i++)\n+\t\t{\n+\t\t\tconst char *pFilePath = pFontMgr->GetFontPath(i);\n+\t\t\tif(!pFilePath || pFilePath[0] == '\\0') continue;\n+\n+\t\t\tCPointerContainer Container(&pIDItem[s_FontPageType][i]);\n+\t\t\tCListboxItem Item = UiDoListboxNextItem(&Container, 0);\n+\n+\t\t\tif(Item.m_Visible)\n+\t\t\t{\n+\t\t\t\tCTextCursor Cursor;\n+\t\t\t\tTextRender()->SetCursor(&Cursor, Item.m_Rect.x, Item.m_Rect.y, 17.0f, TEXTFLAG_RENDER, pFontMgr->GetFont(FONT_REGULAR));\n+\t\t\t\tTextRender()->TextColor(1,1,1,1);\n+\t\t\t\tTextRender()->TextEx(&Cursor, pFilePath, -1);\n+\t\t\t}\n+\t\t}\n+\n+\t\tint NewSelected = UiDoListboxEnd(&s_ScrollValue[s_FontPageType], 0);\n+\t\tif(NewSelected != OldSelected)\n+\t\t{\n+\t\t\tpFontMgr->ActivateFont(NewSelected);\n+\t\t}\n+\t}\n+}"
    },
    {
      "sha": "f79c9603f6a6061cb88000c4a9d4e6592f6cdbfe",
      "filename": "src/game/client/components/menus_settings/settings_controls.cpp",
      "status": "added",
      "additions": 446,
      "deletions": 0,
      "changes": 446,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_controls.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_controls.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/menus_settings/settings_controls.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -0,0 +1,446 @@\n+#include \"../menus.h\"\n+\n+#include <engine/keys.h>\n+#include <engine/textrender.h>\n+#include <game/localization.h>\n+\n+#include \"../controls.h\"\n+#include \"../binds.h\"\n+\n+CMenusKeyBinder CMenus::m_Binder;\n+\n+CMenusKeyBinder::CMenusKeyBinder()\n+{\n+\tm_TakeKey = false;\n+\tm_GotKey = false;\n+}\n+\n+bool CMenusKeyBinder::OnInput(IInput::CEvent Event)\n+{\n+\tif(m_TakeKey)\n+\t{\n+\t\tif(Event.m_Flags&IInput::FLAG_PRESS)\n+\t\t{\n+\t\t\tm_Key = Event;\n+\t\t\tm_GotKey = true;\n+\t\t\tm_TakeKey = false;\n+\t\t}\n+\t\treturn true;\n+\t}\n+\n+\treturn false;\n+}\n+\n+\n+typedef void (*pfnAssignFuncCallback)(CConfiguration *pConfig, int Value);\n+\n+typedef struct\n+{\n+\tCLocConstString m_Name;\n+\tconst char *m_pCommand;\n+\tint m_KeyId;\n+} CKeyInfo;\n+\n+static CKeyInfo gs_aKeys[] =\n+{\n+\t{ \"Move left\", \"+left\", 0},\t\t// Localize - these strings are localized within CLocConstString\n+\t{ \"Move right\", \"+right\", 0 },\n+\t{ \"Jump\", \"+jump\", 0 },\n+\t{ \"Fire\", \"+fire\", 0 },\n+\t{ \"Hook\", \"+hook\", 0 },\n+\t{ \"Hook Collisions\", \"+showhookcoll\", 0 },\n+\t{ \"Toggle DynCam\", \"toggle cl_dyncam 0 1\", 0 },\n+\t{ \"Hammer\", \"+weapon1\", 0 },\n+\t{ \"Pistol\", \"+weapon2\", 0 },\n+\t{ \"Shotgun\", \"+weapon3\", 0 },\n+\t{ \"Grenade\", \"+weapon4\", 0 },\n+\t{ \"Rifle\", \"+weapon5\", 0 },\n+\t{ \"Next weapon\", \"+nextweapon\", 0 },\n+\t{ \"Prev. weapon\", \"+prevweapon\", 0 },\n+\t{ \"Vote yes\", \"vote yes\", 0 },\n+\t{ \"Vote no\", \"vote no\", 0 },\n+\t{ \"Chat\", \"+show_chat; chat all\", 0 },\n+\t{ \"Team chat\", \"+show_chat; chat team\", 0 },\n+\t{ \"Converse\", \"+show_chat; chat all /c \", 0 },\n+\t{ \"Show chat\", \"+show_chat\", 0 },\n+\t{ \"Emoticon\", \"+emote\", 0 },\n+\t{ \"Spectator mode\", \"+spectate\", 0 },\n+\t{ \"Spectate next\", \"spectate_next\", 0 },\n+\t{ \"Spectate previous\", \"spectate_previous\", 0 },\n+\t{ \"Console\", \"toggle_local_console\", 0 },\n+\t{ \"Remote console\", \"toggle_remote_console\", 0 },\n+\t{ \"Screenshot\", \"screenshot\", 0 },\n+\t{ \"Scoreboard\", \"+scoreboard\", 0 },\n+\t{ \"Statboard\", \"+statboard\", 0 },\n+\t{ \"Respawn\", \"kill\", 0 },\n+\t{ \"Toggle Dummy\", \"toggle cl_dummy 0 1\", 0 },\n+\t{ \"Dummy Copy\", \"toggle cl_dummy_copy_moves 0 1\", 0 },\n+\t{ \"Hammerfly Dummy\", \"toggle cl_dummy_hammer 0 1\", 0 },\n+\t// ATH stuff\n+\t{ \"Hidden Chat\", \"+show_chat; chat hidden\", 0 },\n+\t{ \"Crypted Chat\", \"+show_chat; chat crypt\", 0 },\n+\t{ \"Hookfly Dummy\", \"toggle cl_dummy_hook_fly 0 1\", 0 },\n+\t{ \"Toggle X-Ray\", \"toggle cl_overlay_entities 0 90\", 0 },\n+\t{ \"Zoom in\", \"zoom+\", 0 },\n+\t{ \"Zoom out\", \"zoom-\", 0 },\n+\t{ \"Toggle IRC\", \"+irc\", 0 },\n+\t{ \"Toggle Lua Console\", \"toggle_lua_console\", 0 },\n+\t{ \"Toggle Hotbar\", \"+hotbar\", 0 },\n+\t{ \"Unlock Mouse\", \"+unlock_mouse\", 0 },\n+};\n+\n+const int g_KeyCount = sizeof(gs_aKeys) / sizeof(CKeyInfo);\n+\n+void CMenus::UiDoGetButtons(int Start, int Stop, CUIRect View)\n+{\n+\tCALLSTACK_ADD();\n+\n+\tfor(int i = Start; i < Stop; i++)\n+\t{\n+\t\tCKeyInfo &Key = gs_aKeys[i];\n+\t\tCUIRect Button, Label;\n+\t\tView.HSplitTop(20.0f, &Button, &View);\n+\t\tButton.VSplitLeft(135.0f, &Label, &Button);\n+\n+\t\tchar aBuf[64];\n+\t\tstr_format(aBuf, sizeof(aBuf), \"%s:\", (const char *)Key.m_Name);\n+\n+\t\tUI()->DoLabelScaled(&Label, aBuf, 13.0f, -1);\n+\t\tint OldId = Key.m_KeyId;\n+\t\tCPointerContainer Container((void *)&gs_aKeys[i].m_Name);\n+\t\tint NewId = DoKeyReader(&Container, &Button, OldId);\n+\t\tif(NewId != OldId)\n+\t\t{\n+\t\t\tif(OldId != 0 || NewId == 0)\n+\t\t\t\tm_pClient->m_pBinds->Bind(OldId, \"\");\n+\t\t\tif(NewId != 0)\n+\t\t\t\tm_pClient->m_pBinds->Bind(NewId, gs_aKeys[i].m_pCommand);\n+\t\t}\n+\t\tView.HSplitTop(2.0f, 0, &View);\n+\t}\n+}\n+\n+void CMenus::RenderSettingsControls(CUIRect MainView)\n+{\n+\tCALLSTACK_ADD();\n+\n+\t// this is kinda slow, but whatever\n+\tfor(int i = 0; i < g_KeyCount; i++)\n+\t\tgs_aKeys[i].m_KeyId = 0;\n+\n+\tfor(int KeyId = 0; KeyId < KEY_LAST; KeyId++)\n+\t{\n+\t\tconst char *pBind = m_pClient->m_pBinds->Get(KeyId);\n+\t\tif(!pBind[0])\n+\t\t\tcontinue;\n+\n+\t\tfor(int i = 0; i < g_KeyCount; i++)\n+\t\t\tif(str_comp(pBind, gs_aKeys[i].m_pCommand) == 0)\n+\t\t\t{\n+\t\t\t\tgs_aKeys[i].m_KeyId = KeyId;\n+\t\t\t\tbreak;\n+\t\t\t}\n+\t}\n+\n+\tCUIRect MovementSettings, WeaponSettings, VotingSettings, ChatSettings, MiscSettings, ResetButton;\n+\tMainView.VSplitMid(&MovementSettings, &VotingSettings);\n+\n+\t// movement settings\n+\t{\n+\t\tMovementSettings.VMargin(5.0f, &MovementSettings);\n+\t\tMovementSettings.HSplitTop(MainView.h/3+75.0f, &MovementSettings, &WeaponSettings);\n+\t\tstatic float s_AlphaAddition = 0.0f;\n+\t\tif(UI()->MouseInside(&MovementSettings))\n+\t\t\tsmooth_set(&s_AlphaAddition, 0.10f, 60.0f*30.0f, Client()->RenderFrameTime());\n+\t\telse\n+\t\t\tsmooth_set(&s_AlphaAddition, 0.0f, 60.0f*30.0f, Client()->RenderFrameTime());\n+\t\tRenderTools()->DrawUIRect(&MovementSettings, vec4(1,1,1,0.25f+s_AlphaAddition), CUI::CORNER_ALL, 10.0f);\n+\t\tMovementSettings.VMargin(10.0f, &MovementSettings);\n+\n+\t\t//TextRender()->Text(0, MovementSettings.x, MovementSettings.y, 14.0f*UI()->Scale(), Localize(\"Movement\"), -1);\n+\n+\t\tMovementSettings.HSplitTop(14.0f, 0, &MovementSettings);\n+\n+\t\t{\n+\t\t\tCUIRect Button, Label, InputBox;\n+\t\t\tMovementSettings.HSplitTop(20.0f, &Button, &MovementSettings);\n+\t\t\tButton.VSplitLeft(135.0f, &Label, &Button);\n+\t\t\tUI()->DoLabel(&Label, Localize(\"Mouse sens.\"), 14.0f*UI()->Scale(), -1);\n+\t\t\tButton.HMargin(2.0f, &Button);\n+\t\t\tButton.VSplitLeft(50.0f, &InputBox, &Button);\n+\t\t\tButton.VSplitLeft(9.0f, 0, &Button);\n+\t\t\tstatic char aInput[6] = {0}; static float s_Offset = 0.0f;\n+\t\t\tstr_format(aInput, sizeof(aInput), \"%i\", g_Config.m_UiMousesens);\n+\t\t\tstatic CButtonContainer s_Input, s_Scrollbar;\n+\t\t\tDoEditBox(&s_Input, &InputBox, aInput, sizeof(aInput), 9.0f, &s_Offset, false);\n+\t\t\tg_Config.m_UiMousesens = atoi(aInput);\n+\t\t\tg_Config.m_UiMousesens = round_to_int(DoScrollbarH(&s_Scrollbar, &Button, (g_Config.m_UiMousesens-5)/995.0f)*995.0f)+5;\n+\t\t\tMovementSettings.HSplitTop(5.0f, 0, &MovementSettings);\n+\t\t\tif(g_Config.m_UiMousesens < 5) g_Config.m_UiMousesens = 5;\n+\t\t}\n+\n+\t\t{\n+\t\t\tCUIRect Button, Label, InputBox;\n+\t\t\tMovementSettings.HSplitTop(20.0f, &Button, &MovementSettings);\n+\t\t\tButton.VSplitLeft(135.0f, &Label, &Button);\n+\t\t\tUI()->DoLabel(&Label, Localize(\"Ingame sens.\"), 14.0f*UI()->Scale(), -1);\n+\t\t\tButton.HMargin(2.0f, &Button);\n+\t\t\tButton.VSplitLeft(50.0f, &InputBox, &Button);\n+\t\t\tButton.VSplitLeft(9.0f, 0, &Button);\n+\t\t\tstatic char aInput[6] = {0}; static float s_Offset = 0.0f;\n+\t\t\tstr_format(aInput, sizeof(aInput), \"%i\", g_Config.m_InpMousesens);\n+\t\t\tstatic CButtonContainer s_Input, s_Scrollbar;\n+\t\t\tDoEditBox(&s_Input, &InputBox, aInput, sizeof(aInput), 9.0f, &s_Offset, false);\n+\t\t\tg_Config.m_InpMousesens = atoi(aInput);\n+\t\t\tg_Config.m_InpMousesens = round_to_int(DoScrollbarH(&s_Scrollbar, &Button, (g_Config.m_InpMousesens-5)/1995.0f)*1995.0f)+5;\n+\t\t\tMovementSettings.HSplitTop(20.0f, 0, &MovementSettings);\n+\t\t\tif(g_Config.m_InpMousesens < 5) g_Config.m_InpMousesens = 5;\n+\t\t}\n+\n+\t\tUiDoGetButtons(0, 7, MovementSettings);\n+\n+\t}\n+\n+\t// weapon settings\n+\t{\n+\t\tWeaponSettings.HSplitTop(10.0f, 0, &WeaponSettings);\n+\t\tWeaponSettings.HSplitTop(MainView.h/3+35.0f, &WeaponSettings, &ResetButton);\n+\t\tstatic float s_AlphaAddition = 0.0f;\n+\t\tif(UI()->MouseInside(&WeaponSettings))\n+\t\t\tsmooth_set(&s_AlphaAddition, 0.10f, 60.0f*30.0f, Client()->RenderFrameTime());\n+\t\telse\n+\t\t\tsmooth_set(&s_AlphaAddition, 0.0f, 60.0f*30.0f, Client()->RenderFrameTime());\n+\t\tRenderTools()->DrawUIRect(&WeaponSettings, vec4(1,1,1,0.25f+s_AlphaAddition), CUI::CORNER_ALL, 6.0f);\n+\t\tWeaponSettings.VMargin(10.0f, &WeaponSettings);\n+\n+\t\tTextRender()->Text(0, WeaponSettings.x, WeaponSettings.y, 14.0f*UI()->Scale(), Localize(\"Weapon\"), -1);\n+\n+\t\tWeaponSettings.HSplitTop(14.0f+5.0f+10.0f, 0, &WeaponSettings);\n+\t\tUiDoGetButtons(7, 14, WeaponSettings);\n+\t}\n+\n+\t// defaults\n+\t{\n+\t\tResetButton.HSplitTop(10.0f, 0, &ResetButton);\n+\t\tstatic float s_AlphaAddition = 0.0f;\n+\t\tif(UI()->MouseInside(&ResetButton))\n+\t\t\tsmooth_set(&s_AlphaAddition, 0.10f, 60.0f*30.0f, Client()->RenderFrameTime());\n+\t\telse\n+\t\t\tsmooth_set(&s_AlphaAddition, 0.0f, 60.0f*30.0f, Client()->RenderFrameTime());\n+\t\tRenderTools()->DrawUIRect(&ResetButton, vec4(1,1,1,0.25f+s_AlphaAddition), CUI::CORNER_ALL, 10.0f);\n+\t\tResetButton.HMargin(10.0f, &ResetButton);\n+\t\tResetButton.VMargin(30.0f, &ResetButton);\n+\t\t//ResetButton.HSplitTop(20.0f, &ResetButton, 0);\n+\t\tstatic CButtonContainer s_DefaultButton;\n+\t\tstatic int64 s_Clicked = 0;\n+\t\tif(!s_Clicked)\n+\t\t{\n+\t\t\tif(DoButton_Menu(&s_DefaultButton, Localize(\"Reset to defaults\"), 0, &ResetButton))\n+\t\t\t\ts_Clicked = time_get();\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tif(DoButton_Menu(&s_DefaultButton, Localize(\"Are you sure?\"), 0, &ResetButton, 0, CUI::CORNER_ALL, vec4(0.7f, 0.2f, 0.2f, 0.5f)))\n+\t\t\t{\n+\t\t\t\tm_pClient->m_pBinds->SetDefaults();\n+\t\t\t\ts_Clicked = 0;\n+\t\t\t}\n+\t\t}\n+\t\tif((s_Clicked && time_get() > s_Clicked + time_freq()*4) || !UI()->MouseInside(&ResetButton))\n+\t\t\ts_Clicked = 0;\n+\t}\n+\n+\t// voting settings\n+\t{\n+\t\tVotingSettings.VMargin(5.0f, &VotingSettings);\n+\t\tVotingSettings.HSplitTop(MainView.h/3-106.0f, &VotingSettings, &ChatSettings);\n+\t\tstatic float s_AlphaAddition = 0.0f;\n+\t\tif(UI()->MouseInside(&VotingSettings))\n+\t\t\tsmooth_set(&s_AlphaAddition, 0.10f, 60.0f*30.0f, Client()->RenderFrameTime());\n+\t\telse\n+\t\t\tsmooth_set(&s_AlphaAddition, 0.0f, 60.0f*30.0f, Client()->RenderFrameTime());\n+\t\tRenderTools()->DrawUIRect(&VotingSettings, vec4(1,1,1,0.25f+s_AlphaAddition), CUI::CORNER_ALL, 6.0f);\n+\t\tVotingSettings.VMargin(10.0f, &VotingSettings);\n+\n+\t\t//TextRender()->Text(0, VotingSettings.x, VotingSettings.y, 14.0f*UI()->Scale(), Localize(\"Voting\"), -1);\n+\n+\t\tVotingSettings.HSplitTop(10.0f, 0, &VotingSettings);\n+\t\tUiDoGetButtons(14, 16, VotingSettings);\n+\t}\n+\n+\t// chat settings\n+\t{\n+\t\tChatSettings.HSplitTop(10.0f, 0, &ChatSettings);\n+\t\tChatSettings.HSplitTop(MainView.h/3-56.0f, &ChatSettings, &MiscSettings);\n+\t\tstatic float s_AlphaAddition = 0.0f;\n+\t\tif(UI()->MouseInside(&ChatSettings))\n+\t\t\tsmooth_set(&s_AlphaAddition, 0.10f, 60.0f*30.0f, Client()->RenderFrameTime());\n+\t\telse\n+\t\t\tsmooth_set(&s_AlphaAddition, 0.0f, 60.0f*30.0f, Client()->RenderFrameTime());\n+\t\tRenderTools()->DrawUIRect(&ChatSettings, vec4(1,1,1,0.25f+s_AlphaAddition), CUI::CORNER_ALL, 6.0f);\n+\t\tChatSettings.VMargin(10.0f, &ChatSettings);\n+\n+\t\t//TextRender()->Text(0, ChatSettings.x, ChatSettings.y, 14.0f*UI()->Scale(), Localize(\"Chat\"), -1);\n+\n+\t\tChatSettings.HSplitTop(12.0f, 0, &ChatSettings);\n+\t\tUiDoGetButtons(16, 20, ChatSettings);\n+\t}\n+\n+\t// misc settings\n+\t{\n+\t\tMiscSettings.HSplitTop(10.0f, 0, &MiscSettings);\n+\t\tstatic float s_AlphaAddition = 0.0f;\n+\t\tif(UI()->MouseInside(&MiscSettings))\n+\t\t\tsmooth_set(&s_AlphaAddition, 0.10f, 60.0f*30.0f, Client()->RenderFrameTime());\n+\t\telse\n+\t\t\tsmooth_set(&s_AlphaAddition, 0.0f, 60.0f*30.0f, Client()->RenderFrameTime());\n+\t\tRenderTools()->DrawUIRect(&MiscSettings, vec4(1,1,1,0.25f+s_AlphaAddition), CUI::CORNER_ALL, 6.0f);\n+\t\tMiscSettings.VMargin(10.0f, &MiscSettings);\n+\n+\t\t//TextRender()->Text(0, MiscSettings.x, MiscSettings.y, 14.0f*UI()->Scale(), Localize(\"Miscellaneous\"), -1);\n+\n+\t\tMiscSettings.HSplitTop(13.0f, 0, &MiscSettings);\n+\t\tUiDoGetButtons(20, 33, MiscSettings);\n+\t}\n+}\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+\n+// TODO: move this out of here and there extra key bindings out of there\n+void CMenus::RenderSettingsHaxx(CUIRect MainView)\n+{\n+\tCALLSTACK_ADD();\n+\n+\tCUIRect Left, Right, Button;\n+\tMainView.VSplitMid(&Left, &Right);\n+\tLeft.Margin(5.0f, &Left);\n+\t//Right.Margin(5.0f, &Right);\n+\n+\tLeft.HSplitTop(30.0f, &Button, &Left);\n+\tUI()->DoLabelScaled(&Button, Localize(\"Haxx\"), 20.0f, 0, -1);\n+\n+\tLeft.HSplitTop(7.0f, 0, &Left);\n+\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\tstatic CButtonContainer s_ButtonUsernameFetching;\n+\tif(DoButton_CheckBox(&s_ButtonUsernameFetching, Localize(\"Gather Statistics\"), g_Config.m_ClUsernameFetching, &Button))\n+\t\tg_Config.m_ClUsernameFetching ^= 1;\n+\n+//\tLeft.HSplitTop(5.0f, 0, &Left);\n+//\tLeft.HSplitTop(20.0f, &Button, &Left);\n+//\tif(DoButton_CheckBox(&g_Config.m_ClChatDennisProtection, (\"Dennis Protection\"), g_Config.m_ClChatDennisProtection, &Button))\n+//\t\tg_Config.m_ClChatDennisProtection ^= 1;\n+\n+\tLeft.HSplitTop(5.0f, 0, &Left);\n+\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\tstatic CButtonContainer s_ButtonColorfulClient;\n+\tif(DoButton_CheckBox(&s_ButtonColorfulClient, (\"Colorful Client\"), g_Config.m_ClColorfulClient, &Button, Localize(\"Makes everything look way more awesome!\")))\n+\t\tg_Config.m_ClColorfulClient ^= 1;\n+\n+\tLeft.HSplitTop(5.0f, 0, &Left);\n+\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\tstatic CButtonContainer s_ButtonPathFinding;\n+\tif(DoButton_CheckBox(&s_ButtonPathFinding, Localize(\"A* Pathfinding\"), g_Config.m_ClPathFinding, &Button, Localize(\"Find and visualize the shortest path to the finish on Race Maps\")))\n+\t\tg_Config.m_ClPathFinding ^= 1;\n+\n+\tLeft.HSplitTop(5.0f, 0, &Left);\n+\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\tstatic CButtonContainer s_ButtonSmartZoom;\n+\tif(DoButton_CheckBox(&s_ButtonSmartZoom, Localize(\"Smart zoom\"), g_Config.m_ClSmartZoom, &Button, Localize(\"Smart zoom on race gametypes\")))\n+\t\tg_Config.m_ClSmartZoom ^= 1;\n+\n+\tLeft.HSplitTop(5.0f, 0, &Left);\n+\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\tstatic CButtonContainer s_ButtonConsoleModeEmotes;\n+\tif(DoButton_CheckBox(&s_ButtonConsoleModeEmotes, Localize(\"Console Mode Indicator\"), g_Config.m_ClConsoleModeEmotes, &Button, Localize(\"Send Zzz emotes when in console mode\")))\n+\t\tg_Config.m_ClConsoleModeEmotes ^= 1;\n+\n+\tLeft.HSplitTop(5.0f, 0, &Left);\n+\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\tstatic CButtonContainer s_ButtonChatbubble;\n+\tif(DoButton_CheckBox(&s_ButtonChatbubble, Localize(\"Chatbubble\"), g_Config.m_ClChatbubble, &Button, Localize(\"Send the chatbubble when you are typing\")))\n+\t\tg_Config.m_ClChatbubble ^= 1;\n+\n+\t{\n+\t\tCUIRect ClearCacheButton;\n+\t\tLeft.HSplitTop(5.0f, 0, &Left);\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tButton.VSplitRight(220.0f, &Button, &ClearCacheButton);\n+\t\tstatic CButtonContainer s_ButtonSkinFetcher;\n+\t\tif(DoButton_CheckBox(&s_ButtonSkinFetcher, Localize(\"Skin Fetcher\"), g_Config.m_ClSkinFetcher, &Button, Localize(\"[EXPERIMENTAL!] Download skins from certain public skin databases automatically\\nif a missing skin is used by somebody else on your server\")))\n+\t\t\tg_Config.m_ClSkinFetcher ^= 1;\n+\n+\t\tstatic CButtonContainer s_ClearCacheButton;\n+\t\tClearCacheButton.VSplitLeft(5.0f, 0, &ClearCacheButton);\n+\t\tif(DoButton_Menu(&s_ClearCacheButton, Localize(\"Clear downloaded skins cache\"), 0, &ClearCacheButton))\n+\t\t{\n+\t\t\tStorage()->ListDirectory(IStorageTW::TYPE_SAVE, \"downloadedskins\", SkinCacheListdirCallback, this->Storage());\n+\t\t\tdbg_msg(\"skincache\", \"cleared\");\n+\t\t}\n+\t}\n+\n+\t// extra binds!\n+\t{\n+\t\t// this is kinda slow, but whatever\n+\t\tfor(int i = 0; i < g_KeyCount; i++)\n+\t\t\tgs_aKeys[i].m_KeyId = 0;\n+\n+\t\tfor(int KeyId = 0; KeyId < KEY_LAST; KeyId++)\n+\t\t{\n+\t\t\tconst char *pBind = m_pClient->m_pBinds->Get(KeyId);\n+\t\t\tif(!pBind[0])\n+\t\t\t\tcontinue;\n+\n+\t\t\tfor(int i = 0; i < g_KeyCount; i++)\n+\t\t\t\tif(str_comp(pBind, gs_aKeys[i].m_pCommand) == 0)\n+\t\t\t\t{\n+\t\t\t\t\tgs_aKeys[i].m_KeyId = KeyId;\n+\t\t\t\t\tbreak;\n+\t\t\t\t}\n+\t\t}\n+\n+\t\tCUIRect Background;\n+\t\tLeft.HSplitTop(7.5f, 0, &Background);\n+\t\tBackground.h = 23.0f*10+2.0f;\n+\t\tRenderTools()->DrawUIRect(&Background, vec4(0.2f, 0.5f, 0.2f, 0.68f), CUI::CORNER_ALL, 4.0f);\n+\t\tLeft.HSplitTop(7.0f, 0, &Left);\n+\t\tLeft.VMargin(10.0f, &Left);\n+\t\tLeft.HSplitTop(5.0f, 0, &Left);\n+\n+\t\tUiDoGetButtons(33, 43, Left);\n+\t\tLeft.h = 100.0f;\n+\t}\n+\n+\tRenderSettingsIRC(Right);\n+}"
    },
    {
      "sha": "eb9278885e26e15e3256eeaef4f649a8a59ca93a",
      "filename": "src/game/client/components/menus_settings/settings_general.cpp",
      "status": "added",
      "additions": 256,
      "deletions": 0,
      "changes": 256,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_general.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_general.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/menus_settings/settings_general.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -0,0 +1,256 @@\n+#include \"../menus.h\"\n+\n+void CMenus::RenderSettingsGeneral(CUIRect MainView)\n+{\n+\tCALLSTACK_ADD();\n+\n+\tCUIRect Label, Button, Left, Right, Game, Client, AutoReconnect;\n+\tMainView.HSplitTop(180.0f, &Game, &Client);\n+\tClient.HSplitTop(160.0f, &Client, &AutoReconnect);\n+\n+\t// game\n+\t{\n+\t\t// headline\n+\t\tGame.HSplitTop(30.0f, &Label, &Game);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Game\"), 20.0f, -1);\n+\t\tGame.Margin(5.0f, &Game);\n+\t\tGame.VSplitMid(&Left, &Right);\n+\t\tLeft.VSplitRight(5.0f, &Left, 0);\n+\t\tRight.VMargin(5.0f, &Right);\n+\n+\t\t// dynamic camera\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tstatic CButtonContainer s_DynamicCameraButton;\n+\t\tif(DoButton_CheckBox(&s_DynamicCameraButton, Localize(\"Dynamic Camera\"), g_Config.m_ClMouseDeadzone != 0, &Button))\n+\t\t{\n+\t\t\tif(g_Config.m_ClMouseDeadzone)\n+\t\t\t{\n+\t\t\t\tg_Config.m_ClMouseFollowfactor = 0;\n+\t\t\t\tg_Config.m_ClMouseMaxDistance = 400;\n+\t\t\t\tg_Config.m_ClMouseDeadzone = 0;\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\tg_Config.m_ClMouseFollowfactor = 60;\n+\t\t\t\tg_Config.m_ClMouseMaxDistance = 1000;\n+\t\t\t\tg_Config.m_ClMouseDeadzone = 300;\n+\t\t\t}\n+\t\t}\n+\n+\t\t// weapon pickup\n+\t\tLeft.HSplitTop(5.0f, 0, &Left);\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tstatic CButtonContainer s_CheckboxAutoswitchWeapons;\n+\t\tif(DoButton_CheckBox(&s_CheckboxAutoswitchWeapons, Localize(\"Switch weapon on pickup\"), g_Config.m_ClAutoswitchWeapons, &Button))\n+\t\t\tg_Config.m_ClAutoswitchWeapons ^= 1;\n+\n+\t\t// weapon out of ammo autoswitch\n+\t\tLeft.HSplitTop(5.0f, 0, &Left);\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tstatic CButtonContainer s_CheckboxAutoswitchWeaponsOutOfAmmo;\n+\t\tif(DoButton_CheckBox(&s_CheckboxAutoswitchWeaponsOutOfAmmo, Localize(\"Switch weapon when out of ammo\"), g_Config.m_ClAutoswitchWeaponsOutOfAmmo, &Button))\n+\t\t\tg_Config.m_ClAutoswitchWeaponsOutOfAmmo ^= 1;\n+\n+\t\t// weapon reset on death\n+\t\tLeft.HSplitTop(5.0f, 0, &Left);\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tstatic CButtonContainer s_CheckboxResetWantedWeaponOnDeath;\n+\t\tif(DoButton_CheckBox(&s_CheckboxResetWantedWeaponOnDeath, Localize(\"Reset wanted weapon on death\"), g_Config.m_ClResetWantedWeaponOnDeath, &Button))\n+\t\t\tg_Config.m_ClResetWantedWeaponOnDeath ^= 1;\n+\n+\t\t// chat messages\n+\t\tRight.HSplitTop(5.0f, 0, &Right);\n+\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\tstatic CButtonContainer s_CheckboxShowChatFriends;\n+\t\tif(DoButton_CheckBox(&s_CheckboxShowChatFriends, Localize(\"Show only chat messages from friends\"), g_Config.m_ClShowChatFriends, &Button))\n+\t\t\tg_Config.m_ClShowChatFriends ^= 1;\n+\n+\t\t// name plates\n+\t\tRight.HSplitTop(5.0f, 0, &Right);\n+\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\tstatic CButtonContainer s_CheckboxNameplates;\n+\t\tif(DoButton_CheckBox(&s_CheckboxNameplates, Localize(\"Show name above Tees\"), g_Config.m_ClNameplates, &Button))\n+\t\t\tg_Config.m_ClNameplates ^= 1;\n+\n+\t\tif(g_Config.m_ClNameplates)\n+\t\t{\n+\t\t\tRight.HSplitTop(2.5f, 0, &Right);\n+\t\t\tRight.HSplitTop(20.0f, &Label, &Right);\n+\t\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\t\tUI()->DoLabelScaled(&Label, Localize(\"Name plates size\"), 13.0f, -1);\n+\t\t\tButton.HMargin(2.0f, &Button);\n+\t\t\tstatic CButtonContainer s_Scrollbar;\n+\t\t\tg_Config.m_ClNameplatesSize = (int)(DoScrollbarH(&s_Scrollbar, &Button, g_Config.m_ClNameplatesSize/100.0f, 0, g_Config.m_ClNameplatesSize)*100.0f+0.1f);\n+\n+\t\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\t\tstatic CButtonContainer s_CheckboxNameplatesTeamcolors;\n+\t\t\tif(DoButton_CheckBox(&s_CheckboxNameplatesTeamcolors, Localize(\"Use team colors for name plates\"), g_Config.m_ClNameplatesTeamcolors, &Button))\n+\t\t\t\tg_Config.m_ClNameplatesTeamcolors ^= 1;\n+\t\t}\n+\n+\t\tRight.HSplitTop(5.0f, 0, &Right);\n+\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\tstatic CButtonContainer s_CheckboxNameplatesClan;\n+\t\tif(DoButton_CheckBox(&s_CheckboxNameplatesClan, Localize(\"Show clan above Tees\"), g_Config.m_ClNameplatesClan, &Button))\n+\t\t\tg_Config.m_ClNameplatesClan ^= 1;\n+\n+\t\tif(g_Config.m_ClNameplatesClan)\n+\t\t{\n+\t\t\tRight.HSplitTop(2.5f, 0, &Right);\n+\t\t\tRight.HSplitTop(20.0f, &Label, &Right);\n+\t\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\t\tUI()->DoLabelScaled(&Label, Localize(\"Clan plates size\"), 13.0f, -1);\n+\t\t\tButton.HMargin(2.0f, &Button);\n+\t\t\tCButtonContainer s_Scrollbar;\n+\t\t\tg_Config.m_ClNameplatesClanSize = (int)(DoScrollbarH(&s_Scrollbar, &Button, g_Config.m_ClNameplatesClanSize/100.0f, 0, g_Config.m_ClNameplatesClanSize)*100.0f+0.1f);\n+\n+\t\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\t\tstatic CButtonContainer s_CheckboxNameplatesClancolors;\n+\t\t\tif(DoButton_CheckBox(&s_CheckboxNameplatesClancolors, Localize(\"Highlight your clan\"), g_Config.m_ClNameplatesClancolors, &Button))\n+\t\t\t\tg_Config.m_ClNameplatesClancolors ^= 1;\n+\t\t}\n+\n+\t\tRight.HSplitTop(5.0f, 0, &Right);\n+\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\tstatic CButtonContainer s_CheckboxNamePlatesATH;\n+\t\tif(DoButton_CheckBox(&s_CheckboxNamePlatesATH, Localize(\"Show other ATH user\"), g_Config.m_ClNamePlatesATH, &Button))\n+\t\t\tg_Config.m_ClNamePlatesATH ^= 1;\n+\t}\n+\n+\t// client\n+\t{\n+\t\t// headline\n+\t\tClient.HSplitTop(65.0f, &Label, &Client);\t//changed due to Show other ATH user\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Client\"), 20.0f, -1);\n+\t\tClient.Margin(5.0f, &Client);\n+\t\tClient.VSplitMid(&Left, &Right);\n+\t\tLeft.VSplitRight(5.0f, &Left, 0);\n+\t\tRight.VMargin(5.0f, &Right);\n+\n+\t\t// auto demo settings\n+\t\t{\n+\t\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\t\tstatic CButtonContainer s_CheckboxAutoDemoRecord;\n+\t\t\tif(DoButton_CheckBox(&s_CheckboxAutoDemoRecord, Localize(\"Automatically record demos\"), g_Config.m_ClAutoDemoRecord, &Button))\n+\t\t\t\tg_Config.m_ClAutoDemoRecord ^= 1;\n+\n+\t\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\t\tstatic CButtonContainer s_CheckboxAutoScreenshot;\n+\t\t\tif(DoButton_CheckBox(&s_CheckboxAutoScreenshot, Localize(\"Automatically take game over screenshot\"), g_Config.m_ClAutoScreenshot, &Button))\n+\t\t\t\tg_Config.m_ClAutoScreenshot ^= 1;\n+\n+\t\t\tLeft.HSplitTop(10.0f, 0, &Left);\n+\t\t\tLeft.HSplitTop(20.0f, &Label, &Left);\n+\t\t\tButton.VSplitRight(20.0f, &Button, 0);\n+\t\t\tchar aBuf[64];\n+\t\t\tif(g_Config.m_ClAutoDemoMax)\n+\t\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s: %i\", Localize(\"Max demos\"), g_Config.m_ClAutoDemoMax);\n+\t\t\telse\n+\t\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s: %s\", Localize(\"Max demos\"), Localize(\"no limit\"));\n+\t\t\tUI()->DoLabelScaled(&Label, aBuf, 13.0f, -1);\n+\t\t\tLeft.HSplitTop(20.0f, &Button, 0);\n+\t\t\tButton.HMargin(2.0f, &Button);\n+\t\t\tstatic CButtonContainer s_ScrollbarAutoDemoMax;\n+\t\t\tg_Config.m_ClAutoDemoMax = static_cast<int>(DoScrollbarH(&s_ScrollbarAutoDemoMax, &Button, g_Config.m_ClAutoDemoMax/1000.0f)*1000.0f+0.1f);\n+\n+\t\t\tRight.HSplitTop(10.0f, 0, &Right);\n+\t\t\tRight.HSplitTop(20.0f, &Label, &Right);\n+\t\t\tButton.VSplitRight(20.0f, &Button, 0);\n+\t\t\tif(g_Config.m_ClAutoScreenshotMax)\n+\t\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s: %i\", Localize(\"Max Screenshots\"), g_Config.m_ClAutoScreenshotMax);\n+\t\t\telse\n+\t\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s: %s\", Localize(\"Max Screenshots\"), Localize(\"no limit\"));\n+\t\t\tUI()->DoLabelScaled(&Label, aBuf, 13.0f, -1);\n+\t\t\tRight.HSplitTop(20.0f, &Button, 0);\n+\t\t\tButton.HMargin(2.0f, &Button);\n+\t\t\tstatic CButtonContainer s_ScrollbarAutoScreenshotMax;\n+\t\t\tg_Config.m_ClAutoScreenshotMax = static_cast<int>(DoScrollbarH(&s_ScrollbarAutoScreenshotMax, &Button, g_Config.m_ClAutoScreenshotMax/1000.0f)*1000.0f+0.1f);\n+\t\t}\n+\n+\t\tLeft.HSplitTop(20.0f, 0, &Left);\n+\t\tLeft.HSplitTop(20.0f, &Label, &Left);\n+\t\tButton.VSplitRight(20.0f, &Button, 0);\n+\t\tchar aBuf[64];\n+\t\tif(g_Config.m_ClCpuThrottle)\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s: %i\", Localize(\"CPU Throttle\"), g_Config.m_ClCpuThrottle);\n+\t\telse\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s: %s\", Localize(\"CPU Throttle\"), Localize(\"none\"));\n+\t\tUI()->DoLabelScaled(&Label, aBuf, 13.0f, -1);\n+\t\tLeft.HSplitTop(20.0f, &Button, 0);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tstatic CButtonContainer s_ScrollbarCpuThrottle;\n+\t\tg_Config.m_ClCpuThrottle = round_to_int(DoScrollbarH(&s_ScrollbarCpuThrottle, &Button, g_Config.m_ClCpuThrottle/100.0f)*100.0f+0.1f);\n+\n+\t\t{\n+\t\t\tCUIRect Checkbox;\n+\t\t\tstatic CButtonContainer s_CheckboxPID[2];\n+\t\t\tLeft.HSplitTop(20.0f, 0, &Left);\n+\t\t\tLeft.HSplitTop(20.0f, &Label, &Left);\n+\t\t\tButton.VSplitRight(20.0f, &Button, 0);\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s: %i\", Localize(\"Reconnect when server is full\"), g_Config.m_ClReconnectFull);\n+\t\t\tUI()->DoLabelScaled(&Label, aBuf, 13.0f, -1);\n+\t\t\tLeft.HSplitTop(20.0f, &Button, 0);\n+\t\t\tButton.HMargin(2.0f, &Button);\n+\t\t\tButton.VSplitLeft(Button.h, &Checkbox, &Button);\n+\t\t\tif(DoButton_CheckBox(&s_CheckboxPID[0], \"\", g_Config.m_ClReconnectFull, &Checkbox))\n+\t\t\t\tg_Config.m_ClReconnectFull = g_Config.m_ClReconnectFull ? 0 : 5;\n+\t\t\tButton.VSplitLeft(Button.h/2, 0, &Button);\n+\t\t\tstatic CButtonContainer s_ScrollbarReconnectFull;\n+\t\t\tif(g_Config.m_ClReconnectFull)\n+\t\t\t\tg_Config.m_ClReconnectFull = max(5, round_to_int(DoScrollbarH(&s_ScrollbarReconnectFull, &Button, g_Config.m_ClReconnectFull/180.0f)*180.0f));\n+\n+\t\t\tLeft.HSplitTop(20.0f, 0, &Left);\n+\t\t\tLeft.HSplitTop(20.0f, &Label, &Left);\n+\t\t\tButton.VSplitRight(20.0f, &Button, 0);\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s: %i\", Localize(\"Reconnect on connection timeout\"), g_Config.m_ClReconnectTimeout);\n+\t\t\tUI()->DoLabelScaled(&Label, aBuf, 13.0f, -1);\n+\t\t\tLeft.HSplitTop(20.0f, &Button, 0);\n+\t\t\tButton.HMargin(2.0f, &Button);\n+\t\t\tButton.VSplitLeft(Button.h, &Checkbox, &Button);\n+\t\t\tif(DoButton_CheckBox(&s_CheckboxPID[1], \"\", g_Config.m_ClReconnectTimeout, &Checkbox))\n+\t\t\t\tg_Config.m_ClReconnectTimeout = g_Config.m_ClReconnectTimeout ? 0 : 10;\n+\t\t\tButton.VSplitLeft(Button.h/2, 0, &Button);\n+\t\t\tstatic CButtonContainer s_ScrollbarReconnectTimeout;\n+\t\t\tif(g_Config.m_ClReconnectTimeout)\n+\t\t\t\tg_Config.m_ClReconnectTimeout = max(5, round_to_int(DoScrollbarH(&s_ScrollbarReconnectTimeout, &Button, g_Config.m_ClReconnectTimeout/180.0f)*180.0f));\n+\t\t}\n+\n+#if defined(CONF_FAMILY_WINDOWS)\n+\t\tLeft.HSplitTop(20.0f, 0, &Left);\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tCButtonContainer s_HideConsoleButton;\n+\t\tif(DoButton_CheckBox(&s_HideConsoleButton, Localize(\"Hide console window\"), g_Config.m_ClHideConsole, &Button))\n+\t\t\tg_Config.m_ClHideConsole ^= 1;\n+#endif\n+\n+\t\t// auto statboard screenshot\n+\t\t{\n+\t\t\tRight.HSplitTop(20.0f, 0, &Right); //\n+\t\t\tRight.HSplitTop(20.0f, 0, &Right); // Make some distance so it looks more natural\n+\t\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\t\tstatic CButtonContainer s_CheckboxAutoStatboardScreenshot;\n+\t\t\tif(DoButton_CheckBox(&s_CheckboxAutoStatboardScreenshot,\n+\t\t\t\t\t\tLocalize(\"Automatically take statboard screenshot\"),\n+\t\t\t\t\t\tg_Config.m_ClAutoStatboardScreenshot, &Button))\n+\t\t\t{\n+\t\t\t\tg_Config.m_ClAutoStatboardScreenshot ^= 1;\n+\t\t\t}\n+\n+\t\t\tRight.HSplitTop(10.0f, 0, &Right);\n+\t\t\tRight.HSplitTop(20.0f, &Label, &Right);\n+\t\t\tButton.VSplitRight(20.0f, &Button, 0);\n+\t\t\tif(g_Config.m_ClAutoStatboardScreenshotMax)\n+\t\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s: %i\", Localize(\"Max Screenshots\"), g_Config.m_ClAutoStatboardScreenshotMax);\n+\t\t\telse\n+\t\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s: %s\", Localize(\"Max Screenshots\"), Localize(\"no limit\"));\n+\t\t\tUI()->DoLabelScaled(&Label, aBuf, 13.0f, -1);\n+\t\t\tRight.HSplitTop(20.0f, &Button, 0);\n+\t\t\tButton.HMargin(2.0f, &Button);\n+\t\t\tstatic CButtonContainer s_CheckboxAutoStatboardScreenshotMax;\n+\t\t\tg_Config.m_ClAutoStatboardScreenshotMax =\n+\t\t\t\tstatic_cast<int>(DoScrollbarH(&s_CheckboxAutoStatboardScreenshotMax,\n+\t\t\t\t\t\t\t&Button,\n+\t\t\t\t\t\t\tg_Config.m_ClAutoStatboardScreenshotMax/1000.0f)*1000.0f+0.1f);\n+\t\t}\n+\t}\n+}"
    },
    {
      "sha": "0f6ff46982e1996c6d252498a829c2bf35fad4c8",
      "filename": "src/game/client/components/menus_settings/settings_general.cpp_KACK",
      "status": "added",
      "additions": 266,
      "deletions": 0,
      "changes": 266,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_general.cpp_KACK",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_general.cpp_KACK",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/menus_settings/settings_general.cpp_KACK?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -0,0 +1,266 @@\n+#include \"../menus.h\"\n+\n+#include <engine/textrender.h>\n+#include \"game/client/components/fontmgr.h\"\n+\n+void CMenus::RenderSettingsGeneral(CUIRect MainView)\n+{\n+\tCALLSTACK_ADD();\n+\n+\tchar aBuf[256];\n+\tCUIRect Label, Button, Game, Client;\n+\tMainView.HSplitMid(&Client, &Game);\n+\n+\t// client at the left\n+\t{\n+\t\t// headline\n+\t\tClient.HSplitTop(30.0f, &Label, &Client);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Client\"), 20.0f, -1);\n+\t\tClient.Margin(5.0f, &Client);\n+\n+\t\t// auto demo settings\n+\t\t{\n+\t\t\t// headline\n+\t\t\tClient.HSplitTop(20.0f, &Label, &Client);\n+\t\t\tUI()->DoLabelScaled(&Label, Localize(\"Records\"), 15.0f, -1, -1, 0, m_pClient->m_pFontMgrBasic->GetFont(FONT_BOLD));\n+\t\t\tClient.Margin(5.0f, &Client);\n+\n+\t\t\tClient.HSplitTop(10.0f, 0, &Client);\n+\t\t\tClient.HSplitTop(20.0f, &Button, &Client);\n+\t\t\tstatic CButtonContainer s_CheckboxAutoDemoRecord;\n+\t\t\tif(DoButton_CheckBox(&s_CheckboxAutoDemoRecord, Localize(\"Automatically record demos\"), g_Config.m_ClAutoDemoRecord, &Button))\n+\t\t\t\tg_Config.m_ClAutoDemoRecord ^= 1;\n+\n+\t\t\tClient.HSplitTop(10.0f, 0, &Client);\n+\t\t\tClient.HSplitTop(20.0f, &Button, &Client);\n+\t\t\tstatic CButtonContainer s_CheckboxAutoScreenshot;\n+\t\t\tif(DoButton_CheckBox(&s_CheckboxAutoScreenshot, Localize(\"Automatically take game over screenshot\"), g_Config.m_ClAutoScreenshot, &Button))\n+\t\t\t\tg_Config.m_ClAutoScreenshot ^= 1;\n+\n+\t\t\tClient.HSplitTop(10.0f, 0, &Client);\n+\t\t\tClient.HSplitTop(20.0f, &Label, &Client);\n+\t\t\tLabel.VSplitMid(&Label, &Button);\n+\t\t\tif(g_Config.m_ClAutoDemoMax)\n+\t\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s: %i\", Localize(\"Max demos\"), g_Config.m_ClAutoDemoMax);\n+\t\t\telse\n+\t\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s: %s\", Localize(\"Max demos\"), Localize(\"no limit\"));\n+\t\t\tUI()->DoLabelScaled(&Label, aBuf, 13.0f, -1);\n+\t\t\tstatic CButtonContainer s_ScrollbarAutoDemoMax;\n+\t\t\tg_Config.m_ClAutoDemoMax = static_cast<int>(DoScrollbarH(&s_ScrollbarAutoDemoMax, &Button, g_Config.m_ClAutoDemoMax/1000.0f)*1000.0f+0.1f);\n+\n+\t\t\tClient.HSplitTop(10.0f, 0, &Client);\n+\t\t\tClient.HSplitTop(20.0f, &Label, &Client);\n+\t\t\tButton.VSplitRight(20.0f, &Button, 0);\n+\t\t\tif(g_Config.m_ClAutoScreenshotMax)\n+\t\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s: %i\", Localize(\"Max Screenshots\"), g_Config.m_ClAutoScreenshotMax);\n+\t\t\telse\n+\t\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s: %s\", Localize(\"Max Screenshots\"), Localize(\"no limit\"));\n+\t\t\tUI()->DoLabelScaled(&Label, aBuf, 13.0f, -1);\n+\t\t\tClient.HSplitTop(20.0f, &Button, 0);\n+\t\t\tButton.HMargin(2.0f, &Button);\n+\t\t\tstatic CButtonContainer s_ScrollbarAutoScreenshotMax;\n+\t\t\tg_Config.m_ClAutoScreenshotMax = static_cast<int>(DoScrollbarH(&s_ScrollbarAutoScreenshotMax, &Button, g_Config.m_ClAutoScreenshotMax/1000.0f)*1000.0f+0.1f);\n+\t\t}\n+\n+\t\t// headline\n+\t\tClient.HSplitTop(15.0f, &Label, &Client);\n+\t\tClient.HSplitTop(20.0f, &Label, &Client);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"System\"), 15.0f, -1);\n+\t\tClient.Margin(5.0f, &Client);\n+\n+\t\t// system\n+\t\t{\n+\t\t\tClient.HSplitTop(10.0f, 0, &Client);\n+\t\t\tClient.HSplitTop(20.0f, &Label, &Client);\n+\t\t\tButton.VSplitRight(20.0f, &Button, 0);\n+\t\t\tif(g_Config.m_ClCpuThrottle)\n+\t\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s: %i\", Localize(\"CPU Throttle\"), g_Config.m_ClCpuThrottle);\n+\t\t\telse\n+\t\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s: %s\", Localize(\"CPU Throttle\"), Localize(\"none\"));\n+\t\t\tUI()->DoLabelScaled(&Label, aBuf, 13.0f, -1);\n+\t\t\tClient.HSplitTop(20.0f, &Button, 0);\n+\t\t\tButton.HMargin(2.0f, &Button);\n+\t\t\tstatic CButtonContainer s_ScrollbarCpuThrottle;\n+\t\t\tg_Config.m_ClCpuThrottle = round_to_int(DoScrollbarH(&s_ScrollbarCpuThrottle, &Button, g_Config.m_ClCpuThrottle/100.0f)*100.0f+0.1f);\n+\n+\t\t\tCUIRect Checkbox;\n+\t\t\tstatic CButtonContainer s_CheckboxPID[2];\n+\t\t\tClient.HSplitTop(20.0f, 0, &Client);\n+\t\t\tClient.HSplitTop(20.0f, &Label, &Left);\n+\t\t\tButton.VSplitRight(20.0f, &Button, 0);\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s: %i\", Localize(\"Reconnect when server is full\"), g_Config.m_ClReconnectFull);\n+\t\t\tUI()->DoLabelScaled(&Label, aBuf, 13.0f, -1);\n+\t\t\tLeft.HSplitTop(20.0f, &Button, 0);\n+\t\t\tButton.HMargin(2.0f, &Button);\n+\t\t\tButton.VSplitLeft(Button.h, &Checkbox, &Button);\n+\t\t\tif(DoButton_CheckBox(&s_CheckboxPID[0], \"\", g_Config.m_ClReconnectFull, &Checkbox))\n+\t\t\t\tg_Config.m_ClReconnectFull = g_Config.m_ClReconnectFull ? 0 : 5;\n+\t\t\tButton.VSplitLeft(Button.h/2, 0, &Button);\n+\t\t\tstatic CButtonContainer s_ScrollbarReconnectFull;\n+\t\t\tif(g_Config.m_ClReconnectFull)\n+\t\t\t\tg_Config.m_ClReconnectFull = max(5, round_to_int(DoScrollbarH(&s_ScrollbarReconnectFull, &Button, g_Config.m_ClReconnectFull/180.0f)*180.0f));\n+\n+\t\t\tLeft.HSplitTop(20.0f, 0, &Left);\n+\t\t\tLeft.HSplitTop(20.0f, &Label, &Left);\n+\t\t\tButton.VSplitRight(20.0f, &Button, 0);\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s: %i\", Localize(\"Reconnect on connection timeout\"), g_Config.m_ClReconnectTimeout);\n+\t\t\tUI()->DoLabelScaled(&Label, aBuf, 13.0f, -1);\n+\t\t\tLeft.HSplitTop(20.0f, &Button, 0);\n+\t\t\tButton.HMargin(2.0f, &Button);\n+\t\t\tButton.VSplitLeft(Button.h, &Checkbox, &Button);\n+\t\t\tif(DoButton_CheckBox(&s_CheckboxPID[1], \"\", g_Config.m_ClReconnectTimeout, &Checkbox))\n+\t\t\t\tg_Config.m_ClReconnectTimeout = g_Config.m_ClReconnectTimeout ? 0 : 10;\n+\t\t\tButton.VSplitLeft(Button.h/2, 0, &Button);\n+\t\t\tstatic CButtonContainer s_ScrollbarReconnectTimeout;\n+\t\t\tif(g_Config.m_ClReconnectTimeout)\n+\t\t\t\tg_Config.m_ClReconnectTimeout = max(5, round_to_int(DoScrollbarH(&s_ScrollbarReconnectTimeout, &Button, g_Config.m_ClReconnectTimeout/180.0f)*180.0f));\n+\t\t}\n+\n+#if defined(CONF_FAMILY_WINDOWS)\n+\t\tLeft.HSplitTop(20.0f, 0, &Left);\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tCButtonContainer s_HideConsoleButton;\n+\t\tif(DoButton_CheckBox(&s_HideConsoleButton, Localize(\"Hide console window\"), g_Config.m_ClHideConsole, &Button))\n+\t\t\tg_Config.m_ClHideConsole ^= 1;\n+#endif\n+\n+\t\t// auto statboard screenshot\n+\t\t{\n+\t\t\tRight.HSplitTop(20.0f, 0, &Right); //\n+\t\t\tRight.HSplitTop(20.0f, 0, &Right); // Make some distance so it looks more natural\n+\t\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\t\tstatic CButtonContainer s_CheckboxAutoStatboardScreenshot;\n+\t\t\tif(DoButton_CheckBox(&s_CheckboxAutoStatboardScreenshot,\n+\t\t\t\t\t\tLocalize(\"Automatically take statboard screenshot\"),\n+\t\t\t\t\t\tg_Config.m_ClAutoStatboardScreenshot, &Button))\n+\t\t\t{\n+\t\t\t\tg_Config.m_ClAutoStatboardScreenshot ^= 1;\n+\t\t\t}\n+\n+\t\t\tRight.HSplitTop(10.0f, 0, &Right);\n+\t\t\tRight.HSplitTop(20.0f, &Label, &Right);\n+\t\t\tButton.VSplitRight(20.0f, &Button, 0);\n+\t\t\tif(g_Config.m_ClAutoStatboardScreenshotMax)\n+\t\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s: %i\", Localize(\"Max Screenshots\"), g_Config.m_ClAutoStatboardScreenshotMax);\n+\t\t\telse\n+\t\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s: %s\", Localize(\"Max Screenshots\"), Localize(\"no limit\"));\n+\t\t\tUI()->DoLabelScaled(&Label, aBuf, 13.0f, -1);\n+\t\t\tRight.HSplitTop(20.0f, &Button, 0);\n+\t\t\tButton.HMargin(2.0f, &Button);\n+\t\t\tstatic CButtonContainer s_CheckboxAutoStatboardScreenshotMax;\n+\t\t\tg_Config.m_ClAutoStatboardScreenshotMax =\n+\t\t\t\tstatic_cast<int>(DoScrollbarH(&s_CheckboxAutoStatboardScreenshotMax,\n+\t\t\t\t\t\t\t&Button,\n+\t\t\t\t\t\t\tg_Config.m_ClAutoStatboardScreenshotMax/1000.0f)*1000.0f+0.1f);\n+\t\t}\n+\t}\n+\n+\t// game\n+\t{\n+\t\t// headline\n+\t\tGame.HSplitTop(30.0f, &Label, &Game);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Game\"), 20.0f, -1);\n+\t\tGame.Margin(5.0f, &Game);\n+\t\tGame.VSplitMid(&Left, &Right);\n+\t\tLeft.VSplitRight(5.0f, &Left, 0);\n+\t\tRight.VMargin(5.0f, &Right);\n+\n+\t\t// dynamic camera\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tstatic CButtonContainer s_DynamicCameraButton;\n+\t\tif(DoButton_CheckBox(&s_DynamicCameraButton, Localize(\"Dynamic Camera\"), g_Config.m_ClMouseDeadzone != 0, &Button))\n+\t\t{\n+\t\t\tif(g_Config.m_ClMouseDeadzone)\n+\t\t\t{\n+\t\t\t\tg_Config.m_ClMouseFollowfactor = 0;\n+\t\t\t\tg_Config.m_ClMouseMaxDistance = 400;\n+\t\t\t\tg_Config.m_ClMouseDeadzone = 0;\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\tg_Config.m_ClMouseFollowfactor = 60;\n+\t\t\t\tg_Config.m_ClMouseMaxDistance = 1000;\n+\t\t\t\tg_Config.m_ClMouseDeadzone = 300;\n+\t\t\t}\n+\t\t}\n+\n+\t\t// weapon pickup\n+\t\tLeft.HSplitTop(5.0f, 0, &Left);\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tstatic CButtonContainer s_CheckboxAutoswitchWeapons;\n+\t\tif(DoButton_CheckBox(&s_CheckboxAutoswitchWeapons, Localize(\"Switch weapon on pickup\"), g_Config.m_ClAutoswitchWeapons, &Button))\n+\t\t\tg_Config.m_ClAutoswitchWeapons ^= 1;\n+\n+\t\t// weapon out of ammo autoswitch\n+\t\tLeft.HSplitTop(5.0f, 0, &Left);\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tstatic CButtonContainer s_CheckboxAutoswitchWeaponsOutOfAmmo;\n+\t\tif(DoButton_CheckBox(&s_CheckboxAutoswitchWeaponsOutOfAmmo, Localize(\"Switch weapon when out of ammo\"), g_Config.m_ClAutoswitchWeaponsOutOfAmmo, &Button))\n+\t\t\tg_Config.m_ClAutoswitchWeaponsOutOfAmmo ^= 1;\n+\n+\t\t// weapon reset on death\n+\t\tLeft.HSplitTop(5.0f, 0, &Left);\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tstatic CButtonContainer s_CheckboxResetWantedWeaponOnDeath;\n+\t\tif(DoButton_CheckBox(&s_CheckboxResetWantedWeaponOnDeath, Localize(\"Reset wanted weapon on death\"), g_Config.m_ClResetWantedWeaponOnDeath, &Button))\n+\t\t\tg_Config.m_ClResetWantedWeaponOnDeath ^= 1;\n+\n+\t\t// chat messages\n+\t\tRight.HSplitTop(5.0f, 0, &Right);\n+\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\tstatic CButtonContainer s_CheckboxShowChatFriends;\n+\t\tif(DoButton_CheckBox(&s_CheckboxShowChatFriends, Localize(\"Show only chat messages from friends\"), g_Config.m_ClShowChatFriends, &Button))\n+\t\t\tg_Config.m_ClShowChatFriends ^= 1;\n+\n+\t\t// name plates\n+\t\tRight.HSplitTop(5.0f, 0, &Right);\n+\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\tstatic CButtonContainer s_CheckboxNameplates;\n+\t\tif(DoButton_CheckBox(&s_CheckboxNameplates, Localize(\"Show name above Tees\"), g_Config.m_ClNameplates, &Button))\n+\t\t\tg_Config.m_ClNameplates ^= 1;\n+\n+\t\tif(g_Config.m_ClNameplates)\n+\t\t{\n+\t\t\tRight.HSplitTop(2.5f, 0, &Right);\n+\t\t\tRight.HSplitTop(20.0f, &Label, &Right);\n+\t\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\t\tUI()->DoLabelScaled(&Label, Localize(\"Name plates size\"), 13.0f, -1);\n+\t\t\tButton.HMargin(2.0f, &Button);\n+\t\t\tstatic CButtonContainer s_Scrollbar;\n+\t\t\tg_Config.m_ClNameplatesSize = (int)(DoScrollbarH(&s_Scrollbar, &Button, g_Config.m_ClNameplatesSize/100.0f, 0, g_Config.m_ClNameplatesSize)*100.0f+0.1f);\n+\n+\t\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\t\tstatic CButtonContainer s_CheckboxNameplatesTeamcolors;\n+\t\t\tif(DoButton_CheckBox(&s_CheckboxNameplatesTeamcolors, Localize(\"Use team colors for name plates\"), g_Config.m_ClNameplatesTeamcolors, &Button))\n+\t\t\t\tg_Config.m_ClNameplatesTeamcolors ^= 1;\n+\t\t}\n+\n+\t\tRight.HSplitTop(5.0f, 0, &Right);\n+\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\tstatic CButtonContainer s_CheckboxNameplatesClan;\n+\t\tif(DoButton_CheckBox(&s_CheckboxNameplatesClan, Localize(\"Show clan above Tees\"), g_Config.m_ClNameplatesClan, &Button))\n+\t\t\tg_Config.m_ClNameplatesClan ^= 1;\n+\n+\t\tif(g_Config.m_ClNameplatesClan)\n+\t\t{\n+\t\t\tRight.HSplitTop(2.5f, 0, &Right);\n+\t\t\tRight.HSplitTop(20.0f, &Label, &Right);\n+\t\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\t\tUI()->DoLabelScaled(&Label, Localize(\"Clan plates size\"), 13.0f, -1);\n+\t\t\tButton.HMargin(2.0f, &Button);\n+\t\t\tCButtonContainer s_Scrollbar;\n+\t\t\tg_Config.m_ClNameplatesClanSize = (int)(DoScrollbarH(&s_Scrollbar, &Button, g_Config.m_ClNameplatesClanSize/100.0f, 0, g_Config.m_ClNameplatesClanSize)*100.0f+0.1f);\n+\n+\t\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\t\tstatic CButtonContainer s_CheckboxNameplatesClancolors;\n+\t\t\tif(DoButton_CheckBox(&s_CheckboxNameplatesClancolors, Localize(\"Highlight your clan\"), g_Config.m_ClNameplatesClancolors, &Button))\n+\t\t\t\tg_Config.m_ClNameplatesClancolors ^= 1;\n+\t\t}\n+\n+\t\tRight.HSplitTop(5.0f, 0, &Right);\n+\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\tstatic CButtonContainer s_CheckboxNamePlatesATH;\n+\t\tif(DoButton_CheckBox(&s_CheckboxNamePlatesATH, Localize(\"Show other ATH user\"), g_Config.m_ClNamePlatesATH, &Button))\n+\t\t\tg_Config.m_ClNamePlatesATH ^= 1;\n+\t}\n+}"
    },
    {
      "sha": "2c896fb3e78ec5e0387f47c25cd7b76a32878add",
      "filename": "src/game/client/components/menus_settings/settings_graphics.cpp",
      "status": "added",
      "additions": 275,
      "deletions": 0,
      "changes": 275,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_graphics.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_graphics.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/menus_settings/settings_graphics.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -0,0 +1,275 @@\n+#include \"../menus.h\"\n+\n+#include <engine/graphics.h>\n+\n+\n+void CMenus::RenderSettingsGraphics(CUIRect MainView)\n+{\n+\tCALLSTACK_ADD();\n+\n+\tCUIRect Button;\n+\tchar aBuf[128];\n+\tbool CheckSettings = false;\n+\n+\tstatic const int MAX_RESOLUTIONS = 256;\n+\tstatic CVideoMode s_aModes[MAX_RESOLUTIONS];\n+\tstatic int s_NumNodes = Graphics()->GetVideoModes(s_aModes, MAX_RESOLUTIONS, g_Config.m_GfxScreen);\n+\tstatic int s_GfxScreenWidth = g_Config.m_GfxScreenWidth;\n+\tstatic int s_GfxScreenHeight = g_Config.m_GfxScreenHeight;\n+\tstatic int s_GfxColorDepth = g_Config.m_GfxColorDepth;\n+\tstatic int s_GfxVsync = g_Config.m_GfxVsync;\n+\tstatic int s_GfxFsaaSamples = g_Config.m_GfxFsaaSamples;\n+\tstatic int s_GfxTextureQuality = g_Config.m_GfxTextureQuality;\n+\tstatic int s_GfxTextureCompression = g_Config.m_GfxTextureCompression;\n+\tstatic int s_GfxHighdpi = g_Config.m_GfxHighdpi;\n+\n+\tCUIRect ModeList;\n+\tMainView.VSplitLeft(300.0f, &MainView, &ModeList);\n+\n+\t// draw allmodes switch\n+\tModeList.HSplitTop(20, &Button, &ModeList);\n+\tstatic CButtonContainer s_CheckboxDisplayAllModes;\n+\tif(DoButton_CheckBox(&s_CheckboxDisplayAllModes, Localize(\"Show only supported\"), g_Config.m_GfxDisplayAllModes^1, &Button))\n+\t{\n+\t\tg_Config.m_GfxDisplayAllModes ^= 1;\n+\t\ts_NumNodes = Graphics()->GetVideoModes(s_aModes, MAX_RESOLUTIONS, g_Config.m_GfxScreen);\n+\t}\n+\n+\t// display mode list\n+\tstatic float s_ScrollValue = 0;\n+\tint OldSelected = -1;\n+\tint G = gcd(s_GfxScreenWidth, s_GfxScreenHeight);\n+\tstr_format(aBuf, sizeof(aBuf), \"%s: %dx%d %d bit (%d:%d)\", Localize(\"Current\"), s_GfxScreenWidth, s_GfxScreenHeight, s_GfxColorDepth, s_GfxScreenWidth/G, s_GfxScreenHeight/G);\n+\tstatic CButtonContainer s_Listbox;\n+\tUiDoListboxStart(&s_Listbox , &ModeList, 24.0f, Localize(\"Display Modes\"), aBuf, s_NumNodes, 1, OldSelected, s_ScrollValue);\n+\n+\tfor(int i = 0; i < s_NumNodes; ++i)\n+\t{\n+\t\tconst int Depth = s_aModes[i].m_Red+s_aModes[i].m_Green+s_aModes[i].m_Blue > 16 ? 24 : 16;\n+\t\tif(g_Config.m_GfxColorDepth == Depth &&\n+\t\t\tg_Config.m_GfxScreenWidth == s_aModes[i].m_Width &&\n+\t\t\tg_Config.m_GfxScreenHeight == s_aModes[i].m_Height)\n+\t\t{\n+\t\t\tOldSelected = i;\n+\t\t}\n+\n+\t\tCPointerContainer Container(&s_aModes[i]);\n+\t\tCListboxItem Item = UiDoListboxNextItem(&Container, OldSelected == i);\n+\t\tif(Item.m_Visible)\n+\t\t{\n+\t\t\tint G = gcd(s_aModes[i].m_Width, s_aModes[i].m_Height);\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \" %dx%d %d bit (%d:%d)\", s_aModes[i].m_Width, s_aModes[i].m_Height, Depth, s_aModes[i].m_Width/G, s_aModes[i].m_Height/G);\n+\t\t\tUI()->DoLabelScaled(&Item.m_Rect, aBuf, 16.0f, -1);\n+\t\t}\n+\t}\n+\n+\tconst int NewSelected = UiDoListboxEnd(&s_ScrollValue, 0);\n+\tif(OldSelected != NewSelected)\n+\t{\n+\t\tconst int Depth = s_aModes[NewSelected].m_Red+s_aModes[NewSelected].m_Green+s_aModes[NewSelected].m_Blue > 16 ? 24 : 16;\n+\t\tg_Config.m_GfxColorDepth = Depth;\n+\t\tg_Config.m_GfxScreenWidth = s_aModes[NewSelected].m_Width;\n+\t\tg_Config.m_GfxScreenHeight = s_aModes[NewSelected].m_Height;\n+#if defined(SDL_VIDEO_DRIVER_X11)\n+\t\tGraphics()->Resize(g_Config.m_GfxScreenWidth, g_Config.m_GfxScreenHeight);\n+#else\n+\t\tCheckSettings = true;\n+#endif\n+\t}\n+\n+\t// switches\n+\tstatic CButtonContainer s_Checkbox1, s_Checkbox2, s_Checkbox3, s_Checkbox4, s_Checkbox5, s_Checkbox6, s_Checkbox7;\n+\tMainView.VSplitRight(30.0f, &MainView, 0);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tif(DoButton_CheckBox(&s_Checkbox1, Localize(\"Borderless window\"), g_Config.m_GfxBorderless, &Button))\n+\t{\n+\t\tClient()->ToggleWindowBordered();\n+\t}\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tif(DoButton_CheckBox(&s_Checkbox2, Localize(\"Fullscreen\"), g_Config.m_GfxFullscreen, &Button))\n+\t{\n+\t\tClient()->ToggleFullscreen();\n+\t}\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tif(DoButton_CheckBox(&s_Checkbox3, Localize(\"V-Sync\"), g_Config.m_GfxVsync, &Button, Localize(\"Disable this if your game reacts too slow\")))\n+\t{\n+\t\tClient()->ToggleWindowVSync();\n+\t}\n+\n+\tif(Graphics()->GetNumScreens() > 1)\n+\t{\n+\t\tint NumScreens = Graphics()->GetNumScreens();\n+\t\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\t\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\t\tint Screen_MouseButton = DoButton_CheckBox_Number(&s_Checkbox4, Localize(\"Screen\"), g_Config.m_GfxScreen, &Button);\n+\t\tif(Screen_MouseButton == 1) //inc\n+\t\t{\n+\t\t\tClient()->SwitchWindowScreen((g_Config.m_GfxScreen+1)%NumScreens);\n+\t\t\ts_NumNodes = Graphics()->GetVideoModes(s_aModes, MAX_RESOLUTIONS, g_Config.m_GfxScreen);\n+\t\t}\n+\t\telse if(Screen_MouseButton == 2) //dec\n+\t\t{\n+\t\t\tClient()->SwitchWindowScreen((g_Config.m_GfxScreen-1+NumScreens)%NumScreens);\n+\t\t\ts_NumNodes = Graphics()->GetVideoModes(s_aModes, MAX_RESOLUTIONS, g_Config.m_GfxScreen);\n+\t\t}\n+\t}\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tint GfxFsaaSamples_MouseButton = DoButton_CheckBox_Number(&s_Checkbox5, Localize(\"FSAA samples\"), g_Config.m_GfxFsaaSamples, &Button, Localize(\"Smooths graphics at the expense of FPS\"));\n+\tif(GfxFsaaSamples_MouseButton == 1) //inc\n+\t{\n+\t\tg_Config.m_GfxFsaaSamples = (g_Config.m_GfxFsaaSamples+1)%17;\n+\t\tCheckSettings = true;\n+\t}\n+\telse if(GfxFsaaSamples_MouseButton == 2) //dec\n+\t{\n+\t\tg_Config.m_GfxFsaaSamples = (g_Config.m_GfxFsaaSamples-1 +17)%17;\n+\t\tCheckSettings = true;\n+\t}\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tif(DoButton_CheckBox(&s_Checkbox6, Localize(\"Quality Textures\"), g_Config.m_GfxTextureQuality, &Button))\n+\t{\n+\t\tg_Config.m_GfxTextureQuality ^= 1;\n+\t\tCheckSettings = true;\n+\t}\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tif(DoButton_CheckBox(&s_Checkbox7, Localize(\"Texture Compression\"), g_Config.m_GfxTextureCompression, &Button, Localize(\"Disable this if you get blurry textures\")))\n+\t{\n+\t\tg_Config.m_GfxTextureCompression ^= 1;\n+\t\tCheckSettings = true;\n+\t}\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_CheckboxHighDetail;\n+\tif(DoButton_CheckBox(&s_CheckboxHighDetail, Localize(\"High Detail\"), g_Config.m_GfxHighDetail, &Button, Localize(\"Show map decoration elements\")))\n+\t\tg_Config.m_GfxHighDetail ^= 1;\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_CheckboxLowGraphics;\n+\tif(DoButton_CheckBox(&s_CheckboxLowGraphics, Localize(\"Low Graphics Mode\"), g_Config.m_GfxLowGraphics, &Button, Localize(\"Disable fancy effects to gain more fps\")))\n+\t\tg_Config.m_GfxLowGraphics ^= 1;\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_CheckboxBackgroundRender;\n+\tif(DoButton_CheckBox(&s_CheckboxBackgroundRender, Localize(\"Render when inactive\"), g_Config.m_GfxBackgroundRender, &Button, Localize(\"Render graphics when window is in background\")))\n+\t\tg_Config.m_GfxBackgroundRender ^= 1;\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_CheckboxNoclip;\n+\tif(DoButton_CheckBox(&s_CheckboxNoclip, Localize(\"Disable clipping\"), g_Config.m_GfxNoclip, &Button, Localize(\"May kill any performance teeworlds could have. Be careful with it.\\n~ Info for nerds: GL_SCISSOR_TEST will be disabled and thus EVERYTHING will be rendered → hard laggs.\")))\n+\t\tg_Config.m_GfxNoclip ^= 1;\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_CheckboxQuadAsTriangle;\n+\tif(DoButton_CheckBox(&s_CheckboxQuadAsTriangle, Localize(\"Render quads as triangles\"), g_Config.m_GfxQuadAsTriangle, &Button, Localize(\"Fixes quad coloring on some GPUs\")))\n+\t\tg_Config.m_GfxQuadAsTriangle ^= 1;\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_CheckboxFinish;\n+\tif(DoButton_CheckBox(&s_CheckboxFinish, Localize(\"Wait for GL commands to finish\"), g_Config.m_GfxFinish, &Button, Localize(\"Can cause FPS laggs if enabled\\n~ Info for nerds: glFinish() blocks until the effects of all GL executions are complete.\")))\n+\t\tg_Config.m_GfxFinish ^= 1;\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_CheckboxHighdpi;\n+\tif(DoButton_CheckBox(&s_CheckboxHighdpi, Localize(\"High-DPI screen support\"), g_Config.m_GfxHighdpi, &Button, Localize(\"Be careful: experimental\")))\n+\t{\n+\t\tg_Config.m_GfxHighdpi ^= 1;\n+\t\tCheckSettings = true;\n+\t}\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_CheckboxConsoleCPU;\n+\tif(DoButton_CheckBox(&s_CheckboxConsoleCPU, Localize(\"Low CPU usage console\"), g_Config.m_ClConsoleLowCPU, &Button, Localize(\"Limits FPS while console is open in order to lower our CPU usage\")))\n+\t\tg_Config.m_ClConsoleLowCPU ^= 1;\n+\n+\n+\t// check if the new settings require a restart\n+\tif(CheckSettings)\n+\t{\n+\t\tif(s_GfxScreenWidth == g_Config.m_GfxScreenWidth &&\n+\t\t\ts_GfxScreenHeight == g_Config.m_GfxScreenHeight &&\n+\t\t\ts_GfxColorDepth == g_Config.m_GfxColorDepth &&\n+\t\t\ts_GfxVsync == g_Config.m_GfxVsync &&\n+\t\t\ts_GfxFsaaSamples == g_Config.m_GfxFsaaSamples &&\n+\t\t\ts_GfxTextureQuality == g_Config.m_GfxTextureQuality &&\n+\t\t\ts_GfxTextureCompression == g_Config.m_GfxTextureCompression &&\n+\t\t\ts_GfxHighdpi == g_Config.m_GfxHighdpi)\n+\t\t\tm_NeedRestartGraphics = false;\n+\t\telse\n+\t\t\tm_NeedRestartGraphics = true;\n+\t}\n+\n+\tCUIRect Text;\n+\tMainView.HSplitTop(20.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Text, &MainView);\n+\t//text.VSplitLeft(15.0f, 0, &text);\n+\t{\n+\t\tCUIRect temp;\n+\t\ttemp = Text;\n+\t\ttemp.y -= 2.5f*1.5f;\n+\t\ttemp.h = 21.0f*5+2.75f;\n+\t\tRenderTools()->DrawUIRect(&temp, vec4(0,0,0,0.2f), CUI::CORNER_ALL, 5.0f);\n+\t}\n+\tText.VMargin(15.0f, &Text);\n+\tUI()->DoLabelScaled(&Text, Localize(\"UI Color\"), 14.0f, -1);\n+\n+\tconst char *paLabels[] = {\n+\t\tLocalize(\"Hue\"),\n+\t\tLocalize(\"Sat.\"),\n+\t\tLocalize(\"Lht.\"),\n+\t\tLocalize(\"Alpha\")};\n+\tint *pColorSlider[4] = {&g_Config.m_UiColorHue, &g_Config.m_UiColorSat, &g_Config.m_UiColorLht, &g_Config.m_UiColorAlpha};\n+\tfor(int s = 0; s < 4; s++)\n+\t{\n+\t\tCUIRect Text;\n+\t\tMainView.HSplitTop(19.0f, &Button, &MainView);\n+\t\tButton.VMargin(15.0f, &Button);\n+\t\tButton.VSplitLeft(100.0f, &Text, &Button);\n+\t\t//Button.VSplitRight(5.0f, &Button, 0);\n+\t\tButton.HSplitTop(4.0f, 0, &Button);\n+\n+\t\tfloat k = (*pColorSlider[s]) / 255.0f;\n+\t\tCPointerContainer Container(pColorSlider[s]);\n+\t\tk = DoScrollbarH(&Container, &Button, k, 0, k*255.0f);\n+\t\t*pColorSlider[s] = (int)(k*255.0f);\n+\t\tUI()->DoLabelScaled(&Text, paLabels[s], 15.0f, -1);\n+\t}\n+\n+\tMainView.HSplitTop(20.0f, 0, &MainView);\n+\n+\tMainView.HSplitTop(20.0f+10.0f+15.0f, &Text, 0);\n+\tText.HMargin(-2.75f, &Text);\n+\tText.h += 2.75f;\n+\tRenderTools()->DrawUIRect(&Text, vec4(0,0,0,0.2f), CUI::CORNER_ALL, 5.0f);\n+\n+\tMainView.VMargin(15.0f, &MainView);\n+\tMainView.HSplitTop(20.0f, &Text, &MainView);\n+\tUI()->DoLabelScaled(&Text, Localize(\"UI Scale\"), 14.0f, -1);\n+\n+\tMainView.HSplitTop(10.0f, 0, &MainView);\n+\tMainView.HSplitTop(15.0f, &Text, &MainView);\n+\tstatic CButtonContainer s_Scrollbar;\n+\tstatic int s_NewVal = g_Config.m_UiScale; // proxy it to not instantly change the ui size\n+\tif(g_Config.m_UiScale != s_NewVal && UI()->ActiveItem() != (void*)&s_Scrollbar) // if it has been changed in f1\n+\t\ts_NewVal = g_Config.m_UiScale;\n+\ts_NewVal = round_to_int(50.0f+100.0f*DoScrollbarH(&s_Scrollbar, &Text, ((float)s_NewVal-50.0f)/100.0f, Localize(\"READ BEFORE CHANGING:\\nIf you happen to mess it up so that this slider\\nis not on your screen anymore, type in f1:\\nui_scale 100\"), s_NewVal));\n+\tif(UI()->ActiveItem() != (void*)&s_Scrollbar)\n+\t\tg_Config.m_UiScale = s_NewVal;\n+}"
    },
    {
      "sha": "62261c847a69ba4ce56cf63b182aa47391a690c3",
      "filename": "src/game/client/components/menus_settings/settings_hud.cpp",
      "status": "added",
      "additions": 567,
      "deletions": 0,
      "changes": 567,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_hud.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_hud.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/menus_settings/settings_hud.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -0,0 +1,567 @@\n+#include \"../menus.h\"\n+\n+#include <engine/graphics.h>\n+#include <engine/textrender.h>\n+#include <game/generated/client_data.h>\n+\n+\n+void CMenus::RenderSettingsHUDGeneral(CUIRect MainView)\n+{\n+\tCUIRect Left, Right, HUD, Button, Label;\n+\tMainView.HSplitTop(150.0f, &HUD, &MainView);\n+\n+\tHUD.HSplitTop(30.0f, &Label, &HUD);\n+\tUI()->DoLabelScaled(&Label, Localize(\"HUD\"), 20.0f, -1);\n+\tHUD.Margin(5.0f, &HUD);\n+\tHUD.VSplitMid(&Left, &Right);\n+\tLeft.VSplitRight(5.0f, &Left, 0);\n+\tRight.VMargin(5.0f, &Right);\n+\n+\t// show hud\n+\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\tstatic CButtonContainer s_CheckboxShowhud;\n+\tif(DoButton_CheckBox(&s_CheckboxShowhud, Localize(\"Show ingame HUD\"), g_Config.m_ClShowhud, &Button))\n+\t\tg_Config.m_ClShowhud ^= 1;\n+\n+\n+\tLeft.HSplitTop(3.0f, 0, &Left);\n+\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\tstatic CButtonContainer s_CheckboxDDRaceScoreBoard;\n+\tif (DoButton_CheckBox(&s_CheckboxDDRaceScoreBoard, Localize(\"Use DDRace Scoreboard\"), g_Config.m_ClDDRaceScoreBoard, &Button))\n+\t{\n+\t\tg_Config.m_ClDDRaceScoreBoard ^= 1;\n+\t}\n+\n+\t{\n+\t\tCUIRect Second;\n+\t\tLeft.HSplitTop(3.0f, 0, &Left);\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tButton.VSplitMid(&Button, &Second);\n+\t\tButton.w -= 2.5f; Second.w -= 2.5f;\n+\t\tSecond.x += 2.5f;\n+\t\tstatic CButtonContainer s_CheckboxShowIDsScoreboard;\n+\t\tif (DoButton_CheckBox(&s_CheckboxShowIDsScoreboard, Localize(\"Show IDs in Scoreboard\"), g_Config.m_ClShowIDsScoreboard, &Button))\n+\t\t{\n+\t\t\tg_Config.m_ClShowIDsScoreboard ^= 1;\n+\t\t}\n+\n+\t\tstatic CButtonContainer s_CheckboxShowIDsChat;\n+\t\tif (DoButton_CheckBox(&s_CheckboxShowIDsChat, Localize(\"Show IDs in Chat\"), g_Config.m_ClShowIDsChat, &Second))\n+\t\t{\n+\t\t\tg_Config.m_ClShowIDsChat ^= 1;\n+\t\t}\n+\t}\n+\n+\tRight.HSplitTop(3.0f, 0, &Right);\n+\tRight.HSplitTop(20.0f, &Button, &Right);\n+\tstatic CButtonContainer s_CheckboxShowhudScore;\n+\tif (DoButton_CheckBox(&s_CheckboxShowhudScore, Localize(\"Show score\"), g_Config.m_ClShowhudScore, &Button))\n+\t{\n+\t\tg_Config.m_ClShowhudScore ^= 1;\n+\t}\n+\n+\tRight.HSplitTop(3.0f, 0, &Right);\n+\tRight.HSplitTop(20.0f, &Button, &Right);\n+\tstatic CButtonContainer s_CheckboxShowhudHealthAmmo;\n+\tif (DoButton_CheckBox(&s_CheckboxShowhudHealthAmmo, Localize(\"Show health + ammo\"), g_Config.m_ClShowhudHealthAmmo, &Button))\n+\t{\n+\t\tg_Config.m_ClShowhudHealthAmmo ^= 1;\n+\t}\n+\n+\tif(g_Config.m_ClShowhudHealthAmmo)\n+\t{\n+\t\tRight.HSplitTop(3.0f, 0, &Right);\n+\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\tButton.VSplitLeft(10.0f, 0, &Button);\n+\t\tstatic CButtonContainer s_CheckboxShowhudHealthAmmoBars;\n+\t\tchar aLabel[128];\n+\t\tif(g_Config.m_ClShowhudMode == 0)\n+\t\t\tstr_format(aLabel, sizeof(aLabel), \"Mode: vanilla\");\n+\t\tif(g_Config.m_ClShowhudMode == 1)\n+\t\t\tstr_format(aLabel, sizeof(aLabel), \"Mode: bars\");\n+\t\tif(g_Config.m_ClShowhudMode == 2)\n+\t\t\tstr_format(aLabel, sizeof(aLabel), \"Mode: numbers\");\n+\t\tint ButtonUsed = DoButton_CheckBox_Number(&s_CheckboxShowhudHealthAmmoBars, aLabel, g_Config.m_ClShowhudMode, &Button);\n+\t\tif(ButtonUsed == 1)\n+\t\t{\n+\t\t\tg_Config.m_ClShowhudMode = (g_Config.m_ClShowhudMode + 1) % 3;\n+\t\t}\n+\t\telse if(ButtonUsed == 2)\n+\t\t{\n+\t\t\tg_Config.m_ClShowhudMode = (g_Config.m_ClShowhudMode + 3 - 1) % 3;\n+\t\t}\n+\t}\n+\n+\tLeft.HSplitTop(3.0f, 0, &Left);\n+\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\tstatic CButtonContainer s_CheckboxShowChat;\n+\tif (DoButton_CheckBox(&s_CheckboxShowChat, Localize(\"Show chat\"), g_Config.m_ClShowChat, &Button))\n+\t{\n+\t\tg_Config.m_ClShowChat ^= 1;\n+\t}\n+\n+\tif(g_Config.m_ClShowChat)\n+\t{\n+\t\tLeft.HSplitTop(3.0f, 0, &Left);\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tButton.VSplitLeft(10.0f, 0, &Button);\n+\t\tstatic CButtonContainer s_CheckboxChatTeamColors;\n+\t\tif(DoButton_CheckBox(&s_CheckboxChatTeamColors, Localize(\"Show names in chat in team colors\"), g_Config.m_ClChatTeamColors, &Button))\n+\t\t{\n+\t\t\tg_Config.m_ClChatTeamColors ^= 1;\n+\t\t}\n+\t}\n+\n+\tLeft.HSplitTop(3.0f, 0, &Left);\n+\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\tstatic CButtonContainer s_CheckboxShowKillMessages;\n+\tif (DoButton_CheckBox(&s_CheckboxShowKillMessages, Localize(\"Show kill messages\"), g_Config.m_ClShowKillMessages, &Button))\n+\t{\n+\t\tg_Config.m_ClShowKillMessages ^= 1;\n+\t}\n+\n+\tRight.HSplitTop(3.0f, 0, &Right);\n+\tRight.HSplitTop(20.0f, &Button, &Right);\n+\tstatic CButtonContainer s_CheckboxShowVotesAfterVoting;\n+\tif (DoButton_CheckBox(&s_CheckboxShowVotesAfterVoting, Localize(\"Show votes window after voting\"), g_Config.m_ClShowVotesAfterVoting, &Button))\n+\t{\n+\t\tg_Config.m_ClShowVotesAfterVoting ^= 1;\n+\t}\n+\n+\tRight.HSplitTop(3.0f, 0, &Right);\n+\tRight.HSplitTop(20.0f, &Button, &Right);\n+\tstatic CButtonContainer s_CheckboxNotifications;\n+\tif (DoButton_CheckBox(&s_CheckboxNotifications, Localize(\"Show notifications\"), g_Config.m_ClNotifications, &Button))\n+\t{\n+\t\tg_Config.m_ClNotifications ^= 1;\n+\t}\n+\n+\tRight.HSplitTop(3.0f, 0, &Right);\n+\tRight.HSplitTop(20.0f, &Button, &Right);\n+\tstatic CButtonContainer s_CheckboxChatbox;\n+\tif (DoButton_CheckBox(&s_CheckboxChatbox, Localize(\"Show chatbox\"), g_Config.m_ClShowhudChatbox > 0, &Button))\n+\t{\n+\t\tg_Config.m_ClShowhudChatbox = g_Config.m_ClShowhudChatbox ? 0 : 34;\n+\t}\n+\n+\tif(g_Config.m_ClShowhudChatbox)\n+\t{\n+\t\tRight.HSplitTop(3.0f, 0, &Right);\n+\t\tRight.HSplitTop(15.0f, &Button, &Right);\n+\t\tButton.VSplitLeft(10.0f, 0, &Button);\n+\t\tstatic CButtonContainer s_Scrollbar;\n+\t\tg_Config.m_ClShowhudChatbox = round_to_int(DoScrollbarH(&s_Scrollbar, &Button, ((float)g_Config.m_ClShowhudChatbox-1.0f)/99.0f, Localize(\"Chatbox Alpha\"), g_Config.m_ClShowhudChatbox)*99+1);\n+\t}\n+\n+\n+}\n+\n+void CMenus::RenderSettingsHUDColors(CUIRect MainView)\n+{\n+\tCUIRect Left, Right, Button, Label, Messages, Weapon, Laser;\n+\tMainView.HSplitTop(170.0f, &Messages, &MainView);\n+\tMessages.HSplitTop(30.0f, &Label, &Messages);\n+\tLabel.VSplitMid(&Label, &Button);\n+\tUI()->DoLabelScaled(&Label, Localize(\"Messages\"), 20.0f, -1);\n+\tMessages.Margin(5.0f, &Messages);\n+\tMessages.VSplitMid(&Left, &Right);\n+\tLeft.VSplitRight(5.0f, &Left, 0);\n+\tRight.VMargin(5.0f, &Right);\n+\t{\n+\t\tchar aBuf[64];\n+\t\tLeft.HSplitTop(20.0f, &Label, &Left);\n+\t\tLabel.VSplitRight(50.0f, &Label, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"System message\"), 16.0f, -1);\n+\t\t{\n+\t\t\tstatic CButtonContainer s_DefaultButton;\n+\t\t\tvec3 HSL = RgbToHsl(vec3(1.0f, 1.0f, 0.5f)); // default values\n+\t\t\tif(((int)HSL.h != g_Config.m_ClMessageSystemHue) || ((int)HSL.s != g_Config.m_ClMessageSystemSat) || ((int)HSL.l != g_Config.m_ClMessageSystemLht))\n+\t\t\tif (DoButton_Menu(&s_DefaultButton, Localize(\"Reset\"), 0, &Button))\n+\t\t\t{\n+\t\t\t\tg_Config.m_ClMessageSystemHue = (int)HSL.h;\n+\t\t\t\tg_Config.m_ClMessageSystemSat = (int)HSL.s;\n+\t\t\t\tg_Config.m_ClMessageSystemLht = (int)HSL.l;\n+\t\t\t}\n+\t\t}\n+\t\tstatic CButtonContainer s_Scrollbar1, s_Scrollbar2, s_Scrollbar3;\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tButton.VSplitLeft(15.0f, 0, &Button);\n+\t\tButton.VSplitLeft(100.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Hue\"), 14.0f, -1);\n+\t\tg_Config.m_ClMessageSystemHue = (int)(DoScrollbarH(&s_Scrollbar1, &Button, g_Config.m_ClMessageSystemHue / 255.0f, 0, g_Config.m_ClMessageSystemHue)*255.0f);\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tButton.VSplitLeft(15.0f, 0, &Button);\n+\t\tButton.VSplitLeft(100.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Sat.\"), 14.0f, -1);\n+\t\tg_Config.m_ClMessageSystemSat = (int)(DoScrollbarH(&s_Scrollbar2, &Button, g_Config.m_ClMessageSystemSat / 255.0f, 0, g_Config.m_ClMessageSystemSat)*255.0f);\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tButton.VSplitLeft(15.0f, 0, &Button);\n+\t\tButton.VSplitLeft(100.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Lht.\"), 14.0f, -1);\n+\t\tg_Config.m_ClMessageSystemLht = (int)(DoScrollbarH(&s_Scrollbar3, &Button, g_Config.m_ClMessageSystemLht / 255.0f, 0, g_Config.m_ClMessageSystemLht)*255.0f);\n+\n+\t\tLeft.HSplitTop(10.0f, &Label, &Left);\n+\n+\t\tvec3 rgb = HslToRgb(vec3(g_Config.m_ClMessageSystemHue / 255.0f, g_Config.m_ClMessageSystemSat / 255.0f, g_Config.m_ClMessageSystemLht / 255.0f));\n+\t\tTextRender()->TextColor(rgb.r, rgb.g, rgb.b, 1.0f);\n+\n+\n+\t\tchar aName[16];\n+\t\tstr_copy(aName, g_Config.m_PlayerName, sizeof(aName));\n+\t\tstr_format(aBuf, sizeof(aBuf), \"*** '%s' entered and joined the spectators\", aName);\n+\t\twhile (TextRender()->TextWidth(0, 12.0f, aBuf, -1) > Label.w)\n+\t\t{\n+\t\t\taName[str_length(aName) - 1] = 0;\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"*** '%s' entered and joined the spectators\", aName);\n+\t\t}\n+\t\tUI()->DoLabelScaled(&Label, aBuf, 12.0f, -1);\n+\t\tTextRender()->TextColor(1.0f, 1.0f, 1.0f, 1.0f);\n+\t\tLeft.HSplitTop(20.0f, 0, &Left);\n+\t}\n+\t{\n+\t\tchar aBuf[64];\n+\t\tRight.HSplitTop(20.0f, &Label, &Right);\n+\t\tLabel.VSplitRight(50.0f, &Label, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Highlighted message\"), 16.0f, -1);\n+\t\t{\n+\t\t\tstatic CButtonContainer s_DefaultButton;\n+\t\t\tvec3 HSL = RgbToHsl(vec3(1.0f, 0.5f, 0.5f)); // default values\n+\t\t\tif(((int)HSL.h != g_Config.m_ClMessageHighlightHue) || ((int)HSL.s != g_Config.m_ClMessageHighlightSat) || ((int)HSL.l != g_Config.m_ClMessageHighlightLht))\n+\t\t\tif (DoButton_Menu(&s_DefaultButton, Localize(\"Reset\"), 0, &Button))\n+\t\t\t{\n+\t\t\t\tg_Config.m_ClMessageHighlightHue = (int)HSL.h;\n+\t\t\t\tg_Config.m_ClMessageHighlightSat = (int)HSL.s;\n+\t\t\t\tg_Config.m_ClMessageHighlightLht = (int)HSL.l;\n+\t\t\t}\n+\t\t}\n+\t\tstatic CButtonContainer s_Scrollbar1, s_Scrollbar2, s_Scrollbar3;\n+\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\tButton.VSplitLeft(15.0f, 0, &Button);\n+\t\tButton.VSplitLeft(100.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Hue\"), 14.0f, -1);\n+\t\tg_Config.m_ClMessageHighlightHue = (int)(DoScrollbarH(&s_Scrollbar1, &Button, g_Config.m_ClMessageHighlightHue / 255.0f, 0, g_Config.m_ClMessageHighlightHue)*255.0f);\n+\n+\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\tButton.VSplitLeft(15.0f, 0, &Button);\n+\t\tButton.VSplitLeft(100.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Sat.\"), 14.0f, -1);\n+\t\tg_Config.m_ClMessageHighlightSat = (int)(DoScrollbarH(&s_Scrollbar2, &Button, g_Config.m_ClMessageHighlightSat / 255.0f, 0, g_Config.m_ClMessageHighlightSat)*255.0f);\n+\n+\t\tRight.HSplitTop(20.0f, &Button, &Right);\n+\t\tButton.VSplitLeft(15.0f, 0, &Button);\n+\t\tButton.VSplitLeft(100.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Lht.\"), 14.0f, -1);\n+\t\tg_Config.m_ClMessageHighlightLht = (int)(DoScrollbarH(&s_Scrollbar3, &Button, g_Config.m_ClMessageHighlightLht / 255.0f, 0, g_Config.m_ClMessageHighlightLht)*255.0f);\n+\n+\t\tRight.HSplitTop(10.0f, &Label, &Right);\n+\n+\t\tTextRender()->TextColor(0.75f, 0.5f, 0.75f, 1.0f);\n+\t\tfloat tw = TextRender()->TextWidth(0, 12.0f, Localize(\"Spectator\"), -1);\n+\t\tLabel.VSplitLeft(tw, &Label, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Spectator\"), 12.0f, -1);\n+\n+\t\tvec3 rgb = HslToRgb(vec3(g_Config.m_ClMessageHighlightHue / 255.0f, g_Config.m_ClMessageHighlightSat / 255.0f, g_Config.m_ClMessageHighlightLht / 255.0f));\n+\t\tTextRender()->TextColor(rgb.r, rgb.g, rgb.b, 1.0f);\n+\t\tchar name[16];\n+\t\tstr_copy(name, g_Config.m_PlayerName, sizeof(name));\n+\t\tstr_format(aBuf, sizeof(aBuf), \": %s: %s\", name, Localize (\"Look out!\"));\n+\t\twhile (TextRender()->TextWidth(0, 12.0f, aBuf, -1) > Button.w)\n+\t\t{\n+\t\t\tname[str_length(name) - 1] = 0;\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \": %s: %s\", name, Localize(\"Look out!\"));\n+\t\t}\n+\t\tUI()->DoLabelScaled(&Button, aBuf, 12.0f, -1);\n+\n+\t\tTextRender()->TextColor(1.0f, 1.0f, 1.0f, 1.0f);\n+\t\tRight.HSplitTop(20.0f, 0, &Right);\n+\t}\n+\t{\n+\t\tchar aBuf[64];\n+\t\tLeft.HSplitTop(20.0f, &Label, &Left);\n+\t\tLabel.VSplitRight(50.0f, &Label, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Team message\"), 16.0f, -1);\n+\t\t{\n+\t\t\tvec3 HSL = RgbToHsl(vec3(0.65f, 1.0f, 0.65f)); // default values\n+\t\t\tstatic CButtonContainer s_DefaultButton;\n+\t\t\tif(((int)HSL.h != g_Config.m_ClMessageTeamHue) || ((int)HSL.s != g_Config.m_ClMessageTeamSat) || ((int)HSL.l != g_Config.m_ClMessageTeamLht))\n+\t\t\tif (DoButton_Menu(&s_DefaultButton, Localize(\"Reset\"), 0, &Button))\n+\t\t\t{\n+\t\t\t\tg_Config.m_ClMessageTeamHue = (int)HSL.h;\n+\t\t\t\tg_Config.m_ClMessageTeamSat = (int)HSL.s;\n+\t\t\t\tg_Config.m_ClMessageTeamLht = (int)HSL.l;\n+\t\t\t}\n+\t\t}\n+\t\tstatic CButtonContainer s_Scrollbar1, s_Scrollbar2, s_Scrollbar3;\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tButton.VSplitLeft(15.0f, 0, &Button);\n+\t\tButton.VSplitLeft(100.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Hue\"), 14.0f, -1);\n+\t\tg_Config.m_ClMessageTeamHue = (int)(DoScrollbarH(&s_Scrollbar1, &Button, g_Config.m_ClMessageTeamHue / 255.0f, 0, g_Config.m_ClMessageTeamHue)*255.0f);\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tButton.VSplitLeft(15.0f, 0, &Button);\n+\t\tButton.VSplitLeft(100.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Sat.\"), 14.0f, -1);\n+\t\tg_Config.m_ClMessageTeamSat = (int)(DoScrollbarH(&s_Scrollbar2, &Button, g_Config.m_ClMessageTeamSat / 255.0f, 0, g_Config.m_ClMessageTeamSat)*255.0f);\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tButton.VSplitLeft(15.0f, 0, &Button);\n+\t\tButton.VSplitLeft(100.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Lht.\"), 14.0f, -1);\n+\t\tg_Config.m_ClMessageTeamLht = (int)(DoScrollbarH(&s_Scrollbar3, &Button, g_Config.m_ClMessageTeamLht / 255.0f, 0, g_Config.m_ClMessageTeamLht)*255.0f);\n+\n+\t\tLeft.HSplitTop(10.0f, &Label, &Left);\n+\n+\t\tTextRender()->TextColor(0.45f, 0.9f, 0.45f, 1.0f);\n+\t\tfloat tw = TextRender()->TextWidth(0, 12.0f, Localize(\"Player\"), -1);\n+\t\tLabel.VSplitLeft(tw, &Label, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Player\"), 12.0f, -1);\n+\n+\t\tvec3 rgb = HslToRgb(vec3(g_Config.m_ClMessageTeamHue / 255.0f, g_Config.m_ClMessageTeamSat / 255.0f, g_Config.m_ClMessageTeamLht / 255.0f));\n+\t\tTextRender()->TextColor(rgb.r, rgb.g, rgb.b, 1.0f);\n+\t\tstr_format(aBuf, sizeof(aBuf), \": %s!\",  Localize(\"We will win\"));\n+\t\tUI()->DoLabelScaled(&Button, aBuf, 12.0f, -1);\n+\n+\t\tTextRender()->TextColor(1.0f, 1.0f, 1.0f, 1.0f);\n+\t\tLeft.HSplitTop(20.0f, 0, &Left);\n+\t}\n+\t{\n+\t\tchar aBuf[64];\n+\t\tLeft.HSplitTop(20.0f, &Label, &Left);\n+\t\tLabel.VSplitRight(50.0f, &Label, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Normal message\"), 16.0f, -1);\n+\t\t{\n+\t\t\tstatic CButtonContainer s_DefaultButton;\n+\t\t\tvec3 HSL = RgbToHsl(vec3(1.0f, 1.0f, 1.0f)); // default values\n+\t\t\tif(((int)HSL.h != g_Config.m_ClMessageHue) || ((int)HSL.s != g_Config.m_ClMessageSat) || ((int)HSL.l != g_Config.m_ClMessageLht))\n+\t\t\tif (DoButton_Menu(&s_DefaultButton, Localize(\"Reset\"), 0, &Button))\n+\t\t\t{\n+\t\t\t\tg_Config.m_ClMessageHue = (int)HSL.h;\n+\t\t\t\tg_Config.m_ClMessageSat = (int)HSL.s;\n+\t\t\t\tg_Config.m_ClMessageLht = (int)HSL.l;\n+\t\t\t}\n+\t\t}\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tButton.VSplitLeft(15.0f, 0, &Button);\n+\t\tButton.VSplitLeft(100.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Hue\"), 14.0f, -1);\n+\t\tstatic CButtonContainer s_ScrollbarMsgHue;\n+\t\tg_Config.m_ClMessageHue = (int)(DoScrollbarH(&s_ScrollbarMsgHue, &Button, g_Config.m_ClMessageHue / 255.0f, 0, g_Config.m_ClMessageHue)*255.0f);\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tButton.VSplitLeft(15.0f, 0, &Button);\n+\t\tButton.VSplitLeft(100.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Sat.\"), 14.0f, -1);\n+\t\tstatic CButtonContainer s_ScrollbarMsgSat;\n+\t\tg_Config.m_ClMessageSat = (int)(DoScrollbarH(&s_ScrollbarMsgSat, &Button, g_Config.m_ClMessageSat / 255.0f, 0, g_Config.m_ClMessageSat)*255.0f);\n+\t\tLeft.HSplitTop(20.0f, &Button, &Left);\n+\t\tButton.VSplitLeft(15.0f, 0, &Button);\n+\t\tButton.VSplitLeft(100.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Lht.\"), 14.0f, -1);\n+\t\tstatic CButtonContainer s_ScrollbarMsgLht;\n+\t\tg_Config.m_ClMessageLht = (int)(DoScrollbarH(&s_ScrollbarMsgLht, &Button, g_Config.m_ClMessageLht / 255.0f, 0, g_Config.m_ClMessageLht)*255.0f);\n+\n+\t\tLeft.HSplitTop(10.0f, &Label, &Left);\n+\n+\t\tTextRender()->TextColor(0.8f, 0.8f, 0.8f, 1.0f);\n+\t\tfloat tw = TextRender()->TextWidth(0, 12.0f, Localize(\"Player\"), -1);\n+\t\tLabel.VSplitLeft(tw, &Label, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Player\"), 12.0f, -1);\n+\n+\t\tvec3 rgb = HslToRgb(vec3(g_Config.m_ClMessageHue / 255.0f, g_Config.m_ClMessageSat / 255.0f, g_Config.m_ClMessageLht / 255.0f));\n+\t\tTextRender()->TextColor(rgb.r, rgb.g, rgb.b, 1.0f);\n+\t\tstr_format(aBuf, sizeof(aBuf), \": %s :D\", Localize(\"Hello and welcome\"));\n+\t\tUI()->DoLabelScaled(&Button, aBuf, 12.0f, -1);\n+\n+\t\tTextRender()->TextColor(1.0f, 1.0f, 1.0f, 1.0f);\n+\t}\n+\t{\n+\t\tRight.HSplitTop(220.0f, &Laser, &Right);\n+\t\tRenderTools()->DrawUIRect(&Laser, vec4(1.0f, 1.0f, 1.0f, 0.1f), CUI::CORNER_ALL, 5.0f);\n+\t\tLaser.Margin(10.0f, &Laser);\n+\t\tLaser.HSplitTop(30.0f, &Label, &Laser);\n+\t\tLabel.VSplitLeft(TextRender()->TextWidth(0, 20.0f, Localize(\"Laser\"), -1) + 5.0f, &Label, &Weapon);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Laser\"), 20.0f, -1);\n+\n+\t\tLaser.HSplitTop(20.0f, &Label, &Laser);\n+\t\tLabel.VSplitLeft(5.0f, 0, &Label);\n+\t\tLabel.VSplitRight(50.0f, &Label, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Inner color\"), 16.0f, -1);\n+\t\t{\n+\t\t\tstatic CButtonContainer s_DefaultButton;\n+\t\t\tvec3 HSL = RgbToHsl(vec3(0.5f, 0.5f, 1.0f)); // default values\n+\t\t\tif(((int)HSL.h != g_Config.m_ClLaserInnerHue) || ((int)HSL.s != g_Config.m_ClLaserInnerSat) || ((int)HSL.l != g_Config.m_ClLaserInnerLht))\n+\t\t\tif (DoButton_Menu(&s_DefaultButton, Localize(\"Reset\"), 0, &Button))\n+\t\t\t{\n+\t\t\t\tg_Config.m_ClLaserInnerHue = (int)HSL.h;\n+\t\t\t\tg_Config.m_ClLaserInnerSat = (int)HSL.s;\n+\t\t\t\tg_Config.m_ClLaserInnerLht = (int)HSL.l;\n+\t\t\t}\n+\t\t}\n+\n+\t\tLaser.HSplitTop(20.0f, &Button, &Laser);\n+\t\tButton.VSplitLeft(20.0f, 0, &Button);\n+\t\tButton.VSplitLeft(100.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Hue\"), 12.0f, -1);\n+\t\tstatic CButtonContainer s_ScrollbarLaserInnerHue;\n+\t\tg_Config.m_ClLaserInnerHue = (int)(DoScrollbarH(&s_ScrollbarLaserInnerHue, &Button, g_Config.m_ClLaserInnerHue / 255.0f, 0, g_Config.m_ClLaserInnerHue)*255.0f);\n+\t\tLaser.HSplitTop(20.0f, &Button, &Laser);\n+\t\tButton.VSplitLeft(20.0f, 0, &Button);\n+\t\tButton.VSplitLeft(100.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Sat.\"), 12.0f, -1);\n+\t\tstatic CButtonContainer s_ScrollbarLaserInnerSat;\n+\t\tg_Config.m_ClLaserInnerSat = (int)(DoScrollbarH(&s_ScrollbarLaserInnerSat, &Button, g_Config.m_ClLaserInnerSat / 255.0f, 0, g_Config.m_ClLaserInnerSat)*255.0f);\n+\t\tLaser.HSplitTop(20.0f, &Button, &Laser);\n+\t\tButton.VSplitLeft(20.0f, 0, &Button);\n+\t\tButton.VSplitLeft(100.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Lht.\"), 12.0f, -1);\n+\t\tstatic CButtonContainer s_ScrollbarLaserInnerLht;\n+\t\tg_Config.m_ClLaserInnerLht = (int)(DoScrollbarH(&s_ScrollbarLaserInnerLht, &Button, g_Config.m_ClLaserInnerLht / 255.0f, 0, g_Config.m_ClLaserInnerLht)*255.0f);\n+\n+\t\tLaser.HSplitTop(10.0f, 0, &Laser);\n+\n+\t\tLaser.HSplitTop(20.0f, &Label, &Laser);\n+\t\tLabel.VSplitLeft(5.0f, 0, &Label);\n+\t\tLabel.VSplitRight(50.0f, &Label, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Outline color\"), 16.0f, -1);\n+\t\t{\n+\t\t\tstatic CButtonContainer s_DefaultButton;\n+\t\t\tvec3 HSL = RgbToHsl(vec3(0.075f, 0.075f, 0.25f)); // default values\n+\t\t\tif(((int)HSL.h != g_Config.m_ClLaserOutlineHue) || ((int)HSL.s != g_Config.m_ClLaserOutlineSat) || ((int)HSL.l != g_Config.m_ClLaserOutlineLht))\n+\t\t\tif (DoButton_Menu(&s_DefaultButton, Localize(\"Reset\"), 0, &Button))\n+\t\t\t{\n+\t\t\t\tg_Config.m_ClLaserOutlineHue = (int)HSL.h;\n+\t\t\t\tg_Config.m_ClLaserOutlineSat = (int)HSL.s;\n+\t\t\t\tg_Config.m_ClLaserOutlineLht = (int)HSL.l;\n+\t\t\t}\n+\t\t}\n+\n+\t\tLaser.HSplitTop(20.0f, &Button, &Laser);\n+\t\tButton.VSplitLeft(15.0f, 0, &Button);\n+\t\tButton.VSplitLeft(100.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Hue\"), 12.0f, -1);\n+\t\tstatic CButtonContainer s_ScrollbarLaserOutlineHue;\n+\t\tg_Config.m_ClLaserOutlineHue = (int)(DoScrollbarH(&s_ScrollbarLaserOutlineHue, &Button, g_Config.m_ClLaserOutlineHue / 255.0f, 0, g_Config.m_ClLaserOutlineHue)*255.0f);\n+\t\tLaser.HSplitTop(20.0f, &Button, &Laser);\n+\t\tButton.VSplitLeft(15.0f, 0, &Button);\n+\t\tButton.VSplitLeft(100.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Sat.\"), 12.0f, -1);\n+\t\tstatic CButtonContainer s_ScrollbarLaserOutlineSat;\n+\t\tg_Config.m_ClLaserOutlineSat = (int)(DoScrollbarH(&s_ScrollbarLaserOutlineSat, &Button, g_Config.m_ClLaserOutlineSat / 255.0f, 0, g_Config.m_ClLaserOutlineSat)*255.0f);\n+\t\tLaser.HSplitTop(20.0f, &Button, &Laser);\n+\t\tButton.VSplitLeft(15.0f, 0, &Button);\n+\t\tButton.VSplitLeft(100.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Lht.\"), 12.0f, -1);\n+\t\tstatic CButtonContainer s_ScrollbarLaserOutlineLht;\n+\t\tg_Config.m_ClLaserOutlineLht = (int)(DoScrollbarH(&s_ScrollbarLaserOutlineLht, &Button, g_Config.m_ClLaserOutlineLht / 255.0f, 0, g_Config.m_ClLaserOutlineLht)*255.0f);\n+\n+\n+\t\t//Laser.HSplitTop(8.0f, &Weapon, &Laser);\n+\t\tWeapon.VSplitLeft(30.0f, 0, &Weapon);\n+\n+\t\tvec3 RGB;\n+\t\tvec2 From = vec2(Weapon.x, Weapon.y + Weapon.h / 2.0f);\n+\t\tvec2 Pos = vec2(Weapon.x + Weapon.w - 10.0f, Weapon.y + Weapon.h / 2.0f);\n+\n+\t\tvec2 Out, Border;\n+\n+\t\tGraphics()->BlendNormal();\n+\t\tGraphics()->TextureSet(-1);\n+\t\tGraphics()->QuadsBegin();\n+\n+\t\t// do outline\n+\t\tRGB = HslToRgb(vec3(g_Config.m_ClLaserOutlineHue / 255.0f, g_Config.m_ClLaserOutlineSat / 255.0f, g_Config.m_ClLaserOutlineLht / 255.0f));\n+\t\tvec4 OuterColor(RGB.r, RGB.g, RGB.b, 1.0f);\n+\t\tGraphics()->SetColor(RGB.r, RGB.g, RGB.b, 1.0f); // outline\n+\t\tOut = vec2(0.0f, -1.0f) * (3.15f);\n+\n+\t\tIGraphics::CFreeformItem Freeform(\n+\t\t\t\tFrom.x - Out.x, From.y - Out.y,\n+\t\t\t\tFrom.x + Out.x, From.y + Out.y,\n+\t\t\t\tPos.x - Out.x, Pos.y - Out.y,\n+\t\t\t\tPos.x + Out.x, Pos.y + Out.y);\n+\t\tGraphics()->QuadsDrawFreeform(&Freeform, 1);\n+\n+\t\t// do inner\n+\t\tRGB = HslToRgb(vec3(g_Config.m_ClLaserInnerHue / 255.0f, g_Config.m_ClLaserInnerSat / 255.0f, g_Config.m_ClLaserInnerLht / 255.0f));\n+\t\tvec4 InnerColor(RGB.r, RGB.g, RGB.b, 1.0f);\n+\t\tOut = vec2(0.0f, -1.0f) * (2.25f);\n+\t\tGraphics()->SetColor(InnerColor.r, InnerColor.g, InnerColor.b, 1.0f); // center\n+\n+\t\tFreeform = IGraphics::CFreeformItem(\n+\t\t\t\tFrom.x - Out.x, From.y - Out.y,\n+\t\t\t\tFrom.x + Out.x, From.y + Out.y,\n+\t\t\t\tPos.x - Out.x, Pos.y - Out.y,\n+\t\t\t\tPos.x + Out.x, Pos.y + Out.y);\n+\t\tGraphics()->QuadsDrawFreeform(&Freeform, 1);\n+\n+\t\tGraphics()->QuadsEnd();\n+\n+\t\t// render head\n+\t\t{\n+\t\t\tGraphics()->BlendNormal();\n+\t\t\tGraphics()->TextureSet(g_pData->m_aImages[IMAGE_PARTICLES].m_Id);\n+\t\t\tGraphics()->QuadsBegin();\n+\n+\t\t\tint Sprites[] = { SPRITE_PART_SPLAT01, SPRITE_PART_SPLAT02, SPRITE_PART_SPLAT03 };\n+\t\t\tRenderTools()->SelectSprite(Sprites[time_get() % 3]);\n+\t\t\tGraphics()->QuadsSetRotation(time_get());\n+\t\t\tGraphics()->SetColor(OuterColor.r, OuterColor.g, OuterColor.b, 1.0f);\n+\t\t\tIGraphics::CQuadItem QuadItem(Pos.x, Pos.y, 24, 24);\n+\t\t\tGraphics()->QuadsDraw(&QuadItem, 1);\n+\t\t\tGraphics()->SetColor(InnerColor.r, InnerColor.g, InnerColor.b, 1.0f);\n+\t\t\tQuadItem = IGraphics::CQuadItem(Pos.x, Pos.y, 20, 20);\n+\t\t\tGraphics()->QuadsDraw(&QuadItem, 1);\n+\t\t\tGraphics()->QuadsEnd();\n+\t\t}\n+\t\t// draw laser weapon\n+\t\tGraphics()->TextureSet(g_pData->m_aImages[IMAGE_GAME].m_Id);\n+\t\tGraphics()->QuadsBegin();\n+\n+\t\tRenderTools()->SelectSprite(SPRITE_WEAPON_RIFLE_BODY);\n+\t\tRenderTools()->DrawSprite(Weapon.x, Weapon.y + Weapon.h / 2.0f, 60.0f);\n+\n+\t\tGraphics()->QuadsEnd();\n+\t}\n+}\n+\n+void CMenus::RenderSettingsHUD(CUIRect MainView)\n+{\n+\tCALLSTACK_ADD();\n+\n+\tCUIRect Left, Right;\n+\tstatic int s_Page = 0;\n+\n+\tMainView.HSplitTop(20.0f, &Left, &MainView);\n+\tLeft.VSplitMid(&Left, &Right);\n+\tstatic CButtonContainer s_TabSettings;\n+\tif(DoButton_MenuTab(&s_TabSettings, Localize(\"Settings\"), s_Page == 0, &Left, CUI::CORNER_L))\n+\t\ts_Page = 0;\n+\n+\tstatic CButtonContainer s_TabColors;\n+\tif(DoButton_MenuTab(&s_TabColors, Localize(\"Color Customization\"), s_Page == 1, &Right, CUI::CORNER_R))\n+\t\ts_Page = 1;\n+\n+\tif(s_Page == 0)\n+\t\tRenderSettingsHUDGeneral(MainView);\n+\telse if(s_Page == 1)\n+\t\tRenderSettingsHUDColors(MainView);\n+\telse\n+\t\ts_Page = 0;\n+\n+}"
    },
    {
      "sha": "1d5d1ad20b842b6cd9e1c18c4356771e5b03cf32",
      "filename": "src/game/client/components/menus_settings/settings_identity.cpp",
      "status": "renamed",
      "additions": 3,
      "deletions": 3,
      "changes": 6,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_identity.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_identity.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/menus_settings/settings_identity.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -11,9 +11,9 @@\n #include <game/client/animstate.h>\n #include <game/localization.h>\n \n-#include \"countryflags.h\"\n-#include \"menus.h\"\n-#include \"identity.h\"\n+#include \"game/client/components/countryflags.h\"\n+#include \"game/client/components/menus.h\"\n+#include \"game/client/components/identity.h\"\n \n int CMenus::RenderSettingsIdentLegacy(CUIRect MainView)\n {",
      "previous_filename": "src/game/client/components/menus_identity.cpp"
    },
    {
      "sha": "09f3b7e17cd61e3c45ef01763d7ebb9eb035b348",
      "filename": "src/game/client/components/menus_settings/settings_lua.cpp",
      "status": "added",
      "additions": 496,
      "deletions": 0,
      "changes": 496,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_lua.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_lua.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/menus_settings/settings_lua.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -0,0 +1,496 @@\n+#include \"../menus.h\"\n+\n+#include <engine/graphics.h>\n+#include <engine/textrender.h>\n+#include <engine/keys.h>\n+#include \"../console.h\"\n+\n+\n+#if defined(FEATURE_LUA)\n+void CMenus::RenderLoadingLua()\n+{\n+\treturn;\n+\tCALLSTACK_ADD();\n+\n+\tGraphics()->Swap();\n+\n+\tCUIRect Bar, Rect = *UI()->Screen();\n+\n+\tRect.Margin(Rect.w*0.23f, &Rect);\n+\n+\tRect.HSplitTop(15.0f, &Bar, &Rect);\n+\tRenderTools()->DrawUIRect(&Bar, vec4(0.2f, 0.7f, 0.2f, 0.8f), CUI::CORNER_T, 5.0f);\n+\tRenderTools()->DrawUIRect(&Rect, vec4(0,0,0, 0.8f), CUI::CORNER_B, 5.0f);\n+\tUI()->DoLabelScaled(&Bar, Localize(\"Please wait...\"), 12.0f, 0, -1, 0);\n+\tRect.y += Rect.h/3; Rect.h *= 2/3;\n+\tUI()->DoLabelScaled(&Rect, Localize(\"Loading Lua Script\"), 18.0f, 0, -1, 0);\n+\n+\tGraphics()->Swap();\n+}\n+\n+void CMenus::RenderSettingsLuaExceptions(CUIRect MainView, CLuaFile *L)\n+{\n+\tstatic CButtonContainer s_BCListbox;\n+\tstatic float s_ScrollVal = 1.0f;\n+\n+\tchar aBuf[256];\n+\tchar aTitle[256];\n+\tchar aBottomText[32];\n+\tstr_format(aTitle, sizeof(aTitle), Localize(\"Exceptions thrown by script '%s'\"), L->GetFilename());\n+\tif(L->State() == CLuaFile::STATE_LOADED)\n+\t{\n+\t\tstr_format(aBuf, sizeof(aBuf), \" [%s]\", Localize(\"Running\"));\n+\t\tstr_append(aTitle, aBuf, sizeof(aTitle));\n+\t}\n+\telse if(L->State() == CLuaFile::STATE_ERROR)\n+\t{\n+\t\tstr_format(aBuf, sizeof(aBuf), \" [%s]\", Localize(\"Aborted\"));\n+\t\tstr_append(aTitle, aBuf, sizeof(aTitle));\n+\t}\n+\tstr_format(aBottomText, sizeof(aBottomText), \"%i/100\", L->m_Exceptions.size());\n+\tUiDoListboxStart(&s_BCListbox, &MainView, 20.0f, aTitle, aBottomText, L->m_Exceptions.size(), 1, -1, s_ScrollVal);\n+\n+\tfor(int i = 0; i < L->m_Exceptions.size(); i++)\n+\t{\n+\t\tCPointerContainer Container(&(L->m_Exceptions[i]));\n+\t\tCListboxItem Item = UiDoListboxNextItem(&Container);\n+\t\tif(!Item.m_Visible)\n+\t\t\tcontinue;\n+\n+\t\tif(UI()->MouseInside(&Item.m_Rect))\n+\t\t\tRenderTools()->DrawUIRect(&Item.m_Rect, vec4(1,1,1,0.25f), CUI::CORNER_ALL, 8.0f);\n+\n+\t\tCUIRect Button;\n+\t\tstr_format(aBuf, sizeof(aBuf), \"#%i\", i+1);\n+\t\t//const float tw = TextRender()->TextWidth(0, 16.0f, aBuf, -1);\n+\t\tItem.m_Rect.VSplitLeft(35.0f, &Button, &Item.m_Rect);\n+\t\tUI()->DoLabelScaled(&Button, aBuf, 16.0f, -1);\n+\n+\t\tItem.m_Rect.VSplitLeft(10.0f, 0, &Item.m_Rect);\n+\t\tstr_format(aBuf, sizeof(aBuf), \"@@ %s\", L->m_Exceptions[i].c_str());\n+\t\tUI()->DoLabelScaled(&Item.m_Rect, aBuf, 16.0f, -1);\n+\t}\n+\n+\tUiDoListboxEnd(&s_ScrollVal, 0);\n+}\n+\n+\n+void CMenus::RenderSettingsLua(CUIRect MainView)\n+{\n+\tCALLSTACK_ADD();\n+\n+\tCUIRect ListView, Button, BottomBar;\n+\tstatic int s_ActiveLuaSettings = -1;\n+\tstatic int s_ActiveLuaExceptions = -1;\n+\tstatic int s_SelectedScript = -1;\n+\n+\tif(g_Config.m_ClLua)\n+\t{\n+\t\t// render settings page if open\n+\t\tif(s_ActiveLuaSettings >= 0)\n+\t\t{\n+\t\t\tif(Client()->Lua()->GetLuaFiles()[s_ActiveLuaSettings]->State() != CLuaFile::STATE_LOADED)\n+\t\t\t\ts_ActiveLuaSettings = -1;\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\ttry\n+\t\t\t\t{\n+\t\t\t\t\tCUIRect CloseButton;\n+\t\t\t\t\tMainView.HSplitTop(20.0f, &CloseButton, &MainView);\n+\t\t\t\t\tstatic CButtonContainer s_CloseButton;\n+\t\t\t\t\tif(DoButton_Menu(&s_CloseButton, Localize(\"Close\"), 0, &CloseButton, 0, CUI::CORNER_B) || !g_Config.m_ClLua)\n+\t\t\t\t\t{\n+\t\t\t\t\t\tClient()->Lua()->GetLuaFiles()[s_ActiveLuaSettings]->GetFunc(\"OnScriptSaveSettings\")();\n+\t\t\t\t\t\ts_ActiveLuaSettings = -1;\n+\t\t\t\t\t}\n+\t\t\t\t\telse\n+\t\t\t\t\t{\n+\t\t\t\t\t\tMainView.HSplitTop(10.0f, 0, &MainView);\n+\t\t\t\t\t\tClient()->Lua()->GetLuaFiles()[s_ActiveLuaSettings]->GetFunc(\"OnScriptRenderSettings\")(MainView);\n+\t\t\t\t\t\treturn;\n+\t\t\t\t\t}\n+\t\t\t\t}\n+\t\t\t\tcatch(std::exception& e)\n+\t\t\t\t{\n+\t\t\t\t\tClient()->Lua()->HandleException(e, Client()->Lua()->GetLuaFiles()[s_ActiveLuaSettings]);\n+\t\t\t\t\ts_ActiveLuaSettings = -1;\n+\t\t\t\t}\n+\t\t\t}\n+\t\t}\n+\n+\t\t// render exceptions page if open\n+\t\tif(s_ActiveLuaExceptions >= 0)\n+\t\t{\n+\t\t\tCUIRect CloseButton;\n+\t\t\tMainView.HSplitTop(20.0f, &CloseButton, &MainView);\n+\t\t\tstatic CButtonContainer s_CloseButton;\n+\t\t\tif(DoButton_Menu(&s_CloseButton, Localize(\"Close\"), 0, &CloseButton, 0, CUI::CORNER_B) || !g_Config.m_ClLua)\n+\t\t\t{\n+\t\t\t\ts_ActiveLuaExceptions = -1;\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\tMainView.HSplitTop(10.0f, 0, &MainView);\n+\t\t\t\tRenderSettingsLuaExceptions(MainView, Client()->Lua()->GetLuaFiles()[s_ActiveLuaExceptions]);\n+\t\t\t\treturn;\n+\t\t\t}\n+\t\t}\n+\t}\n+\telse\n+\t{\n+\t\ts_ActiveLuaSettings = -1;\n+\t\ts_ActiveLuaExceptions = -1;\n+\t\ts_SelectedScript = -1;\n+\t}\n+\n+\t// render the main selection view\n+\tMainView.VSplitLeft(MainView.w/2.0f, &ListView, &MainView);\n+\tListView.HSplitBottom(50.0f+5.0f, &ListView, &BottomBar);\n+\tListView.HSplitTop(20.0f, &Button, &ListView);\n+\n+\n+\tCUIRect RefreshButton;\n+\tButton.VSplitRight(max(100.0f, TextRender()->TextWidth(0, Button.h*ms_FontmodHeight, Localize(\"Refresh\"), -1)), &Button, &RefreshButton);\n+\tstatic CButtonContainer s_RefreshButton, s_LuaButton;\n+\tif(g_Config.m_ClLua)\n+\t\tif(DoButton_Menu(&s_RefreshButton, Localize(\"Refresh\"), 0, &RefreshButton, \"Reload the list of files\", s_SelectedScript > -1 ? 0 : CUI::CORNER_TR))\n+\t\t{\n+\t\t\ts_SelectedScript = -1;\n+\t\t\tClient()->Lua()->LoadFolder();\n+\t\t}\n+\n+\tif(DoButton_CheckBox(&s_LuaButton, Localize(\"Use Lua\"), g_Config.m_ClLua, &Button, 0, g_Config.m_ClLua ? CUI::CORNER_TL : CUI::CORNER_ALL))\n+\t{\n+\t\ts_SelectedScript = -1;\n+\t\tif(!(g_Config.m_ClLua ^= 1))\n+\t\t{\n+\t\t\tClient()->Lua()->SaveAutoloads();\n+\t\t\tClient()->Lua()->GetLuaFiles().delete_all();\n+\t\t\tClient()->Lua()->GetLuaFiles().clear();\n+\t\t}\n+\t\telse\n+\t\t\tClient()->Lua()->LoadFolder();\n+\t}\n+\tif(!g_Config.m_ClLua)\n+\t\treturn;\n+\n+\n+\tstatic int ShowActiveOnly = 0;\n+\t{\n+\t\tint NumLuaFiles = Client()->Lua()->GetLuaFiles().size();\n+\n+\t\t// display mode list\n+\t\tstatic float s_ScrollValue = 0;\n+\t\tstatic CButtonContainer pIDItem[256];\n+\t\tstatic CButtonContainer pIDButtonToggleScript[256];\n+\t\tstatic CButtonContainer pIDButtonPermissions[256];\n+\t\tstatic CButtonContainer pIDButtonAutoload[256];\n+\n+\t\tstatic CButtonContainer s_Listbox;\n+\t\tCUIRect ListBox = ListView;\n+\t\tchar aHeadline[128], aBottomLine[128];\n+\t\tstatic int NumListedFiles = 0, NumActiveScripts = 0;\n+\t\tstr_format(aHeadline, sizeof(aHeadline), Localize(\"%s (%i files listed, %i scripts active)\"), Localize(\"Lua files\"), NumListedFiles, NumActiveScripts);\n+\t\tstr_format(aBottomLine, sizeof(aBottomLine), Localize(\"(%i files found – %i filtered away)\"), Client()->Lua()->GetLuaFiles().size(), Client()->Lua()->GetLuaFiles().size() - NumListedFiles);\n+\t\tUiDoListboxStart(&s_Listbox, &ListBox, 50.0f, aHeadline, aBottomLine, NumListedFiles, 1, -1/*s_SelectedScript*/, s_ScrollValue, 0, 0);\n+\t\tNumListedFiles = 0; NumActiveScripts = 0;\n+\t\tfor(int i = 0; i < NumLuaFiles; i++)\n+\t\t{\n+\t\t\tCLuaFile *L = Client()->Lua()->GetLuaFiles()[i];\n+\t\t\tif(!L)\n+\t\t\t\tcontinue;\n+\n+\t\t\tif(L->State() == CLuaFile::STATE_LOADED)\n+\t\t\t\tNumActiveScripts++;\n+\n+\t\t\t// filter\n+\t\t\tif(g_Config.m_ClLuaFilterString[0] != '\\0' && (!str_find_nocase(L->GetFilename(), g_Config.m_ClLuaFilterString) && !str_find_nocase(L->GetScriptTitle(), g_Config.m_ClLuaFilterString)))\n+\t\t\t\tcontinue;\n+\t\t\tif(ShowActiveOnly == 1 && L->State() != CLuaFile::STATE_LOADED)\n+\t\t\t\tcontinue;\n+\t\t\telse if(ShowActiveOnly == 2 && L->State() == CLuaFile::STATE_LOADED)\n+\t\t\t\tcontinue;\n+\n+\t\t\tCListboxItem Item = UiDoListboxNextItem(&pIDItem[i], 0);\n+\t\t\tNumListedFiles++;\n+\n+\t\t\tif(Item.m_Visible)\n+\t\t\t{\n+\t\t\t\tCUIRect Label, Buttons, Button;\n+\n+\t\t\t\tItem.m_Rect.HMargin(2.5f, &Item.m_Rect);\n+\t\t\t\tItem.m_Rect.HSplitTop(5.0f, 0, &Label);\n+\n+\t\t\t\tif(Item.m_Rect.y+Item.m_Rect.h > Item.m_HitRect.y)\n+\t\t\t\t{\n+\t\t\t\t\tif(UI()->MouseInside(&Item.m_Rect) && Input()->KeyPress(KEY_MOUSE_1))\n+\t\t\t\t\t\ts_SelectedScript = i;\n+\n+\t\t\t\t\t// activate button\n+\t\t\t\t\tItem.m_Rect.VSplitRight(Item.m_Rect.h*0.83f, &Item.m_Rect, &Button);\n+\t\t\t\t\tif (DoButton_Menu(&pIDButtonToggleScript[i], L->State() == CLuaFile::STATE_LOADED ? \"×\" : \"→\", 0, &Button, L->State() == CLuaFile::STATE_LOADED ? Localize(\"Deactivate\") : Localize(\"Activate\"), CUI::CORNER_R))\n+\t\t\t\t\t{\n+\t\t\t\t\t\tif(L->State() == CLuaFile::STATE_LOADED)\n+\t\t\t\t\t\t\tL->Unload();\n+\t\t\t\t\t\telse\n+\t\t\t\t\t\t{\n+\t\t\t\t\t\t\tRenderLoadingLua();\n+\t\t\t\t\t\t\tL->Init();\n+\t\t\t\t\t\t}\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t\t// permission indicator\n+\t\t\t\t\tItem.m_Rect.VSplitRight(Item.m_Rect.h/2.0f, &Item.m_Rect, &Buttons);\n+\t\t\t\t\tButtons.HSplitMid(&Buttons, &Button); // top: permission indicator, bottom: autoload checkbox\n+\n+\t\t\t\t\tint PermissionFlags = L->GetPermissionFlags();\n+\t\t\t\t\tchar aTooltip[1024] = {0};\n+\t\t\t\t\tif(PermissionFlags == 0)\n+\t\t\t\t\t\tstr_format(aTooltip, sizeof(aTooltip), Localize(\"This script has no additional permissions and is thus considered safe.\"));\n+\t\t\t\t\telse\n+\t\t\t\t\t{\n+\t\t\t\t\t\tstr_format(aTooltip, sizeof(aTooltip), Localize(\"This script has the following additional permission:\"));\n+#define PERM_STR(TYPE, STR) if(PermissionFlags&CLuaFile::PERMISSION_##TYPE) { str_append(aTooltip, \"\\n\\n- \", sizeof(aTooltip)); str_append(aTooltip, STR, sizeof(aTooltip)); }\n+\t\t\t\t\t\tPERM_STR(IO, Localize(\"IO (Write and read files)\"))\n+\t\t\t\t\t\tPERM_STR(DEBUG, Localize(\"DEBUG (WARNING: if you are not currently debugging this script, DO NOT TO USE IT!! It may cause security and performance problems!)\"))\n+\t\t\t\t\t\tPERM_STR(FFI, Localize(\"FFI (Execution of native C code from within Lua - please be sure that this code is not malicious, as the ATH API cannot control it\"))\n+\t\t\t\t\t\tPERM_STR(OS, Localize(\"OS (Access to various operation system functionalities such as time and date\"))\n+\t\t\t\t\t\tPERM_STR(PACKAGE, Localize(\"PACKAGE (Modules)\"))\n+#undef PERM_STR\n+\t\t\t\t\t}\n+\t\t\t\t\tif(DoButton_Menu(&pIDButtonPermissions[i], \"!\", PermissionFlags, &Buttons, aTooltip, 0, vec4(PermissionFlags > 0 ? .7f : .2f, PermissionFlags > 0 ? .2f : .7f, .2f, .8f)))\n+\t\t\t\t\t\tdbg_msg(\"lua/permissions\", \"'%s' | %i (%i)\", L->GetFilename(), PermissionFlags, L->GetPermissionFlags());\n+\n+\n+\t\t\t\t\t// autoload button\n+\t\t\t\t\tif(DoButton_CheckBox(&pIDButtonAutoload[i], \"\", L->GetScriptIsAutoload(), &Button, Localize(\"Autoload\"), 0))\n+\t\t\t\t\t{\n+\t\t\t\t\t\tL->SetScriptIsAutoload(!L->GetScriptIsAutoload());\n+\t\t\t\t\t}\n+\n+\n+\t\t\t\t\t// nice background\n+\t\t\t\t\tvec4 Color = L->State() == CLuaFile::STATE_ERROR ? vec4(0.7f,0,0,0.3f) :\n+\t\t\t\t\t\t\t\t L->State() == CLuaFile::STATE_LOADED ? vec4(0,0.7f,0,0.3f) : vec4(0,0,0,0.3f);\n+\t\t\t\t\tif(i == s_SelectedScript)\n+\t\t\t\t\t\tRenderTools()->DrawUIRect(&Item.m_Rect, vec4(1,1,1,0.5f), 0, 0);\n+\t\t\t\t\telse if(i%2)\n+\t\t\t\t\t\tColor.a += 0.2f;\n+\n+\t\t\t\t\tRenderTools()->DrawUIRect(&Item.m_Rect, Color, 0, 0);\n+\n+\t\t\t\t\t// script filename\n+\t\t\t\t\tUI()->DoLabelScaled(&Label, L->GetFilename()+4, 14.0f, -1, -1/*Buttons.w-5.0f*/, g_Config.m_ClLuaFilterString);\n+\n+\t\t\t\t}\n+\n+\t\t\t}\n+\t\t}\n+\n+\t\tUiDoListboxEnd(&s_ScrollValue, 0);\n+\n+\t\tif(NumLuaFiles == 0)\n+\t\t{\n+\t\t\tCUIRect Label;\n+\t\t\tListView.HSplitBottom(ListView.h/2+15.0f, 0, &Label);\n+\t\t\tUI()->DoLabelScaled(&Label, Localize(\"No files listed, click \\\"Refresh\\\" to reload the list\"), 15.0f, 0, -1);\n+\t\t}\n+\t}\n+\n+\n+\t// render the box at the right\n+\tif(s_SelectedScript > -1 && s_SelectedScript < Client()->Lua()->GetLuaFiles().size())\n+\t{\n+\t\tRenderTools()->DrawUIRect(&MainView, vec4(0,0,0,0.25f), CUI::CORNER_R, 5.0f);\n+\n+\t\tCLuaFile *L = Client()->Lua()->GetLuaFiles()[s_SelectedScript];\n+\t\tCUIRect Label;\n+\t\tMainView.HSplitTop(10.0f, 0, &MainView);\n+\t\tMainView.HSplitTop(25.0f, &Label, &MainView);\n+\t\tif (L->GetScriptTitle()[0] != '\\0')\n+\t\t\tUI()->DoLabelScaled(&Label, L->GetScriptTitle(), 18.0f, 0, Label.w, g_Config.m_ClLuaFilterString);\n+\t\telse\n+\t\t\tUI()->DoLabelScaled(&Label, L->GetFilename()+4, 18.0f, 0, Label.w, g_Config.m_ClLuaFilterString);\n+\n+\t\tMainView.HSplitTop(10.0f, 0, &MainView);\n+\t\tMainView.HSplitTop(20.0f, &Label, &MainView);\n+\t\tUI()->DoLabelScaled(&Label, L->GetScriptInfo(), 14.0f, 0, Label.w);\n+\n+\n+\t\t// button bar at the bottom right\n+\t\tCUIRect Button, Bar;\n+\t\tMainView.HSplitBottom(10.0f, &MainView, 0);\n+\t\tMainView.HSplitBottom(35.0f, &MainView, &Bar);\n+\n+\t\tBar.VMargin(7.5f, &Bar);\n+//\t\tBar.VSplitRight(Bar.w/4.0f-4*5.0f, &Bar, &Button);\n+\n+#define PREPARE_BUTTON(TEXT) Bar.VSplitRight(5.0f, &Bar, 0); Bar.VSplitRight(max(100.0f, TextRender()->TextWidth(0, Bar.h*ms_FontmodHeight, TEXT, -1)), &Bar, &Button);\n+\t\tif(L->State() == CLuaFile::STATE_LOADED)\n+\t\t{\n+\t\t\tPREPARE_BUTTON(Localize(\"Deactivate\"));\n+\t\t\tstatic CButtonContainer s_DeactivateButton;\n+\t\t\tif (DoButton_Menu(&s_DeactivateButton, Localize(\"Deactivate\"), 0, &Button))\n+\t\t\t{\n+\t\t\t\tL->Unload();\n+\t\t\t}\n+\n+\t\t\tstatic float s_ButtonReloadColorFade = 0.0f;\n+\t\t\tstatic int s_PrevScriptIndex = s_SelectedScript;\n+\t\t\tif(s_SelectedScript != s_PrevScriptIndex) s_ButtonReloadColorFade = 0.0f;\n+\t\t\tsmooth_set(&s_ButtonReloadColorFade, 0.0f, 15.0f, Client()->RenderFrameTime());\n+\t\t\tPREPARE_BUTTON(Localize(\"Reload\"));\n+\t\t\tstatic CButtonContainer s_ReloadButton;\n+\t\t\tif(DoButton_Menu(&s_ReloadButton, Localize(\"Reload\"), 0, &Button, 0, CUI::CORNER_ALL, vec4(1.0f-s_ButtonReloadColorFade, 1.0f-s_ButtonReloadColorFade, 1.0f, 0.5f)))\n+\t\t\t{\n+\t\t\t\ts_ButtonReloadColorFade = 1.0f;\n+\t\t\t\tRenderLoadingLua();\n+\t\t\t\tL->Init();\n+\t\t\t}\n+\n+\n+\t\t\tif (L->GetScriptHasSettings())\n+\t\t\t{\n+\t\t\t\tPREPARE_BUTTON(Localize(\"Settings\"));\n+\t\t\t\tstatic CButtonContainer s_ButtonSettings;\n+\t\t\t\tif (DoButton_Menu(&s_ButtonSettings, Localize(\"Settings\"), 0, &Button))\n+\t\t\t\t{\n+\t\t\t\t\ts_ActiveLuaSettings = s_SelectedScript;\n+\t\t\t\t}\n+\t\t\t}\n+\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tPREPARE_BUTTON(Localize(\"Activate\"));\n+\t\t\tstatic CButtonContainer s_ButtonActivate;\n+\t\t\tif (DoButton_Menu(&s_ButtonActivate, Localize(\"Activate\"), 0, &Button))\n+\t\t\t{\n+\t\t\t\tRenderLoadingLua();\n+\t\t\t\tL->Init();\n+\t\t\t}\n+\t\t}\n+\n+#undef PREPARE_BUTTON\n+\n+\t\tMainView.HSplitBottom(5.0f, &MainView, 0);\n+\t\tMainView.HSplitBottom(20.0f, &MainView, &Bar);\n+\t\tBar.VMargin(7.5f+5.0f, &Bar);\n+\n+\t\tif(L->m_Exceptions.size() > 0)\n+\t\t{\n+\t\t\tchar aBuf[64];\n+\t\t\tstr_format(aBuf, sizeof(aBuf), Localize(\"Exceptions (%i)\"), L->m_Exceptions.size());\n+\t\t\tBar.VSplitRight(max(100.0f, TextRender()->TextWidth(0, Bar.h*ms_FontmodHeight, aBuf, -1)), &Bar, &Button);\n+\t\t\tstatic CButtonContainer s_ButtonExceptions;\n+\t\t\tif(DoButton_Menu(&s_ButtonExceptions, aBuf, 0, &Button, \"\", CUI::CORNER_ALL, mix(vec4(0,1,0,0.5f), vec4(1,0,0,0.5f), (float)L->m_Exceptions.size()/100.0f)))\n+\t\t\t{\n+\t\t\t\ts_ActiveLuaExceptions = s_SelectedScript;\n+\t\t\t}\n+\t\t}\n+\n+\n+\t\tif(L->State() == CLuaFile::STATE_LOADED && m_pClient->m_pGameConsole->GetDebuggerChild() != L->L())\n+\t\t{\n+\t\t\tchar aBuf[64];\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s\", Localize(\"Debug\"));\n+\t\t\tBar.VSplitRight(max(100.0f, TextRender()->TextWidth(0, Bar.h*ms_FontmodHeight, aBuf, -1)), &Bar, &Button);\n+\t\t\tstatic CButtonContainer s_ButtonDebug;\n+\t\t\tif(DoButton_Menu(&s_ButtonDebug, aBuf, 0, &Button, \"Attach the lua console as a debugger to this script\"))\n+\t\t\t{\n+\t\t\t\tm_pClient->m_pGameConsole->AttachLuaDebugger(L);\n+\t\t\t}\n+\t\t}\n+\t\telse if(L->State() == CLuaFile::STATE_ERROR)\n+\t\t{\n+\t\t\tfloat FadeVal = sinf(Client()->SteadyTimer()*1.4f)/2.0f+0.5f;\n+\t\t\tTextRender()->TextColor(1.0f, 0.25f+FadeVal*0.75f, 0.25f+FadeVal*0.75f, 1.0f);\n+\t\t\tUI()->DoLabelScaled(&Bar, L->m_pErrorStr && L->m_pErrorStr[0] ? L->m_pErrorStr : Localize(\"An error occured\"), 12.0f, -1, Bar.w);\n+\t\t\tTextRender()->TextColor(1,1,1,1);\n+\t\t}\n+\n+\n+\t\tif(L->State() == CLuaFile::STATE_LOADED)\n+\t\t{\n+\t\t\t// let the script render stuff, if it wants to\n+\t\t\tCUIRect View;\n+\t\t\tMainView.VMargin(7.5f, &View);\n+\t\t\tView.HSplitBottom(10.0f, &View, 0);\n+\t\t\tView.HSplitTop(14.0f*(TextRender()->TextLineCount(0, 14.0f, L->GetScriptInfo(), MainView.w)-1)+5.0f, 0, &View);\n+\t\t\tLuaRef func = Client()->Lua()->GetLuaFiles()[s_SelectedScript]->GetFunc(\"OnScriptRenderInfo\");\n+\t\t\tif(func.cast<bool>())\n+\t\t\t{\n+\t\t\t\ttry\n+\t\t\t\t{\n+\t\t\t\t\tfunc(View);\n+\t\t\t\t} catch(std::exception &e) { Client()->Lua()->HandleException(e, Client()->Lua()->GetLuaFiles()[s_SelectedScript]); }\n+\t\t\t}\n+\t\t}\n+\n+\t}\n+\n+\n+\t// render the bottom bar at the left\n+\tRenderTools()->DrawUIRect(&BottomBar, vec4(1,1,1,0.25f), s_SelectedScript > -1 ? CUI::CORNER_BL : CUI::CORNER_B, 5.0f);\n+\tBottomBar.VMargin(10.0f, &BottomBar);\n+\tBottomBar.HSplitBottom(5.0f, &BottomBar, 0);\n+\t// render quick search\n+\t{\n+\t\tCUIRect QuickSearch, QuickSearchClearButton;\n+\t\tBottomBar.HSplitTop(25.0f, &QuickSearch, &BottomBar);\n+\t\tQuickSearch.HSplitTop(5.0f, 0, &QuickSearch);\n+\t\tUI()->DoLabelScaled(&QuickSearch, \"⚲\", 14.0f, -1);\n+\t\tfloat wSearch = TextRender()->TextWidth(0, 14.0f, \"⚲\", -1);\n+\t\tQuickSearch.VSplitLeft(wSearch, 0, &QuickSearch);\n+\t\tQuickSearch.VSplitLeft(5.0f, 0, &QuickSearch);\n+\t\tQuickSearch.VSplitLeft(QuickSearch.w-15.0f, &QuickSearch, &QuickSearchClearButton);\n+\t\tstatic float Offset = 0.0f;\n+\t\tstatic CButtonContainer s_LuaFilterStringEditbox;\n+\t\tDoEditBox(&s_LuaFilterStringEditbox, &QuickSearch, g_Config.m_ClLuaFilterString, sizeof(g_Config.m_ClLuaFilterString), 14.0f, &Offset, false, CUI::CORNER_L, Localize(\"Search\"));\n+\n+\t\t// clear button\n+\t\t{\n+\t\t\tstatic CButtonContainer s_ClearButton;\n+\t\t\tif(DoButton_Menu(&s_ClearButton, \"×\", 0, &QuickSearchClearButton, \"clear\", CUI::CORNER_R, vec4(1,1,1,0.33f)))\n+\t\t\t{\n+\t\t\t\tg_Config.m_ClLuaFilterString[0] = 0;\n+\t\t\t\tUI()->SetActiveItem(s_LuaFilterStringEditbox.GetID());\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\t// render script-activation-filter button\n+\t{\n+\t\tconst char *s_apLabels[] = {\n+\t\t\t\tLocalize(\"Showing all files\"),\n+\t\t\t\tLocalize(\"Showing active scripts only\"),\n+\t\t\t\tLocalize(\"Showing inactive scripts only\")\n+\t\t};\n+\n+\t\tstatic float Width = -1;\n+\t\tif(Width < 0)\n+\t\t\tfor(int i = 0; i < 2; i++)\n+\t\t\t\tWidth = max(Width, TextRender()->TextWidth(0, BottomBar.h-10.0f, s_apLabels[i], -1));\n+\n+\t\tCUIRect Checkbox;\n+\t\tBottomBar.HSplitTop(5.0f, 0, &BottomBar);\n+\t\tBottomBar.VSplitLeft(TextRender()->TextWidth(0, 14.0f, Localize(\"Quickfilter:\"), -1) + 5.0f, &BottomBar, &Checkbox);\n+\t\tUI()->DoLabelScaled(&BottomBar, Localize(\"Quickfilter:\"), 14.0f, -1);\n+\n+\t\tstatic CButtonContainer s_Checkbox;\n+\t\tint MouseButton = DoButton_CheckBox_Number(&s_Checkbox, s_apLabels[ShowActiveOnly], ShowActiveOnly, &Checkbox);\n+\t\tif(MouseButton == 1)\n+\t\t{\n+\t\t\tif(++ShowActiveOnly > 2)\n+\t\t\t\tShowActiveOnly = 0;\n+\t\t}\n+\t\telse if(MouseButton == 2)\n+\t\t{\n+\t\t\tif(--ShowActiveOnly < 0)\n+\t\t\t\tShowActiveOnly = 2;\n+\t\t}\n+\t}\n+}\n+\n+#endif"
    },
    {
      "sha": "7a355a621deefb5e46dc286c13188e470a1583e8",
      "filename": "src/game/client/components/menus_settings/settings_player.cpp",
      "status": "added",
      "additions": 103,
      "deletions": 0,
      "changes": 103,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_player.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_player.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/menus_settings/settings_player.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -0,0 +1,103 @@\n+#include \"../menus.h\"\n+\n+#include \"../countryflags.h\"\n+\n+void CMenus::RenderSettingsPlayer(CUIRect MainView)\n+{\n+\tCALLSTACK_ADD();\n+\n+\tCUIRect Button, Label, Dummy;\n+\tMainView.HSplitTop(10.0f, 0, &MainView);\n+\n+\tchar *Name = g_Config.m_PlayerName;\n+\tchar *Clan = g_Config.m_PlayerClan;\n+\tint *Country = &g_Config.m_PlayerCountry;\n+\n+\tif(m_Dummy)\n+\t{\n+\t\tName = g_Config.m_ClDummyName;\n+\t\tClan = g_Config.m_ClDummyClan;\n+\t\tCountry = &g_Config.m_ClDummyCountry;\n+\t}\n+\n+\t// player name\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tButton.VSplitLeft(80.0f, &Label, &Button);\n+\tButton.VSplitLeft(200.0f, &Button, &Dummy);\n+\tButton.VSplitLeft(150.0f, &Button, 0);\n+\tchar aBuf[128];\n+\tstr_format(aBuf, sizeof(aBuf), \"%s:\", Localize(\"Name\"));\n+\tUI()->DoLabelScaled(&Label, aBuf, 14.0, -1);\n+\tstatic float s_OffsetName = 0.0f;\n+\tstatic CButtonContainer s_EditboxName;\n+\tif(DoEditBox(&s_EditboxName, &Button, Name, sizeof(g_Config.m_PlayerName), 14.0f, &s_OffsetName))\n+\t{\n+\t\tif(m_Dummy)\n+\t\t\tm_NeedSendDummyinfo = true;\n+\t\telse\n+\t\t\tm_NeedSendinfo = true;\n+\t}\n+\n+\tDummy.w /= 2.3f;\n+\tstatic CButtonContainer s_CheckboxShowKillMessages;\n+\tif(DoButton_CheckBox(&s_CheckboxShowKillMessages, Localize(\"Dummy settings\"), m_Dummy, &Dummy))\n+\t{\n+\t\tm_Dummy ^= 1;\n+\t}\n+\n+\t// player clan\n+\tMainView.HSplitTop(5.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tButton.VSplitLeft(80.0f, &Label, &Button);\n+\tButton.VSplitLeft(150.0f, &Button, 0);\n+\tstr_format(aBuf, sizeof(aBuf), \"%s:\", Localize(\"Clan\"));\n+\tUI()->DoLabelScaled(&Label, aBuf, 14.0, -1);\n+\tstatic float s_OffsetClan = 0.0f;\n+\tstatic CButtonContainer s_EditboxClan;\n+\tif(DoEditBox(&s_EditboxClan, &Button, Clan, sizeof(g_Config.m_PlayerClan), 14.0f, &s_OffsetClan))\n+\t{\n+\t\tif(m_Dummy)\n+\t\t\tm_NeedSendDummyinfo = true;\n+\t\telse\n+\t\t\tm_NeedSendinfo = true;\n+\t}\n+\n+\t// country flag selector\n+\tMainView.HSplitTop(20.0f, 0, &MainView);\n+\tstatic float s_ScrollValue = 0.0f;\n+\tint OldSelected = -1;\n+\tstatic CButtonContainer s_Listbox;\n+\tUiDoListboxStart(&s_Listbox, &MainView, 50.0f, Localize(\"Country\"), \"\", m_pClient->m_pCountryFlags->Num(), 6, OldSelected, s_ScrollValue);\n+\n+\tfor(int i = 0; i < m_pClient->m_pCountryFlags->Num(); ++i)\n+\t{\n+\t\tconst CCountryFlags::CCountryFlag *pEntry = m_pClient->m_pCountryFlags->GetByIndex(i);\n+\t\tif(pEntry->m_CountryCode == *Country)\n+\t\t\tOldSelected = i;\n+\t\tCPointerContainer Container(&pEntry->m_CountryCode);\n+\t\tCListboxItem Item = UiDoListboxNextItem(&Container, OldSelected == i);\n+\t\tif(Item.m_Visible)\n+\t\t{\n+\t\t\tCUIRect Label;\n+\t\t\tItem.m_Rect.Margin(5.0f, &Item.m_Rect);\n+\t\t\tItem.m_Rect.HSplitBottom(10.0f, &Item.m_Rect, &Label);\n+\t\t\tfloat OldWidth = Item.m_Rect.w;\n+\t\t\tItem.m_Rect.w = Item.m_Rect.h*2;\n+\t\t\tItem.m_Rect.x += (OldWidth-Item.m_Rect.w)/ 2.0f;\n+\t\t\tvec4 Color(1.0f, 1.0f, 1.0f, 1.0f);\n+\t\t\tm_pClient->m_pCountryFlags->Render(pEntry->m_CountryCode, &Color, Item.m_Rect.x, Item.m_Rect.y, Item.m_Rect.w, Item.m_Rect.h);\n+\t\t\tif(pEntry->m_Texture != -1)\n+\t\t\t\tUI()->DoLabel(&Label, pEntry->m_aCountryCodeString, 10.0f, 0);\n+\t\t}\n+\t}\n+\n+\tconst int NewSelected = UiDoListboxEnd(&s_ScrollValue, 0);\n+\tif(OldSelected != NewSelected)\n+\t{\n+\t\t*Country = m_pClient->m_pCountryFlags->GetByIndex(NewSelected)->m_CountryCode;\n+\t\tif(m_Dummy)\n+\t\t\tm_NeedSendDummyinfo = true;\n+\t\telse\n+\t\t\tm_NeedSendinfo = true;\n+\t}\n+}"
    },
    {
      "sha": "583eba3f5f83f2b061feacea3a0e982bc5a2f27f",
      "filename": "src/game/client/components/menus_settings/settings_sound.cpp",
      "status": "added",
      "additions": 194,
      "deletions": 0,
      "changes": 194,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_sound.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_sound.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/menus_settings/settings_sound.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -0,0 +1,194 @@\n+#include \"../menus.h\"\n+\n+#include <engine/shared/jobs.h>\n+#include \"../sounds.h\"\n+\n+void CMenus::RenderSettingsSound(CUIRect MainView)\n+{\n+\tCALLSTACK_ADD();\n+\n+\tCUIRect Button;\n+\tMainView.VSplitMid(&MainView, 0);\n+\tstatic int s_SndEnable = g_Config.m_SndEnable;\n+\tstatic int s_SndRate = g_Config.m_SndRate;\n+\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_CheckboxSndEnable;\n+\tif(DoButton_CheckBox(&s_CheckboxSndEnable, Localize(\"Use sounds\"), g_Config.m_SndEnable, &Button))\n+\t{\n+\t\tg_Config.m_SndEnable ^= 1;\n+\t\tif(g_Config.m_SndEnable)\n+\t\t{\n+\t\t\tif(g_Config.m_SndMusic && Client()->State() == IClient::STATE_OFFLINE)\n+\t\t\t\tm_pClient->m_pSounds->Play(CSounds::CHN_MUSIC, SOUND_MENU, 1.0f);\n+\t\t}\n+\t\telse\n+\t\t\tm_pClient->m_pSounds->Stop(SOUND_MENU);\n+\t\tm_NeedRestartSound = g_Config.m_SndEnable && (!s_SndEnable || s_SndRate != g_Config.m_SndRate);\n+\t}\n+\n+\tif(!g_Config.m_SndEnable)\n+\t\treturn;\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_CheckboxSndMusic;\n+\tif(DoButton_CheckBox(&s_CheckboxSndMusic, Localize(\"Play background music\"), g_Config.m_SndMusic, &Button))\n+\t{\n+\t\tg_Config.m_SndMusic ^= 1;\n+\t\tif(Client()->State() == IClient::STATE_OFFLINE)\n+\t\t{\n+\t\t\tif(g_Config.m_SndMusic)\n+\t\t\t\tm_pClient->m_pSounds->Play(CSounds::CHN_MUSIC, SOUND_MENU, 1.0f);\n+\t\t\telse\n+\t\t\t\tm_pClient->m_pSounds->Stop(SOUND_MENU);\n+\t\t}\n+\t}\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_CheckboxSndNonactiveMute;\n+\tif(DoButton_CheckBox(&s_CheckboxSndNonactiveMute, Localize(\"Mute when not active\"), g_Config.m_SndNonactiveMute, &Button))\n+\t\tg_Config.m_SndNonactiveMute ^= 1;\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_CheckboxSndGame;\n+\tif(DoButton_CheckBox(&s_CheckboxSndGame, Localize(\"Enable game sounds\"), g_Config.m_SndGame, &Button))\n+\t\tg_Config.m_SndGame ^= 1;\n+\n+\tif(g_Config.m_SndGame)\n+\t{\n+\t\t{\n+\t\t\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\t\t\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\t\t\tButton.VSplitLeft(10.0f, 0, &Button);\n+\t\t\tstatic CButtonContainer s_Checkbox;\n+\t\t\tif(DoButton_CheckBox(&s_Checkbox, Localize(\"Enable hammer sound\"), g_Config.m_SndHammer, &Button))\n+\t\t\t\tg_Config.m_SndHammer ^= 1;\n+\t\t}\n+\n+\t\t{\n+\t\t\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\t\t\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\t\t\tButton.VSplitLeft(10.0f, 0, &Button);\n+\t\t\tstatic CButtonContainer s_Checkbox;\n+\t\t\tif(DoButton_CheckBox(&s_Checkbox, Localize(\"Enable gun sound\"), g_Config.m_SndGun, &Button))\n+\t\t\t\tg_Config.m_SndGun ^= 1;\n+\t\t}\n+\n+\t\t{\n+\t\t\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\t\t\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\t\t\tButton.VSplitLeft(10.0f, 0, &Button);\n+\t\t\tstatic CButtonContainer s_Checkbox;\n+\t\t\tif(DoButton_CheckBox(&s_Checkbox, Localize(\"Enable shotgun sound\"), g_Config.m_SndShotgun, &Button))\n+\t\t\t\tg_Config.m_SndShotgun ^= 1;\n+\t\t}\n+\n+\t\t{\n+\t\t\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\t\t\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\t\t\tButton.VSplitLeft(10.0f, 0, &Button);\n+\t\t\tstatic CButtonContainer s_Checkbox;\n+\t\t\tif(DoButton_CheckBox(&s_Checkbox, Localize(\"Enable grenade sound\"), g_Config.m_SndGrenade, &Button))\n+\t\t\t\tg_Config.m_SndGrenade ^= 1;\n+\t\t}\n+\n+\t\t{\n+\t\t\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\t\t\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\t\t\tButton.VSplitLeft(10.0f, 0, &Button);\n+\t\t\tstatic CButtonContainer s_Checkbox;\n+\t\t\tif(DoButton_CheckBox(&s_Checkbox, Localize(\"Enable rifle sound\"), g_Config.m_SndRifle, &Button))\n+\t\t\t\tg_Config.m_SndRifle ^= 1;\n+\t\t}\n+\n+\t\t{\n+\t\t\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\t\t\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\t\t\tButton.VSplitLeft(10.0f, 0, &Button);\n+\t\t\tstatic CButtonContainer s_Checkbox;\n+\t\t\tif(DoButton_CheckBox(&s_Checkbox, Localize(\"Enable spawn sound\"), g_Config.m_SndSpawn, &Button))\n+\t\t\t\tg_Config.m_SndSpawn ^= 1;\n+\t\t}\n+\n+\t\t// TODO: Add more game sounds here!\n+\t}\n+\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_CheckboxSndServerMessage;\n+\tif(DoButton_CheckBox(&s_CheckboxSndServerMessage, Localize(\"Enable server message sound\"), g_Config.m_SndServerMessage, &Button))\n+\t\tg_Config.m_SndServerMessage ^= 1;\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_CheckboxSndChat;\n+\tif(DoButton_CheckBox(&s_CheckboxSndChat, Localize(\"Enable regular chat sound\"), g_Config.m_SndChat, &Button))\n+\t\tg_Config.m_SndChat ^= 1;\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_CheckboxSndTeamChat;\n+\tif(DoButton_CheckBox(&s_CheckboxSndTeamChat, Localize(\"Enable team chat sound\"), g_Config.m_SndTeamChat, &Button))\n+\t\tg_Config.m_SndTeamChat ^= 1;\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_CheckboxSndHighlight;\n+\tif(DoButton_CheckBox(&s_CheckboxSndHighlight, Localize(\"Enable highlighted chat sound\"), g_Config.m_SndHighlight, &Button))\n+\t\tg_Config.m_SndHighlight ^= 1;\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_CheckboxSndIRC;\n+\tif(DoButton_CheckBox(&s_CheckboxSndIRC, Localize(\"Enable irc chat sound\"), g_Config.m_SndIRC, &Button))\n+\t\tg_Config.m_SndIRC ^= 1;\n+\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tstatic CButtonContainer s_CheckboxSndThread;\n+\tif(DoButton_CheckBox(&s_CheckboxSndThread, Localize(\"Threaded sound loading\"), g_Config.m_ClThreadsoundloading, &Button))\n+\t\tg_Config.m_ClThreadsoundloading ^= 1;\n+\n+\t// sample rate box\n+\tMainView.HSplitTop(3.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\t{\n+\t\tchar aBuf[64];\n+\t\tstr_format(aBuf, sizeof(aBuf), \"%d\", g_Config.m_SndRate);\n+\t\tUI()->DoLabelScaled(&Button, Localize(\"Sample rate\"), 14.0f, -1);\n+\t\tButton.VSplitLeft(200.0f, 0, &Button);\n+\t\tstatic float Offset = 0.0f;\n+\t\tstatic CButtonContainer s_EditboxSndRate;\n+\t\tDoEditBox(&s_EditboxSndRate, &Button, aBuf, sizeof(aBuf), 14.0f, &Offset);\n+\t\tg_Config.m_SndRate = max(1, str_toint(aBuf));\n+\t\tm_NeedRestartSound = !s_SndEnable || s_SndRate != g_Config.m_SndRate;\n+\t}\n+\n+\t// volume slider\n+\t{\n+\t\tCUIRect Button, Label;\n+\t\tMainView.HSplitTop(5.0f, &Button, &MainView);\n+\t\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\t\tButton.VSplitLeft(200.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Sound volume\"), 14.0f, -1);\n+\t\tstatic CButtonContainer s_Scrollbar;\n+\t\tg_Config.m_SndVolume = round_to_int(DoScrollbarH(&s_Scrollbar, &Button, g_Config.m_SndVolume/100.0f, 0, g_Config.m_SndVolume)*100.0f);\n+\t}\n+\n+\t// volume slider map sounds\n+\t{\n+\t\tCUIRect Button, Label;\n+\t\tMainView.HSplitTop(5.0f, &Button, &MainView);\n+\t\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\t\tButton.VSplitLeft(200.0f, &Label, &Button);\n+\t\tButton.HMargin(2.0f, &Button);\n+\t\tUI()->DoLabelScaled(&Label, Localize(\"Map sound volume\"), 14.0f, -1);\n+\t\tstatic CButtonContainer s_Scrollbar;\n+\t\tg_Config.m_SndMapSoundVolume = round_to_int(DoScrollbarH(&s_Scrollbar, &Button, g_Config.m_SndMapSoundVolume/100.0f, 0, g_Config.m_SndMapSoundVolume)*100.0f);\n+\t}\n+}"
    },
    {
      "sha": "07ba97e6acc81477bedf5f6406cb312efbfbd923",
      "filename": "src/game/client/components/menus_settings/settings_tee.cpp",
      "status": "added",
      "additions": 328,
      "deletions": 0,
      "changes": 328,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_tee.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_settings/settings_tee.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/menus_settings/settings_tee.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -0,0 +1,328 @@\n+#include \"../menus.h\"\n+\n+#include <engine/graphics.h>\n+#include <engine/textrender.h>\n+#include <game/generated/client_data.h>\n+#include <game/client/animstate.h>\n+#include \"../identity.h\"\n+\n+void CMenus::RenderSettingsTee(CUIRect MainView)\n+{\n+\tCALLSTACK_ADD();\n+\n+\tCUIRect Button, Label, Button2, Dummy, DummyLabel, SkinList, QuickSearch, QuickSearchClearButton;\n+\n+\tMainView.HSplitTop(10.0f, 0, &MainView);\n+\n+\tchar *Skin = g_Config.m_ClPlayerSkin;\n+\tint *UseCustomColor = &g_Config.m_ClPlayerUseCustomColor;\n+\tint *ColorBody = &g_Config.m_ClPlayerColorBody;\n+\tint *ColorFeet = &g_Config.m_ClPlayerColorFeet;\n+\n+\tif(m_Dummy)\n+\t{\n+\t\tSkin = g_Config.m_ClDummySkin;\n+\t\tUseCustomColor = &g_Config.m_ClDummyUseCustomColor;\n+\t\tColorBody = &g_Config.m_ClDummyColorBody;\n+\t\tColorFeet = &g_Config.m_ClDummyColorFeet;\n+\t}\n+\n+\t// skin info\n+\tconst CSkins::CSkin *pOwnSkin = m_pClient->m_pSkins->Get(m_pClient->m_pSkins->Find(Skin));\n+\tCTeeRenderInfo OwnSkinInfo;\n+\tif(*UseCustomColor)\n+\t{\n+\t\tOwnSkinInfo.m_Texture = pOwnSkin->m_ColorTexture;\n+\t\tOwnSkinInfo.m_ColorBody = m_pClient->m_pSkins->GetColorV4(*ColorBody);\n+\t\tOwnSkinInfo.m_ColorFeet = m_pClient->m_pSkins->GetColorV4(*ColorFeet);\n+\t}\n+\telse\n+\t{\n+\t\tOwnSkinInfo.m_Texture = pOwnSkin->m_OrgTexture;\n+\t\tOwnSkinInfo.m_ColorBody = vec4(1.0f, 1.0f, 1.0f, 1.0f);\n+\t\tOwnSkinInfo.m_ColorFeet = vec4(1.0f, 1.0f, 1.0f, 1.0f);\n+\t}\n+\tOwnSkinInfo.m_Size = 50.0f*UI()->Scale();\n+\n+\tMainView.HSplitTop(20.0f, &Label, &MainView);\n+\tLabel.VSplitLeft(280.0f, &Label, &Dummy);\n+\tLabel.VSplitLeft(230.0f, &Label, 0);\n+\tchar aBuf[128];\n+\tstr_format(aBuf, sizeof(aBuf), \"%s:\", Localize(\"Your skin\"));\n+\tUI()->DoLabelScaled(&Label, aBuf, 14.0f, -1);\n+\n+\tCUIRect Right;\n+\tDummy.HSplitTop(20.0f, 0, &Dummy);\n+\tDummy.VSplitLeft(Dummy.w/2.3f, &Dummy, &Right);\n+\n+\tDummy.HSplitTop(20.0f, &DummyLabel, &Dummy);\n+\tstatic int s_SkinFilter;\n+\tstatic CButtonContainer s_ButtonSkinFilter;\n+\tchar aFilterLabel[32];\n+\tstr_format(aFilterLabel, sizeof(aFilterLabel), \"Filter: %s\", s_SkinFilter == 0 ? Localize(\"All Skins\") : s_SkinFilter == 1 ? Localize(\"Vanilla Skins only\") : s_SkinFilter == 2 ? Localize(\"Non-Vanilla Skins only\") : \"\");\n+\tif(DoButton_CheckBox_Number(&s_ButtonSkinFilter, aFilterLabel, s_SkinFilter, &DummyLabel))\n+\t{\n+\t\tif(++s_SkinFilter > 2) s_SkinFilter = 0;\n+\t\tm_InitSkinlist = true;\n+\t}\n+\n+\tRight.VSplitLeft(10.0f, 0, &Right);\n+\tRight.HSplitTop(20.0f, &Right, 0);\n+\tstatic CButtonContainer s_VanillaSkinsOnly;\n+\tif(DoButton_CheckBox(&s_VanillaSkinsOnly, Localize(\"Allow Vanilla Skins only\"), g_Config.m_ClVanillaSkinsOnly, &Right))\n+\t{\n+\t\tg_Config.m_ClVanillaSkinsOnly ^= 1;\n+\t\tGameClient()->m_pSkins->RefreshSkinList();\n+\t\tm_InitSkinlist = true;\n+\t}\n+\n+\tDummy.HSplitTop(5.0f, 0, &Dummy);\n+\tDummy.HSplitTop(20.0f, &DummyLabel, &Dummy);\n+\tstatic CButtonContainer s_DummySettings;\n+\tif(DoButton_CheckBox(&s_DummySettings, Localize(\"Dummy settings\"), m_Dummy, &DummyLabel))\n+\t{\n+\t\tm_Dummy ^= 1;\n+\t}\n+\n+\tDummy.HSplitTop(5.0f, 0, &Dummy);\n+\tDummy.HSplitTop(20.0f, &DummyLabel, &Dummy);\n+\tstatic int s_SkinSaveAsIdentClicked = 0;\n+\tif(s_SkinSaveAsIdentClicked == 0)\n+\t{\n+\t\tstatic CButtonContainer s_Button;\n+\t\tif(DoButton_Menu(&s_Button, Localize(\"Save Skin as new Identity\"), 0, &DummyLabel))\n+\t\t\ts_SkinSaveAsIdentClicked = 1;\n+\t}\n+\telse if(s_SkinSaveAsIdentClicked == 1)\n+\t{\n+\t\tCUIRect DummyLabelRight;\n+\t\tDummyLabel.VSplitRight(30.0f, &DummyLabel, &DummyLabelRight);\n+\n+\t\tstatic float s_NewIdentName = 0.0f;\n+\t\tstatic char aName[16];\n+\t\tstatic CButtonContainer s_NewIdentNameEditbox;\n+\t\tDoEditBox(&s_NewIdentNameEditbox, &DummyLabel, aName, sizeof(aName), 10, &s_NewIdentName, false, CUI::CORNER_L, g_Config.m_PlayerName);\n+\n+\t\tstatic CButtonContainer s_OkButton;\n+\t\tif(DoButton_Menu(&s_OkButton, Localize(\"Ok\"), 0, &DummyLabelRight, 0, CUI::CORNER_R))\n+\t\t{\n+\t\t\tCIdentity::CIdentEntry Entry;\n+\t\t\tmem_zero(&Entry, sizeof(Entry));\n+\t\t\tstr_format(Entry.m_aName, sizeof(Entry.m_aName), str_comp(aName, \"\") != 0 ? aName : g_Config.m_PlayerName);\n+\t\t\tstr_format(Entry.m_aClan, sizeof(Entry.m_aClan), g_Config.m_PlayerClan);\n+\t\t\tstr_format(Entry.m_aSkin, sizeof(Entry.m_aSkin), g_Config.m_ClPlayerSkin);\n+\t\t\tEntry.m_UseCustomColor = g_Config.m_ClPlayerUseCustomColor;\n+\t\t\tEntry.m_ColorBody = g_Config.m_ClPlayerColorBody;\n+\t\t\tEntry.m_ColorFeet = g_Config.m_ClPlayerColorFeet;\n+\t\t\tm_pClient->m_pIdentity->AddIdent(Entry);\n+\t\t\ts_SkinSaveAsIdentClicked = 2;\n+\t\t}\n+\t}\n+\telse if(s_SkinSaveAsIdentClicked == 2)\n+\t{\n+\t\tchar aBuf[64];\n+\t\tstatic float s_StartTime = -1.0f;\n+\t\tif(s_StartTime < 0.0f)\n+\t\t\ts_StartTime = Client()->LocalTime();\n+\t\tstr_format(aBuf, sizeof(aBuf), Localize(\"New Identity '%s' created!\"), m_pClient->m_pIdentity->GetIdent(m_pClient->m_pIdentity->NumIdents()-1)->m_aName);\n+\t\tTextRender()->TextColor(0.0f, 1.0f,\n+\t\t\t\t\t\t\t\t1.0f - ((s_StartTime + 4.0f) - Client()->LocalTime()) / 4.0f,\n+\t\t\t\t\t\t\t\t((s_StartTime + 3.5f) - Client()->LocalTime()) / 3.5f);\n+\t\tTextRender()->Text(0, DummyLabel.x, DummyLabel.y, 15, aBuf, 800);\n+\t\tTextRender()->TextColor(1,1,1,1);\n+\t\tif(Client()->LocalTime() > s_StartTime + 4.0f)\n+\t\t{\n+\t\t\ts_StartTime = -1.0f;\n+\t\t\ts_SkinSaveAsIdentClicked = 0;\n+\t\t}\n+\t}\n+\n+\tDummy.HSplitTop(20.0f, &DummyLabel, &Dummy);\n+\n+\tMainView.HSplitTop(50.0f, &Label, &MainView);\n+\tLabel.VSplitLeft(230.0f, &Label, 0);\n+\tRenderTools()->DrawUIRect(&Label, vec4(1.0f, 1.0f, 1.0f, 0.25f), CUI::CORNER_ALL, 10.0f);\n+\tRenderTools()->RenderTee(CAnimState::GetIdle(), &OwnSkinInfo, 0, vec2(1, 0), vec2(Label.x+30.0f, Label.y+28.0f));\n+\tLabel.HSplitTop(15.0f, 0, &Label);\n+\tLabel.VSplitLeft(70.0f, 0, &Label);\n+\tUI()->DoLabelScaled(&Label, Skin, 14.0f, -1, 150);\n+\n+\t// custom color selector\n+\tMainView.HSplitTop(20.0f, 0, &MainView);\n+\tMainView.HSplitTop(20.0f, &Button, &MainView);\n+\tButton.VSplitMid(&Button, &Button2);\n+\t{\n+\t\tCUIRect bt = Button;\n+\t\tbt.w /= 2.0f;\n+\t\tstatic CButtonContainer s_ColorBody;\n+\t\tif(DoButton_CheckBox(&s_ColorBody, Localize(\"Custom colors\"), *UseCustomColor, &bt))\n+\t\t{\n+\t\t\t*UseCustomColor = *UseCustomColor?0:1;\n+\t\t\tif(m_Dummy)\n+\t\t\t\tm_NeedSendDummyinfo = true;\n+\t\t\telse\n+\t\t\t\tm_NeedSendinfo = true;\n+\t\t}\n+\t}\n+\n+\tMainView.HSplitTop(5.0f, 0, &MainView);\n+\tMainView.HSplitTop(82.5f, &Label, &MainView);\n+\tif(*UseCustomColor)\n+\t{\n+\t\tCUIRect aRects[2];\n+\t\tLabel.VSplitMid(&aRects[0], &aRects[1]);\n+\t\taRects[0].VSplitRight(10.0f, &aRects[0], 0);\n+\t\taRects[1].VSplitLeft(10.0f, 0, &aRects[1]);\n+\n+\t\tint *paColors[2];\n+\t\tpaColors[0] = ColorBody;\n+\t\tpaColors[1] = ColorFeet;\n+\n+\t\tconst char *paParts[] = {\n+\t\t\tLocalize(\"Body\"),\n+\t\t\tLocalize(\"Feet\")};\n+\t\tconst char *paLabels[] = {\n+\t\t\tLocalize(\"Hue\"),\n+\t\t\tLocalize(\"Sat.\"),\n+\t\t\tLocalize(\"Lht.\")};\n+\t\tstatic int s_aColorSlider[2][3] = {{0}};\n+\n+\t\tfor(int i = 0; i < 2; i++)\n+\t\t{\n+\t\t\taRects[i].HSplitTop(20.0f, &Label, &aRects[i]);\n+\t\t\tUI()->DoLabelScaled(&Label, paParts[i], 14.0f, -1);\n+\t\t\taRects[i].VSplitLeft(20.0f, 0, &aRects[i]);\n+\t\t\taRects[i].HSplitTop(2.5f, 0, &aRects[i]);\n+\n+\t\t\tint PrevColor = *paColors[i];\n+\t\t\tint Color = 0;\n+\t\t\tfor(int s = 0; s < 3; s++)\n+\t\t\t{\n+\t\t\t\taRects[i].HSplitTop(20.0f, &Label, &aRects[i]);\n+\t\t\t\tLabel.VSplitLeft(100.0f, &Label, &Button);\n+\t\t\t\tButton.HMargin(2.0f, &Button);\n+\n+\t\t\t\tfloat k = ((PrevColor>>((2-s)*8))&0xff) / 255.0f;\n+\t\t\t\tCPointerContainer Container(&s_aColorSlider[i][s]);\n+\t\t\t\tk = DoScrollbarH(&Container, &Button, k, 0, k*255.0f);\n+\t\t\t\tColor <<= 8;\n+\t\t\t\tColor += clamp((int)(k*255), 0, 255);\n+\t\t\t\tUI()->DoLabelScaled(&Label, paLabels[s], 14.0f, -1);\n+\t\t\t}\n+\n+\t\t\tif(PrevColor != Color)\n+\t\t\t{\n+\t\t\t\tif(m_Dummy)\n+\t\t\t\t\tm_NeedSendDummyinfo = true;\n+\t\t\t\telse\n+\t\t\t\t\tm_NeedSendinfo = true;\n+\t\t\t}\n+\n+\t\t\t*paColors[i] = Color;\n+\t\t}\n+\t}\n+\n+\t// skin selector\n+\tMainView.HSplitTop(20.0f, 0, &MainView);\n+\tMainView.HSplitTop(230.0f, &SkinList, &MainView);\n+\tstatic float s_ScrollValue = 0.0f;\n+\tint OldSelected = -1;\n+\tstatic CButtonContainer s_Listbox;\n+\tUiDoListboxStart(&s_Listbox, &SkinList, 50.0f, Localize(\"Skins\"), \"\", m_apSkinList.size(), 4, OldSelected, s_ScrollValue);\n+\tfor(int i = 0; i < m_apSkinList.size(); ++i)\n+\t{\n+\t\tconst CSkins::CSkin *s = m_apSkinList[i];\n+\t\tif(s == 0)\n+\t\t\tcontinue;\n+\n+\t\tif(str_comp(s->m_aName, Skin) == 0)\n+\t\t\tOldSelected = i;\n+\n+\t\tCPointerContainer Container(&m_apSkinList[i]);\n+\t\tCListboxItem Item = UiDoListboxNextItem(&Container, OldSelected == i);\n+\t\tchar aBuf[128];\n+\t\tif(Item.m_Visible)\n+\t\t{\n+\t\t\tCTeeRenderInfo Info;\n+\t\t\tif(*UseCustomColor)\n+\t\t\t{\n+\t\t\t\tInfo.m_Texture = s->m_ColorTexture;\n+\t\t\t\tInfo.m_ColorBody = m_pClient->m_pSkins->GetColorV4(*ColorBody);\n+\t\t\t\tInfo.m_ColorFeet = m_pClient->m_pSkins->GetColorV4(*ColorFeet);\n+\t\t\t}\n+\t\t\telse\n+\t\t\t{\n+\t\t\t\tInfo.m_Texture = s->m_OrgTexture;\n+\t\t\t\tInfo.m_ColorBody = vec4(1.0f, 1.0f, 1.0f, 1.0f);\n+\t\t\t\tInfo.m_ColorFeet = vec4(1.0f, 1.0f, 1.0f, 1.0f);\n+\t\t\t}\n+\n+\t\t\tInfo.m_Size = UI()->Scale()*50.0f;\n+\t\t\tItem.m_Rect.HSplitTop(5.0f, 0, &Item.m_Rect); // some margin from the top\n+\t\t\tRenderTools()->RenderTee(CAnimState::GetIdle(), &Info, 0, vec2(1.0f, 0.0f), vec2(Item.m_Rect.x+30, Item.m_Rect.y+Item.m_Rect.h/2));\n+\n+\n+\t\t\tItem.m_Rect.VSplitLeft(60.0f, 0, &Item.m_Rect);\n+\t\t\tItem.m_Rect.HSplitTop(10.0f, 0, &Item.m_Rect);\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"%s\", s->m_aName);\n+\t\t\tRenderTools()->UI()->DoLabelScaled(&Item.m_Rect, aBuf, 12.0f, -1, Item.m_Rect.w, g_Config.m_ClSkinFilterString);\n+\t\t\tif(g_Config.m_Debug)\n+\t\t\t{\n+\t\t\t\tvec3 BloodColor = *UseCustomColor ? m_pClient->m_pSkins->GetColorV3(*ColorBody) : s->m_BloodColor;\n+\t\t\t\tGraphics()->TextureSet(-1);\n+\t\t\t\tGraphics()->QuadsBegin();\n+\t\t\t\tGraphics()->SetColor(BloodColor.r, BloodColor.g, BloodColor.b, 1.0f);\n+\t\t\t\tIGraphics::CQuadItem QuadItem(Item.m_Rect.x, Item.m_Rect.y, 12.0f, 12.0f);\n+\t\t\t\tGraphics()->QuadsDrawTL(&QuadItem, 1);\n+\t\t\t\tGraphics()->QuadsEnd();\n+\t\t\t}\n+\t\t}\n+\t}\n+\n+\tconst int NewSelected = UiDoListboxEnd(&s_ScrollValue, 0);\n+\tif(OldSelected != NewSelected)\n+\t{\n+\t\tmem_copy(Skin, m_apSkinList[NewSelected]->m_aName, sizeof(g_Config.m_ClPlayerSkin));\n+\t\tif(m_Dummy)\n+\t\t\tm_NeedSendDummyinfo = true;\n+\t\telse\n+\t\t\tm_NeedSendinfo = true;\n+\t}\n+\n+\t// render quick search and refresh (bottom bar)\n+\t{\n+\t\tCUIRect Refresh;\n+\t\tMainView.HSplitBottom(ms_ButtonHeight, &MainView, &QuickSearch);\n+\t\tQuickSearch.HSplitTop(5.0f, 0, &QuickSearch);\n+\t\tQuickSearch.VSplitLeft(240.0f, &QuickSearch, &Refresh);\n+\t\tUI()->DoLabelScaled(&QuickSearch, \"⚲\", 14.0f, -1);\n+\t\tfloat wSearch = TextRender()->TextWidth(0, 14.0f, \"⚲\", -1);\n+\t\tQuickSearch.VSplitLeft(wSearch, 0, &QuickSearch);\n+\t\tQuickSearch.VSplitLeft(5.0f, 0, &QuickSearch);\n+\t\tQuickSearch.VSplitLeft(QuickSearch.w-15.0f, &QuickSearch, &QuickSearchClearButton);\n+\t\tstatic float Offset = 0.0f;\n+\t\tstatic CButtonContainer s_SkinFilterString;\n+\t\tif(DoEditBox(&s_SkinFilterString, &QuickSearch, g_Config.m_ClSkinFilterString, sizeof(g_Config.m_ClSkinFilterString), 14.0f, &Offset, false, CUI::CORNER_L, Localize(\"Search\")))\n+\t\t\tm_InitSkinlist = true;\n+\n+\t\t// clear button\n+\t\t{\n+\t\t\tCPointerContainer s_ClearButton(&g_Config.m_ClSkinFilterString);\n+\t\t\tif(DoButton_Menu(&s_ClearButton, \"×\", 0, &QuickSearchClearButton, \"clear\", CUI::CORNER_R, vec4(1,1,1,0.33f)))\n+\t\t\t{\n+\t\t\t\tg_Config.m_ClSkinFilterString[0] = 0;\n+\t\t\t\tUI()->SetActiveItem(&g_Config.m_ClSkinFilterString);\n+\t\t\t\tm_InitSkinlist = true;\n+\t\t\t}\n+\t\t}\n+\n+\t\tRefresh.VSplitLeft(5.0f, 0, &Refresh);\n+\t\tRefresh.VSplitLeft(150.0f, &Refresh, 0);\n+\t\tstatic CButtonContainer s_RefreshButton;\n+\t\tif(DoButton_Menu(&s_RefreshButton, Localize(\"Refresh\"), 0, &Refresh))\n+\t\t{\n+\t\t\tGameClient()->m_pSkins->RefreshSkinList();\n+\t\t\tm_InitSkinlist = true;\n+\t\t}\n+\t}\n+}"
    },
    {
      "sha": "bcb14abfa68fdb4825baee88b999b98a5c858615",
      "filename": "src/game/client/components/menus_texture.cpp",
      "status": "modified",
      "additions": 93,
      "deletions": 34,
      "changes": 127,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_texture.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/menus_texture.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/menus_texture.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -23,24 +23,29 @@ void CMenus::RenderSettingsTexture(CUIRect MainView)\n \n \t// tab bar\n \t{\n-\t\tTabBar.VSplitLeft(TabBar.w/4, &Button, &TabBar);\n+\t\tTabBar.VSplitLeft(TabBar.w/5, &Button, &TabBar);\n \t\tstatic CButtonContainer s_Button0;\n \t\tif(DoButton_MenuTab(&s_Button0, Localize(\"Gameskin\"), s_ControlPage == 0, &Button, CUI::CORNER_L))\n \t\t\ts_ControlPage = 0;\n \n-\t\tTabBar.VSplitLeft(TabBar.w/3, &Button, &TabBar);\n+\t\tTabBar.VSplitLeft(TabBar.w/4, &Button, &TabBar);\n \t\tstatic CButtonContainer s_Button1;\n \t\tif(DoButton_MenuTab(&s_Button1, Localize(\"Particles\"), s_ControlPage == 1, &Button, 0))\n \t\t\ts_ControlPage = 1;\n \n-\t\tTabBar.VSplitMid(&Button, &TabBar);\n+\t\tTabBar.VSplitLeft(TabBar.w/3, &Button, &TabBar);\n \t\tstatic CButtonContainer s_Button2;\n \t\tif(DoButton_MenuTab(&s_Button2, Localize(\"Emoticons\"), s_ControlPage == 2, &Button, 0))\n \t\t\ts_ControlPage = 2;\n \n+\t\tTabBar.VSplitMid(&Button, &TabBar);\n \t\tstatic CButtonContainer s_Button3;\n-\t\tif(DoButton_MenuTab(&s_Button3, Localize(\"Cursor\"), s_ControlPage == 3, &TabBar, CUI::CORNER_R))\n+\t\tif(DoButton_MenuTab(&s_Button3, Localize(\"Cursor\"), s_ControlPage == 3, &Button, 0))\n \t\t\ts_ControlPage = 3;\n+\n+\t\tstatic CButtonContainer s_Button4;\n+\t\tif(DoButton_MenuTab(&s_Button4, Localize(\"X-Ray Entities\"), s_ControlPage == 4, &TabBar, CUI::CORNER_R))\n+\t\t\ts_ControlPage = 4;\n \t}\n \n \t// render page\n@@ -52,6 +57,8 @@ void CMenus::RenderSettingsTexture(CUIRect MainView)\n \t\tRenderSettingsEmoticons(MainView);\n \telse if(s_ControlPage == 3)\n \t\tRenderSettingsCursor(MainView);\n+\telse if(s_ControlPage == 4)\n+\t\tRenderSettingsEntities(MainView);\n \telse\n \t\ts_ControlPage = 0;\n }\n@@ -87,27 +94,26 @@ void CMenus::RenderSettingsGameskin(CUIRect MainView)\n \t\t\tItem.m_Rect.Margin(5.0f, &Item.m_Rect);\n \t\t\tItem.m_Rect.HSplitBottom(10.0f, &Item.m_Rect, &Label);\n \n-\t\t\tint gTexture = s->Texture();\n-\t\t\tif(gTexture <= 0) if((gTexture = m_pClient->m_pGameTextureManager->FindTexture(CGameTextureManager::TEXTURE_GROUP_GAME, s->m_aName)) <= 0) continue;\n-\t\t\tchar gName[512];\n-\t\t\tstr_format(gName, sizeof(gName), \"%s\", s->m_aName);\n-\t\t\tGraphics()->TextureSet(gTexture);\n+\t\t\tint Texture = s->Texture();\n+\t\t\tif(Texture <= 0) if((Texture = m_pClient->m_pGameTextureManager->FindTexture(CGameTextureManager::TEXTURE_GROUP_GAME, s->m_aName)) <= 0) continue;\n+\t\t\tchar aName[512];\n+\t\t\tstr_copyb(aName, s->m_aName);\n+\t\t\tGraphics()->TextureSet(Texture);\n \t\t\tGraphics()->QuadsBegin();\n \t\t\tIGraphics::CQuadItem QuadItem(Item.m_Rect.x+Item.m_Rect.w/2 - 120.0f, Item.m_Rect.y+Item.m_Rect.h/2 - 60.0f, 240.0f, 120.0f);\n \t\t\tGraphics()->QuadsDrawTL(&QuadItem, 1);\n \t\t\tGraphics()->QuadsEnd();\n-\t\t\tUI()->DoLabel(&Label, gName, 10.0f, 0);\n+\t\t\tUI()->DoLabel(&Label, aName, 10.0f, 0);\n \t\t}\n \t}\n \n \tconst int NewSelected = UiDoListboxEnd(&s_ScrollValue, 0);\n \tif(OldSelected != NewSelected)\n \t{\n-\t\tmem_copy(g_Config.m_TexGame, s_aSkinList[NewSelected].m_aName, sizeof(g_Config.m_TexGame));\n+\t\tstr_copy(g_Config.m_TexGame, s_aSkinList[NewSelected].m_aName, sizeof(g_Config.m_TexGame));\n \t\tm_pClient->m_pGameTextureManager->SetTexture(IMAGE_GAME, g_Config.m_TexGame);\n \t}\n }\n-\t\n \n void CMenus::RenderSettingsParticles(CUIRect MainView)\n {\n@@ -141,23 +147,23 @@ void CMenus::RenderSettingsParticles(CUIRect MainView)\n \t\t\tItem.m_Rect.Margin(5.0f, &Item.m_Rect);\n \t\t\tItem.m_Rect.HSplitBottom(10.0f, &Item.m_Rect, &Label);\n \n-\t\t\tint gTexture = s->Texture();\n-\t\t\tif(gTexture <= 0) if((gTexture = m_pClient->m_pGameTextureManager->FindTexture(CGameTextureManager::TEXTURE_GROUP_PARTICLES, s->m_aName)) <= 0) continue;\n-\t\t\tchar gName[512];\n-\t\t\tstr_format(gName, sizeof(gName), \"%s\", s->m_aName);\n-\t\t\tGraphics()->TextureSet(gTexture);\n+\t\t\tint Texture = s->Texture();\n+\t\t\tif(Texture <= 0) if((Texture = m_pClient->m_pGameTextureManager->FindTexture(CGameTextureManager::TEXTURE_GROUP_PARTICLES, s->m_aName)) <= 0) continue;\n+\t\t\tchar aName[512];\n+\t\t\tstr_copyb(aName, s->m_aName);\n+\t\t\tGraphics()->TextureSet(Texture);\n \t\t\tGraphics()->QuadsBegin();\n \t\t\tIGraphics::CQuadItem QuadItem(Item.m_Rect.x+Item.m_Rect.w/2 - 60.0f, Item.m_Rect.y+Item.m_Rect.h/2 - 60.0f, 120.0f, 120.0f);\n \t\t\tGraphics()->QuadsDrawTL(&QuadItem, 1);\n \t\t\tGraphics()->QuadsEnd();\n-\t\t\tUI()->DoLabel(&Label, gName, 10.0f, 0);\n+\t\t\tUI()->DoLabel(&Label, aName, 10.0f, 0);\n \t\t}\n \t}\n \n \tconst int NewSelected = UiDoListboxEnd(&s_ScrollValue, 0);\n \tif(OldSelected != NewSelected)\n \t{\n-\t\tmem_copy(g_Config.m_TexParticles, s_aSkinList[NewSelected].m_aName, sizeof(g_Config.m_TexParticles));\n+\t\tstr_copy(g_Config.m_TexParticles, s_aSkinList[NewSelected].m_aName, sizeof(g_Config.m_TexParticles));\n \t\tm_pClient->m_pGameTextureManager->SetTexture(IMAGE_PARTICLES, g_Config.m_TexParticles);\n \t}\n }\n@@ -193,23 +199,23 @@ void CMenus::RenderSettingsEmoticons(CUIRect MainView)\n \t\t\tItem.m_Rect.Margin(5.0f, &Item.m_Rect);\n \t\t\tItem.m_Rect.HSplitBottom(10.0f, &Item.m_Rect, &Label);\n \n-\t\t\tint gTexture = s->Texture();\n-\t\t\tif(gTexture <= 0) if((gTexture = m_pClient->m_pGameTextureManager->FindTexture(CGameTextureManager::TEXTURE_GROUP_EMOTE, s->m_aName)) <= 0) continue;\n-\t\t\tchar gName[512];\n-\t\t\tstr_format(gName, sizeof(gName), \"%s\", s->m_aName);\n-\t\t\tGraphics()->TextureSet(gTexture);\n+\t\t\tint Texture = s->Texture();\n+\t\t\tif(Texture <= 0) if((Texture = m_pClient->m_pGameTextureManager->FindTexture(CGameTextureManager::TEXTURE_GROUP_EMOTE, s->m_aName)) <= 0) continue;\n+\t\t\tchar aName[512];\n+\t\t\tstr_copyb(aName, s->m_aName);\n+\t\t\tGraphics()->TextureSet(Texture);\n \t\t\tGraphics()->QuadsBegin();\n \t\t\tIGraphics::CQuadItem QuadItem(Item.m_Rect.x+Item.m_Rect.w/2 - 60.0f, Item.m_Rect.y+Item.m_Rect.h/2 - 60.0f, 120.0f, 120.0f);\n \t\t\tGraphics()->QuadsDrawTL(&QuadItem, 1);\n \t\t\tGraphics()->QuadsEnd();\n-\t\t\tUI()->DoLabel(&Label, gName, 10.0f, 0);\n+\t\t\tUI()->DoLabel(&Label, aName, 10.0f, 0);\n \t\t}\n \t}\n \n \tconst int NewSelected = UiDoListboxEnd(&s_ScrollValue, 0);\n \tif(OldSelected != NewSelected)\n \t{\n-\t\tmem_copy(g_Config.m_TexEmoticons, s_aSkinList[NewSelected].m_aName, sizeof(g_Config.m_TexEmoticons));\n+\t\tstr_copy(g_Config.m_TexEmoticons, s_aSkinList[NewSelected].m_aName, sizeof(g_Config.m_TexEmoticons));\n \t\tm_pClient->m_pGameTextureManager->SetTexture(IMAGE_EMOTICONS, g_Config.m_TexEmoticons);\n \t}\n }\n@@ -245,23 +251,76 @@ void CMenus::RenderSettingsCursor(CUIRect MainView)\n \t\t\tItem.m_Rect.Margin(5.0f, &Item.m_Rect);\n \t\t\tItem.m_Rect.HSplitBottom(10.0f, &Item.m_Rect, &Label);\n \n-\t\t\tint gTexture = s->Texture();\n-\t\t\tif(gTexture <= 0) if((gTexture = m_pClient->m_pGameTextureManager->FindTexture(CGameTextureManager::TEXTURE_GROUP_CURSOR, s->m_aName)) <= 0) continue;\n-\t\t\tchar gName[512];\n-\t\t\tstr_format(gName, sizeof(gName), \"%s\", s->m_aName);\n-\t\t\tGraphics()->TextureSet(gTexture);\n+\t\t\tint Texture = s->Texture();\n+\t\t\tif(Texture <= 0) if((Texture = m_pClient->m_pGameTextureManager->FindTexture(CGameTextureManager::TEXTURE_GROUP_CURSOR, s->m_aName)) <= 0) continue;\n+\t\t\tchar aName[512];\n+\t\t\tstr_copyb(aName, s->m_aName);\n+\t\t\tGraphics()->TextureSet(Texture);\n+\t\t\tGraphics()->QuadsBegin();\n+\t\t\tIGraphics::CQuadItem QuadItem(Item.m_Rect.x+Item.m_Rect.w/2 - 60.0f, Item.m_Rect.y+Item.m_Rect.h/2 - 60.0f, 120.0f, 120.0f);\n+\t\t\tGraphics()->QuadsDrawTL(&QuadItem, 1);\n+\t\t\tGraphics()->QuadsEnd();\n+\t\t\tUI()->DoLabel(&Label, aName, 10.0f, 0);\n+\t\t}\n+\t}\n+\n+\tconst int NewSelected = UiDoListboxEnd(&s_ScrollValue, 0);\n+\tif(OldSelected != NewSelected)\n+\t{\n+\t\tstr_copy(g_Config.m_TexCursor, s_aSkinList[NewSelected].m_aName, sizeof(g_Config.m_TexCursor));\n+\t\tm_pClient->m_pGameTextureManager->SetTexture(IMAGE_HUDCURSOR, g_Config.m_TexCursor);\n+\t}\n+}\n+\n+void CMenus::RenderSettingsEntities(CUIRect MainView)\n+{\n+\tCALLSTACK_ADD();\n+\n+\tMainView.HSplitTop(10.0f, 0, &MainView);\n+\n+\t// skin selector\n+\tstatic const sorted_array<CGameTextureManager::CGameSkin>& s_aSkinList = m_pClient->m_pGameTextureManager->GetGroup(CGameTextureManager::TEXTURE_GROUP_ENTITIES);\n+\tstatic float s_ScrollValue = 0.0f;\n+\n+\tint OldSelected = -1;\n+\tstatic CButtonContainer s_Listbox;\n+\tUiDoListboxStart(&s_Listbox, &MainView, 160.0f, Localize(\"Entities\"), \"\", s_aSkinList.size(), 3, OldSelected, s_ScrollValue);\n+\n+\tfor(int i = 0; i < s_aSkinList.size(); ++i)\n+\t{\n+\t\tconst CGameTextureManager::CGameSkin *s = &s_aSkinList[i];\n+\t\tif(s == 0)\n+\t\t\tcontinue;\n+\n+\t\tif(str_comp(s->m_aName, g_Config.m_TexEntities) == 0)\n+\t\t\tOldSelected = i;\n+\n+\t\tCPointerContainer Container(s);\n+\t\tCListboxItem Item = UiDoListboxNextItem(&Container, OldSelected == i);\n+\t\tif(Item.m_Visible)\n+\t\t{\n+\t\t\tCUIRect Label;\n+\t\t\tItem.m_Rect.Margin(5.0f, &Item.m_Rect);\n+\t\t\tItem.m_Rect.HSplitBottom(10.0f, &Item.m_Rect, &Label);\n+\n+\t\t\tint Texture = s->Texture();\n+\t\t\tif(Texture <= 0) if((Texture = m_pClient->m_pGameTextureManager->FindTexture(CGameTextureManager::TEXTURE_GROUP_ENTITIES, s->m_aName)) <= 0) continue;\n+\t\t\tchar aName[512];\n+\t\t\tstr_copyb(aName, s->m_aName);\n+\t\t\tGraphics()->TextureSet(Texture);\n \t\t\tGraphics()->QuadsBegin();\n \t\t\tIGraphics::CQuadItem QuadItem(Item.m_Rect.x+Item.m_Rect.w/2 - 60.0f, Item.m_Rect.y+Item.m_Rect.h/2 - 60.0f, 120.0f, 120.0f);\n \t\t\tGraphics()->QuadsDrawTL(&QuadItem, 1);\n \t\t\tGraphics()->QuadsEnd();\n-\t\t\tUI()->DoLabel(&Label, gName, 10.0f, 0);\n+\t\t\tUI()->DoLabel(&Label, aName, 10.0f, 0);\n \t\t}\n \t}\n \n \tconst int NewSelected = UiDoListboxEnd(&s_ScrollValue, 0);\n \tif(OldSelected != NewSelected)\n \t{\n-\t\tmem_copy(g_Config.m_TexCursor, s_aSkinList[NewSelected].m_aName, sizeof(g_Config.m_TexCursor));\n-\t\tm_pClient->m_pGameTextureManager->SetTexture(IMAGE_CURSOR, g_Config.m_TexCursor);\n+\t\tstr_copy(g_Config.m_TexEntities, s_aSkinList[NewSelected].m_aName, sizeof(g_Config.m_TexEntities));\n+\t\tm_pClient->m_pGameTextureManager->SetTexture(IMAGE_ENTITIES, g_Config.m_TexEntities);\n \t}\n+\n }"
    },
    {
      "sha": "ee74f1df9cb9284948a96c7642dba55ce5515b66",
      "filename": "src/game/client/components/sounds.cpp",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/sounds.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/sounds.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/sounds.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -81,14 +81,14 @@ void CSounds::OnInit()\n \tClearQueue();\n \n \t// load sounds\n-/*\tif(g_Config.m_ClThreadsoundloading)\n+\tif(g_Config.m_ClThreadsoundloading)\n \t{\n \t\tg_UserData.m_pGameClient = m_pClient;\n \t\tg_UserData.m_Render = false;\n \t\tm_pClient->Engine()->AddJob(&m_SoundJob, LoadSoundsThread, &g_UserData);\n \t\tm_WaitForSoundJob = true;\n \t}\n-\telse*/\n+\telse\n \t{\n \t\tg_UserData.m_pGameClient = m_pClient;\n \t\tg_UserData.m_Render = true;"
    },
    {
      "sha": "268ee93f465d2607a3979169903c98fdb5c12379",
      "filename": "src/game/client/components/spectator.cpp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/spectator.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/spectator.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/spectator.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -462,7 +462,7 @@ void CSpectator::OnRender()\n \tTextRender()->TextColor(1.0f, 1.0f, 1.0f, 1.0f);\n \n \t// draw cursor\n-\tGraphics()->TextureSet(g_pData->m_aImages[IMAGE_CURSOR].m_Id);\n+\tGraphics()->TextureSet(g_pData->m_aImages[IMAGE_HUDCURSOR].m_Id);\n \tGraphics()->QuadsBegin();\n \tGraphics()->SetColor(1.0f, 1.0f, 1.0f, 1.0f);\n \tIGraphics::CQuadItem QuadItem(m_SelectorMouse.x+Width/2.0f, m_SelectorMouse.y+Height/2.0f, 48.0f, 48.0f);"
    },
    {
      "sha": "a5df944845acc9bfa6e4bc41fb120bad5c735eda",
      "filename": "src/game/client/components/statboard.cpp",
      "status": "modified",
      "additions": 18,
      "deletions": 18,
      "changes": 36,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/statboard.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/statboard.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/statboard.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -114,7 +114,7 @@ void CStatboard::OnMessage(int MsgType, void *pRawMsg)\n \n \t\t\t\tfor(int i = 0; i < MAX_CLIENTS; i++)\n \t\t\t\t{\n-\t\t\t\t\tif(!m_pClient->m_aStats[i].m_Active)\n+\t\t\t\t\tif(!m_pClient->m_aStats[i].IsActive())\n \t\t\t\t\t\tcontinue;\n \n \t\t\t\t\tif(str_comp(m_pClient->m_aClients[i].m_aName, aName) == 0)\n@@ -165,7 +165,7 @@ void CStatboard::RenderGlobalStats()\n \tfor(int i = 0; i < MAX_CLIENTS; i++)\n \t{\n \t\tconst CNetObj_PlayerInfo *pInfo = m_pClient->m_Snap.m_paInfoByScore[i];\n-\t\tif(!pInfo || !m_pClient->m_aStats[pInfo->m_ClientID].m_Active || m_pClient->m_aClients[pInfo->m_ClientID].m_Team != TEAM_RED)\n+\t\tif(!pInfo || !m_pClient->m_aStats[pInfo->m_ClientID].IsActive() || m_pClient->m_aClients[pInfo->m_ClientID].m_Team != TEAM_RED)\n \t\t\tcontinue;\n \t\tapPlayers[NumPlayers] = pInfo;\n \t\tNumPlayers++;\n@@ -177,7 +177,7 @@ void CStatboard::RenderGlobalStats()\n \t\tfor(int i = 0; i < MAX_CLIENTS; i++)\n \t\t{\n \t\t\tconst CNetObj_PlayerInfo *pInfo = m_pClient->m_Snap.m_paInfoByScore[i];\n-\t\t\tif(!pInfo || !m_pClient->m_aStats[pInfo->m_ClientID].m_Active || m_pClient->m_aClients[pInfo->m_ClientID].m_Team != TEAM_BLUE)\n+\t\t\tif(!pInfo || !m_pClient->m_aStats[pInfo->m_ClientID].IsActive() || m_pClient->m_aClients[pInfo->m_ClientID].m_Team != TEAM_BLUE)\n \t\t\t\tcontinue;\n \t\t\tapPlayers[NumPlayers] = pInfo;\n \t\t\tNumPlayers++;\n@@ -204,9 +204,9 @@ void CStatboard::RenderGlobalStats()\n \tbool aDisplayWeapon[NUM_WEAPONS] = {false};\n \tfor(int i = 0; i < NumPlayers; i++)\n \t{\n-\t\tconst CGameClient::CClientStats pStats = m_pClient->m_aStats[apPlayers[i]->m_ClientID];\n+\t\tconst CGameClient::CClientStats *pStats = &m_pClient->m_aStats[apPlayers[i]->m_ClientID];\n \t\tfor(int j=0; j<NUM_WEAPONS; j++)\n-\t\t\taDisplayWeapon[j] = aDisplayWeapon[j] || pStats.m_aFragsWith[j] || pStats.m_aDeathsFrom[j];\n+\t\t\taDisplayWeapon[j] = aDisplayWeapon[j] || pStats->m_aFragsWith[j] || pStats->m_aDeathsFrom[j];\n \t}\n \tfor(int i = 0; i < NUM_WEAPONS; i++)\n \t\tif(aDisplayWeapon[i])\n@@ -292,7 +292,7 @@ void CStatboard::RenderGlobalStats()\n \tfor(int j = 0; j < NumPlayers; j++)\n \t{\n \t\tconst CNetObj_PlayerInfo *pInfo = apPlayers[j];\n-\t\tconst CGameClient::CClientStats Stats = m_pClient->m_aStats[pInfo->m_ClientID];\n+\t\tconst CGameClient::CClientStats *pStats = &m_pClient->m_aStats[pInfo->m_ClientID];\n \n \t\tif(m_pClient->m_Snap.m_LocalClientID == pInfo->m_ClientID\n \t\t\t\t|| (m_pClient->m_Snap.m_SpecInfo.m_Active && pInfo->m_ClientID == m_pClient->m_Snap.m_SpecInfo.m_SpectatorID))\n@@ -320,69 +320,69 @@ void CStatboard::RenderGlobalStats()\n \n \t\t// FRAGS\n \t\t{\n-\t\t\tstr_format(aBuf, sizeof(aBuf), \"%d\", Stats.m_Frags);\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"%d\", pStats->m_Frags);\n \t\t\ttw = TextRender()->TextWidth(0, FontSize, aBuf, -1);\n \t\t\tTextRender()->Text(0, x-tw+px, y, FontSize, aBuf, -1);\n \t\t\tpx += 85;\n \t\t}\n \t\t// DEATHS\n \t\t{\n-\t\t\tstr_format(aBuf, sizeof(aBuf), \"%d\", Stats.m_Deaths);\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"%d\", pStats->m_Deaths);\n \t\t\ttw = TextRender()->TextWidth(0, FontSize, aBuf, -1);\n \t\t\tTextRender()->Text(0, x-tw+px, y, FontSize, aBuf, -1);\n \t\t\tpx += 85;\n \t\t}\n \t\t// SUICIDES\n \t\t{\n \t\t\tpx += 10;\n-\t\t\tstr_format(aBuf, sizeof(aBuf), \"%d\", Stats.m_Suicides);\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"%d\", pStats->m_Suicides);\n \t\t\ttw = TextRender()->TextWidth(0, FontSize, aBuf, -1);\n \t\t\tTextRender()->Text(0, x-tw+px, y, FontSize, aBuf, -1);\n \t\t\tpx += 85;\n \t\t}\n \t\t// RATIO\n \t\t{\n-\t\t\tif(Stats.m_Deaths == 0)\n+\t\t\tif(pStats->m_Deaths == 0)\n \t\t\t\tstr_format(aBuf, sizeof(aBuf), \"--\");\n \t\t\telse\n-\t\t\t\tstr_format(aBuf, sizeof(aBuf), \"%.2f\", (float)(Stats.m_Frags)/Stats.m_Deaths);\n+\t\t\t\tstr_format(aBuf, sizeof(aBuf), \"%.2f\", (float)(pStats->m_Frags)/pStats->m_Deaths);\n \t\t\ttw = TextRender()->TextWidth(0, FontSize, aBuf, -1);\n \t\t\tTextRender()->Text(0, x-tw+px, y, FontSize, aBuf, -1);\n \t\t\tpx += 85;\n \t\t}\n \t\t// NET\n \t\t{\n-\t\t\tstr_format(aBuf, sizeof(aBuf), \"%+d\", Stats.m_Frags-Stats.m_Deaths);\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"%+d\", pStats->m_Frags-pStats->m_Deaths);\n \t\t\ttw = TextRender()->TextWidth(0, FontSize, aBuf, -1);\n \t\t\tTextRender()->Text(0, x-tw+px, y, FontSize, aBuf, -1);\n \t\t\tpx += 85;\n \t\t}\n \t\t// FPM\n \t\t{\n-\t\t\tfloat Fpm = (float)(Stats.m_Frags*60)/((float)(Client()->GameTick()-Stats.m_JoinDate)/Client()->GameTickSpeed());\n+\t\t\tfloat Fpm = pStats->GetFPM(Client()->GameTick(), Client()->GameTickSpeed());\n \t\t\tstr_format(aBuf, sizeof(aBuf), \"%.1f\", Fpm);\n \t\t\ttw = TextRender()->TextWidth(0, FontSize, aBuf, -1);\n \t\t\tTextRender()->Text(0, x-tw+px, y, FontSize, aBuf, -1);\n \t\t\tpx += 85;\n \t\t}\n \t\t// SPREE\n \t\t{\n-\t\t\tstr_format(aBuf, sizeof(aBuf), \"%d\", Stats.m_CurrentSpree);\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"%d\", pStats->m_CurrentSpree);\n \t\t\ttw = TextRender()->TextWidth(0, FontSize, aBuf, -1);\n \t\t\tTextRender()->Text(0, x-tw+px, y, FontSize, aBuf, -1);\n \t\t\tpx += 85;\n \t\t}\n \t\t// BEST SPREE\n \t\t{\n-\t\t\tstr_format(aBuf, sizeof(aBuf), \"%d\", Stats.m_BestSpree);\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"%d\", pStats->m_BestSpree);\n \t\t\ttw = TextRender()->TextWidth(0, FontSize, aBuf, -1);\n \t\t\tTextRender()->Text(0, x-tw+px, y, FontSize, aBuf, -1);\n \t\t\tpx += 85;\n \t\t}\n \t\t// GRABS\n \t\tif(gameWithFlags)\n \t\t{\n-\t\t\tstr_format(aBuf, sizeof(aBuf), \"%d\", Stats.m_FlagGrabs);\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"%d\", pStats->m_FlagGrabs);\n \t\t\ttw = TextRender()->TextWidth(0, FontSize, aBuf, -1);\n \t\t\tTextRender()->Text(0, x-tw+px, y, FontSize, aBuf, -1);\n \t\t\tpx += 85;\n@@ -394,15 +394,15 @@ void CStatboard::RenderGlobalStats()\n \t\t\tif(!aDisplayWeapon[i])\n \t\t\t\tcontinue;\n \n-\t\t\tstr_format(aBuf, sizeof(aBuf), \"%d/%d\", Stats.m_aFragsWith[i], Stats.m_aDeathsFrom[i]);\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"%d/%d\", pStats->m_aFragsWith[i], pStats->m_aDeathsFrom[i]);\n \t\t\ttw = TextRender()->TextWidth(0, FontSize, aBuf, -1);\n \t\t\tTextRender()->Text(0, x+px-tw/2, y, FontSize, aBuf, -1);\n \t\t\tpx += 80;\n \t\t}\n \t\t// FLAGS\n \t\tif(gameWithFlags)\n \t\t{\n-\t\t\tstr_format(aBuf, sizeof(aBuf), \"%d\", Stats.m_FlagCaptures);\n+\t\t\tstr_format(aBuf, sizeof(aBuf), \"%d\", pStats->m_FlagCaptures);\n \t\t\ttw = TextRender()->TextWidth(0, FontSize, aBuf, -1);\n \t\t\tTextRender()->Text(0, x-tw+px, y, FontSize, aBuf, -1);\n \t\t\tpx += 85;"
    },
    {
      "sha": "5d2118b37dea6741e96434994a2fcbea109820ca",
      "filename": "src/game/client/components/translator.cpp",
      "status": "modified",
      "additions": 23,
      "deletions": 18,
      "changes": 41,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/translator.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/translator.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/translator.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -16,35 +16,38 @@ CTranslator::CTranslator()\n \tm_pHandle = NULL;\n }\n \n+CTranslator::~CTranslator()\n+{\n+\t// clean up\n+\tif(m_pHandle)\n+\t\tcurl_easy_cleanup(m_pHandle);\n+\tm_pHandle = NULL;\n+\tm_Queue.clear();\n+\n+\tthread_wait(m_pThread);\n+}\n+\n bool CTranslator::Init()\n {\n-\tif(!curl_global_init(CURL_GLOBAL_DEFAULT) && (m_pHandle = curl_easy_init()))\n+\tif((m_pHandle = curl_easy_init()))\n \t{\n-\t\tthread_init(TranslationWorker, this);\n+\t\tm_pThread = thread_init(TranslationWorker, this);\n \t\treturn true;\n \t}\n \treturn false;\n }\n \n-CTranslator::~CTranslator()\n-{\n-\t// clean up\n-\tif(m_pHandle)\n-\t\tcurl_easy_cleanup(m_pHandle);\n-\tcurl_global_cleanup();\n-}\n-\n void CTranslator::TranslationWorker(void *pUser)\n {\n \tCTranslator *pTrans = (CTranslator *)pUser;\n \n-\twhile(true)\n+\twhile(pTrans->m_pHandle != NULL)\n \t{\n-\t\tthread_sleep(50);\n+\t\tCALLSTACK_ADD();\n \n-\t\tif(pTrans->Queue.size())\n+\t\tif(pTrans->m_Queue.size())\n \t\t{\n-\t\t\tCTransEntry Entry = pTrans->Queue.front();\n+\t\t\tCTransEntry Entry = pTrans->m_Queue.front();\n \n \t\t\tchar aPost[2048*8];\n \t\t\tchar aResponse[2048*8];\n@@ -54,7 +57,7 @@ void CTranslator::TranslationWorker(void *pUser)\n \t\t\tcurl_easy_setopt(pTrans->m_pHandle, CURLOPT_URL, \"http://api.mymemory.translated.net/get\");\n \t\t\tstr_format(aPost, sizeof(aPost), \"q=%s&langpair=%s|%s&de=associatingblog@gmail.com\", Entry.m_Text, Entry.m_SrcLang, Entry.m_DstLang);\n \t\t\tcurl_easy_setopt(pTrans->m_pHandle, CURLOPT_POSTFIELDS, aPost);\n-\t\t \t\n+\n \t\t\tcurl_easy_setopt(pTrans->m_pHandle, CURLOPT_WRITEFUNCTION, &CTranslator::write_to_string);\n \t\t\tcurl_easy_setopt(pTrans->m_pHandle, CURLOPT_WRITEDATA, &response);\n \t\t\tcurl_easy_perform(pTrans->m_pHandle);\n@@ -76,14 +79,16 @@ void CTranslator::TranslationWorker(void *pUser)\n \n \t\t\t\t// put the result to the queue\n \t\t\t\tstr_copy(Entry.m_Text, aTranslated, sizeof(Entry.m_Text));\n-\t\t\t\tpTrans->Results.push_back(Entry);\n+\t\t\t\tpTrans->m_Results.push_back(Entry);\n \t\t\t}\n \t\t\telse\n \t\t\t\tdbg_msg(\"trans\", \"translating '%s' from '%s' to '%s' failed\", Entry.m_Text, Entry.m_SrcLang, Entry.m_DstLang);\n \n \t\t\t// done, remove the element from our queue\n-\t\t\tpTrans->Queue.erase(pTrans->Queue.begin());\n+\t\t\tpTrans->m_Queue.erase(pTrans->m_Queue.begin());\n \t\t}\n+\n+\t\tthread_sleep(50);\n \t}\n }\n \n@@ -99,5 +104,5 @@ void CTranslator::RequestTranslation(const char *pSrcLang, const char *pDstLang,\n \tEntry.m_In = In;\n \n \t// insert the entry\n-\tQueue.push_back(Entry);\n+\tm_Queue.push_back(Entry);\n }"
    },
    {
      "sha": "4bbadb5df250ee4baa88a783f06354ef4501711b",
      "filename": "src/game/client/components/translator.h",
      "status": "modified",
      "additions": 12,
      "deletions": 8,
      "changes": 20,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/translator.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/components/translator.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/components/translator.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -7,13 +7,16 @@\n #include \"curl/curl.h\"\n #include \"curl/easy.h\"\n \n-class CTranslator : public CComponent\n+class CTranslator\n {\n+\tMACRO_ALLOC_HEAP()\n public:\n \tCTranslator();\n-\tvirtual bool Init();\n \t~CTranslator();\n \n+\tbool Init();\n+\t//void Shutdown();\n+\n \tstruct CTransEntry\n \t{\n \t\tchar m_Text[1024];\n@@ -27,24 +30,25 @@ class CTranslator : public CComponent\n \tvoid RequestTranslation(const char *pSrcLang, const char *pDstLang, const char *pText, bool In);\n \tinline CTransEntry *GetTranslation()\n \t{\n-\t\tif(!Results.size())\n+\t\tif(!m_Results.size())\n \t\t\treturn NULL;\n-\t\treturn &Results.front();\n+\t\treturn &m_Results.front();\n \t}\n \tinline void RemoveTranslation()\n \t{\n-\t\tif(!Results.size())\n+\t\tif(!m_Results.size())\n \t\t\treturn;\n-\t\tResults.erase(Results.begin());\n+\t\tm_Results.erase(m_Results.begin());\n \t}\n private:\n+\tvoid *m_pThread;\n \tCURL *m_pHandle;\n \tstatic size_t write_to_string(void *ptr, size_t size, size_t count, void *stream);\n \n \tstatic void TranslationWorker(void *pUser);\n \n-\tstd::vector<CTransEntry> Queue;\n-\tstd::vector<CTransEntry> Results;\n+\tstd::vector<CTransEntry> m_Queue;\n+\tstd::vector<CTransEntry> m_Results;\n };\n \n #endif"
    },
    {
      "sha": "ad08b87d816b5de5952b65fffe341008ee97c307",
      "filename": "src/game/client/gameclient.cpp",
      "status": "modified",
      "additions": 99,
      "deletions": 114,
      "changes": 213,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/gameclient.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/gameclient.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/gameclient.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -1,5 +1,9 @@\n /* (c) Magnus Auvinen. See licence.txt in the root of the distribution for more information. */\n /* If you are missing that file, acquire a complete release at teeworlds.com.                */\n+\n+#include <base/system.h>\n+#include <base/tl/sorted_array.h>\n+\n #include <engine/editor.h>\n #include <engine/engine.h>\n #include <engine/friends.h>\n@@ -63,15 +67,12 @@\n #include \"components/spectator.h\"\n #include \"components/statboard.h\"\n #include \"components/voting.h\"\n-#include \"game/client/components/gametexture.h\"\n #include \"components/drawing.h\"\n-#include \"components/fontmgr.h\"\n #include \"components/skindownload.h\"\n-\n-#include <base/system.h>\n #include \"components/race_demo.h\"\n #include \"components/ghost.h\"\n-#include <base/tl/sorted_array.h>\n+#include \"components/gametexture.h\"\n+#include \"components/fontmgr.h\"\n \n \n CGameClient g_GameClient;\n@@ -137,7 +138,8 @@ static CSpoofRemote gs_SpoofRemote;\n static CIdentity gs_Identity;\n static CGameTextureManager gs_GameTextureManager;\n static CDrawing gs_Drawing;\n-static CFontMgr gs_FontMgr;\n+static CFontMgr gs_FontMgrBasic(IFontMgr::TYPE_BASIC);\n+static CFontMgr gs_FontMgrMono(IFontMgr::TYPE_MONO);\n static CSkinDownload gs_SkinDownload;\n \n static CPlayers gs_Players;\n@@ -230,7 +232,8 @@ void CGameClient::OnConsoleInit()\n \tm_pIRCBind = &::gs_IRC;\n \tm_pIdentity = &::gs_Identity;\n \tm_pGameTextureManager = &::gs_GameTextureManager;\n-\tm_pFontMgr = &::gs_FontMgr;\n+\tm_pFontMgrBasic = &::gs_FontMgrBasic;\n+\tm_pFontMgrMono = &::gs_FontMgrMono;\n \n \tm_pRaceDemo = &::gs_RaceDemo;\n \tm_pGhost = &::gs_Ghost;\n@@ -317,7 +320,8 @@ void CGameClient::OnConsoleInit()\n \tADD_LUARENDER(24);\n \t// stuff that doesn't render anything:\n \tm_All.Add(&gs_SpoofRemote);\n-\tm_All.Add(m_pFontMgr);\n+\tm_All.Add(m_pFontMgrBasic);\n+\tm_All.Add(m_pFontMgrMono);\n \n #undef ADD_LUARENDER\n \n@@ -410,8 +414,9 @@ void CGameClient::OnInit()\n \tfor(int i = 0; i < NUM_NETOBJTYPES; i++)\n \t\tClient()->SnapSetStaticsize(i, m_NetObjHandler.GetObjSize(i));\n \n-\t// load default font\n-\tm_pFontMgr->Init();\n+\t// load fontmanagers\n+\tm_pFontMgrBasic->Init();\n+\tm_pFontMgrMono->Init();\n \n \t// init all components\n \tchar aBuf[256];\n@@ -421,93 +426,93 @@ void CGameClient::OnInit()\n \t\tGraphics()->SetVSync(false);\n \n \t// setup load amount & load textures and stuff\n-\tint TotalLoadAmount = g_pData->m_NumImages + m_All.m_Num*2 + 1   +3;\n-\tg_GameClient.m_pMenus->m_LoadTotal = TotalLoadAmount + g_pData->m_NumSounds;\n-#define SET_LOAD_LABEL(TEXT) str_format(g_GameClient.m_pMenus->m_aLoadLabel, sizeof(g_GameClient.m_pMenus->m_aLoadLabel), TEXT)\n-#define SET_LOAD_LABEL_V(TEXT, ...) str_format(g_GameClient.m_pMenus->m_aLoadLabel, sizeof(g_GameClient.m_pMenus->m_aLoadLabel), TEXT, __VA_ARGS__)\n-\tfor(int i = 0; i < TotalLoadAmount; i++)\n-\t{\n-\t\t// init the components\n-\t\tif(i < m_All.m_Num)  // 0 <= i <= m_All.m_Num-1\n-\t\t{\n-\t\t\tSET_LOAD_LABEL_V(\"Initializing Components (%i/%i)\", i+1, m_All.m_Num);\n-\t\t\tm_All.m_paComponents[m_All.m_Num-i-1]->OnInit();\n-\t\t}\n+\tg_GameClient.m_pMenus->m_LoadTotal = g_pData->m_NumImages + m_All.m_Num + 1 + m_All.m_Num + 4*1;\n+\tif(!g_Config.m_ClThreadsoundloading)\n+\t\tg_GameClient.m_pMenus->m_LoadTotal += g_pData->m_NumSounds;\n+\tint CurrentIndex = 0;\n+#define SET_LOAD_LABEL(TEXT) str_format(g_GameClient.m_pMenus->m_aLoadLabel, sizeof(g_GameClient.m_pMenus->m_aLoadLabel), TEXT); if(g_Config.m_Debug) dbg_msg(\"loading/debug\", \"[%.2f%%] %s\", ((float)CurrentIndex / (float)g_GameClient.m_pMenus->m_LoadTotal)*100.0f, g_GameClient.m_pMenus->m_aLoadLabel)\n+#define SET_LOAD_LABEL_V(TEXT, ...) str_format(g_GameClient.m_pMenus->m_aLoadLabel, sizeof(g_GameClient.m_pMenus->m_aLoadLabel), TEXT, __VA_ARGS__); if(g_Config.m_Debug) dbg_msg(\"loading/debug\", \"[%.2f%%] %s\", ((float)CurrentIndex / (float)g_GameClient.m_pMenus->m_LoadTotal)*100.0f, g_GameClient.m_pMenus->m_aLoadLabel)\n+#define LOAD_STUFF(ITERATIONS) for(int i = 0; i < ITERATIONS; i++, CurrentIndex++, g_GameClient.m_pMenus->RenderLoading())\n \n-\t\t// load the textures\n-\t\tif(m_All.m_Num <= i && i < m_All.m_Num+g_pData->m_NumImages &&\n-\t\t\t\ti-m_All.m_Num != IMAGE_GAME && i-m_All.m_Num != IMAGE_CURSOR &&\n-\t\t\t\ti-m_All.m_Num != IMAGE_PARTICLES && i-m_All.m_Num != IMAGE_EMOTICONS)\n-\t\t{\n-\t\t\tSET_LOAD_LABEL_V(\"Loading Textures (%i/%i): \\\"%s\\\"\", i-m_All.m_Num+1, g_pData->m_NumImages, g_pData->m_aImages[i-m_All.m_Num].m_pFilename);\n-\t\t\tg_pData->m_aImages[i-m_All.m_Num].m_Id = Graphics()->LoadTexture(g_pData->m_aImages[i-m_All.m_Num].m_pFilename, IStorageTW::TYPE_ALL, CImageInfo::FORMAT_AUTO, 0);\n-\t\t}\n+\t// load textures\n+\tLOAD_STUFF(g_pData->m_NumImages)\n+\t{\n+\t\tSET_LOAD_LABEL_V(\"Loading Textures (%i/%i): \\\"%s\\\"\", i+1, g_pData->m_NumImages, g_pData->m_aImages[i].m_pFilename);\n+\t\tg_pData->m_aImages[i].m_Id = Graphics()->LoadTexture(g_pData->m_aImages[i].m_pFilename, IStorageTW::TYPE_ALL, CImageInfo::FORMAT_AUTO, 0);\n+\t}\n \n-\t\t// load background map when textures have finished\n-\t\tif(i == m_All.m_Num+g_pData->m_NumImages)\n-\t\t{\n-\t\t\tSET_LOAD_LABEL(\"Loading Background Map\");\n-\t\t\tClient()->LoadBackgroundMap(\"dm1\", \"ui/menu_day.map\");\n-\t\t}\n+\t// init components\n+\tLOAD_STUFF(m_All.m_Num)\n+\t{\n+\t\tSET_LOAD_LABEL_V(\"Initializing Components (%i/%i)\", i+1, m_All.m_Num);\n+\t\tm_All.m_paComponents[i]->OnInit();\n+\t}\n \n-\t\tg_GameClient.m_pMenus->RenderLoading();\n+\t// load background map\n+\tLOAD_STUFF(1)\n+\t{\n+\t\tSET_LOAD_LABEL(\"Loading Background Map\");\n+\t\tClient()->LoadBackgroundMap(\"dm1\", \"ui/menu_day.map\");\n+\t}\n \n-\t\t// reset all components after loading\n-\t\tif(i >= m_All.m_Num+g_pData->m_NumImages && i < TotalLoadAmount-3-1)\n-\t\t{\n-\t\t\tSET_LOAD_LABEL_V(\"Resetting Components (%i/%i)\", i-g_pData->m_NumImages-m_All.m_Num+1, m_All.m_Num);\n-\t\t\tm_All.m_paComponents[i-g_pData->m_NumImages-m_All.m_Num]->OnReset();\n-\t\t}\n+\t// reset all components after loading\n+\tLOAD_STUFF(m_All.m_Num)\n+\t{\n+\t\tSET_LOAD_LABEL_V(\"Resetting Components (%i/%i)\", i+1, m_All.m_Num);\n+\t\tm_All.m_paComponents[i]->OnReset();\n+\t}\n \n-\t\tif(i == TotalLoadAmount-3-1)\n-\t\t{\n-\t\t\tSET_LOAD_LABEL(\"Finalizing Background Map\");\n+\t// initialize background map rendering\n+\tLOAD_STUFF(1)\n+\t{\n+\t\tSET_LOAD_LABEL(\"Finalizing Background Map\");\n \n-\t\t\tm_Layers.Init(Kernel());\n-\t\t\tm_Collision.Init(Layers());\n-\t\t\tm_pCollision = &m_Collision; // where fck\n+\t\tm_Layers.Init(Kernel());\n+\t\tm_Collision.Init(Layers());\n+\t\tm_pCollision = &m_Collision; // where fck\n \n-\t\t\tRenderTools()->RenderTilemapGenerateSkip(Layers());\n+\t\tRenderTools()->RenderTilemapGenerateSkip(Layers());\n \n-\t\t\tm_pMapimages->OnMapLoad();\n-\t\t}\n+\t\tm_pMapimages->OnMapLoad();\n+\t}\n \n-\t\t// init irc\n-\t\tif(i == TotalLoadAmount-2-1)\n-\t\t{\n-\t\t\tSET_LOAD_LABEL(\"Starting IRC Engine\");\n+\t// init irc\n+\tLOAD_STUFF(1)\n+\t{\n+\t\tSET_LOAD_LABEL(\"Starting IRC Engine\");\n \n-\t\t\tm_pIRC->Init();\n-\t\t}\n+\t\tm_pIRC->Init();\n+\t}\n \n-\t\t// init the editor\n-\t\tif(i == TotalLoadAmount-1-1)\n-\t\t{\n-\t\t\tSET_LOAD_LABEL(\"Initializing Editor\");\n+\t// init editor\n+\tLOAD_STUFF(1)\n+\t{\n+\t\tSET_LOAD_LABEL(\"Initializing Editor\");\n \n-\t\t\tif(!g_Config.m_ClEditorLazyInit)\n-\t\t\t\tm_pEditor->Init();\n-\t\t}\n+\t\tif(!g_Config.m_ClEditorLazyInit)\n+\t\t\tm_pEditor->Init();\n+\t}\n \n-\t\t// last iteration\n-\t\tif(i == TotalLoadAmount-0-1)\n-\t\t{\n-\t\t\tSET_LOAD_LABEL(\"Loading done. Have Fun!\");\n-\t\t\tstr_format(aBuf, sizeof(aBuf), \"version %s\", NetVersion());\n-\t\t\tif(g_Config.m_ClPrintStartup)\n-\t\t\t\tm_pConsole->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"client\", aBuf);\n-\t\t\telse\n-\t\t\t\tdbg_msg(\"client\", aBuf);\n+\t// do the rest\n+\tLOAD_STUFF(1)\n+\t{\n+\t\tSET_LOAD_LABEL(\"Loading done. Have Fun!\");\n+\t\tstr_format(aBuf, sizeof(aBuf), \"version %s\", NetVersion());\n+\t\tif(g_Config.m_ClPrintStartup)\n+\t\t\tm_pConsole->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"client\", aBuf);\n+\t\telse\n+\t\t\tdbg_msg(\"client\", aBuf);\n \n-\t\t\t// never start with the editor\n-\t\t\tg_Config.m_ClEditor = 0;\n+\t\t// never start with the editor\n+\t\tg_Config.m_ClEditor = 0;\n \n-\t\t\tInput()->MouseModeRelative();\n+\t\tInput()->MouseModeRelative();\n \n-\t\t\t// process pending commands\n-\t\t\tm_pConsole->StoreCommands(false);\n-\t\t}\n+\t\t// process pending commands\n+\t\tm_pConsole->StoreCommands(false);\n \t}\n+\n+#undef LOAD_STUFF\n #undef SET_LOAD_LABEL\n #undef SET_LOAD_LABEL_V\n \n@@ -1051,9 +1056,8 @@ void CGameClient::OnStateChange(int NewState, int OldState)\n \n void CGameClient::OnShutdown()\n {\n-\tm_pIdentity->SaveIdents();\n-\tm_pRaceDemo->OnShutdown();\n-\tm_pIRCBind->OnShutdown();\n+\tfor(int i = 0; i < m_All.m_Num; i++)\n+\t\tm_All.m_paComponents[i]->OnShutdown();\n }\n \n void CGameClient::OnEnterGame()\n@@ -1213,9 +1217,6 @@ void CGameClient::OnNewSnapshot()\n \t{\n \t\tm_Snap.m_aTeamSize[TEAM_RED] = m_Snap.m_aTeamSize[TEAM_BLUE] = 0;\n \n-\t\tfor(int i = 0; i < MAX_CLIENTS; i++)\n-\t\t\tm_aStats[i].m_Active = false;\n-\n \t\tint Num = Client()->SnapNumItems(IClient::SNAP_CURRENT);\n \t\tfor(int i = 0; i < Num; i++)\n \t\t{\n@@ -1290,8 +1291,11 @@ void CGameClient::OnNewSnapshot()\n \t\t\t\tif(pInfo->m_Team != TEAM_SPECTATORS)\n \t\t\t\t{\n \t\t\t\t\tm_Snap.m_aTeamSize[pInfo->m_Team]++;\n-\t\t\t\t\tm_aStats[pInfo->m_ClientID].m_Active = true;\n+\t\t\t\t\tif(!m_aStats[pInfo->m_ClientID].IsActive())\n+\t\t\t\t\t\tm_aStats[pInfo->m_ClientID].JoinGame(Client()->GameTick());\n \t\t\t\t}\n+\t\t\t\telse if(m_aStats[pInfo->m_ClientID].IsActive())\n+\t\t\t\t\tm_aStats[pInfo->m_ClientID].JoinSpec(Client()->GameTick());\n \n \t\t\t}\n \t\t\telse if(Item.m_Type == NETOBJTYPE_CHARACTER)\n@@ -1398,16 +1402,6 @@ void CGameClient::OnNewSnapshot()\n \t\t\telse if(Item.m_Type == NETOBJTYPE_FLAG)\n \t\t\t\tm_Snap.m_paFlags[Item.m_ID%2] = (const CNetObj_Flag *)pData;\n \t\t}\n-\n-\t\tfor(int i = 0; i < MAX_CLIENTS; i++)\n-\t\t{\n-\t\t\tif(m_aStats[i].m_Active && !m_aStats[i].m_WasActive)\n-\t\t\t{\n-\t\t\t\tm_aStats[i].m_Active = true;\n-\t\t\t\tm_aStats[i].m_JoinDate = Client()->GameTick();\n-\t\t\t}\n-\t\t\tm_aStats[i].m_WasActive = m_aStats[i].m_Active;\n-\t\t}\n \t}\n \n \t// setup local pointers\n@@ -1447,7 +1441,10 @@ void CGameClient::OnNewSnapshot()\n \tfor(int i = 0; i < MAX_CLIENTS; ++i)\n \t{\n \t\tif(!m_Snap.m_paPlayerInfos[i] && m_aClients[i].m_Active)\n+\t\t{\n \t\t\tm_aClients[i].Reset();\n+\t\t\tm_aStats[i].Reset();\n+\t\t}\n \t}\n \n \t// update friend state\n@@ -2061,26 +2058,14 @@ void CGameClient::OnActivateEditor()\n \n CGameClient::CClientStats::CClientStats()\n {\n-\tm_JoinDate = 0;\n-\tm_Active = false;\n-\tm_WasActive = false;\n-\tm_Frags = 0;\n-\tm_Deaths = 0;\n-\tm_Suicides = 0;\n-\tfor(int j = 0; j < NUM_WEAPONS; j++)\n-\t{\n-\t\tm_aFragsWith[j] = 0;\n-\t\tm_aDeathsFrom[j] = 0;\n-\t}\n-\tm_FlagGrabs = 0;\n-\tm_FlagCaptures = 0;\n+\tReset();\n }\n \n void CGameClient::CClientStats::Reset()\n {\n-\tm_JoinDate = 0;\n+\tm_JoinTick = 0;\n+\tm_IngameTicks = 0;\n \tm_Active = false;\n-\tm_WasActive = false;\n \tm_Frags = 0;\n \tm_Deaths = 0;\n \tm_Suicides = 0;\n@@ -2218,7 +2203,7 @@ void CGameClient::SendDummyInfo(bool Start)\n \t}\n }\n \n-void CGameClient::SendKill(int ClientID)\n+void CGameClient::SendKill()\n {\n \tCNetMsg_Cl_Kill Msg;\n \tClient()->SendPackMsg(&Msg, MSGFLAG_VITAL);\n@@ -2237,7 +2222,7 @@ void CGameClient::ConTeam(IConsole::IResult *pResult, void *pUserData)\n \n void CGameClient::ConKill(IConsole::IResult *pResult, void *pUserData)\n {\n-\t((CGameClient*)pUserData)->SendKill(-1);\n+\t((CGameClient*)pUserData)->SendKill();\n }\n \n void CGameClient::ConLuafile(IConsole::IResult *pResult, void *pUserData)"
    },
    {
      "sha": "83d524b71b5891c7a8887fefe66f1e3d1c3447aa",
      "filename": "src/game/client/gameclient.h",
      "status": "modified",
      "additions": 25,
      "deletions": 18,
      "changes": 43,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/gameclient.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/gameclient.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/gameclient.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -284,25 +284,31 @@ class CGameClient : public IGameClient\n \n \tclass CClientStats\n \t{\n-\t\tpublic:\n-\t\t\tCClientStats();\n-\n-\t\t\tint m_JoinDate;\n-\t\t\tbool m_Active;\n-\t\t\tbool m_WasActive;\n+\t\tint m_IngameTicks;\n+\t\tint m_JoinTick;\n+\t\tbool m_Active;\n+\t\t\n+\tpublic:\n+\t\tCClientStats();\n \n-\t\t\tint m_aFragsWith[NUM_WEAPONS];\n-\t\t\tint m_aDeathsFrom[NUM_WEAPONS];\n-\t\t\tint m_Frags;\n-\t\t\tint m_Deaths;\n-\t\t\tint m_Suicides;\n-\t\t\tint m_BestSpree;\n-\t\t\tint m_CurrentSpree;\n+\t\tint m_aFragsWith[NUM_WEAPONS];\n+\t\tint m_aDeathsFrom[NUM_WEAPONS];\n+\t\tint m_Frags;\n+\t\tint m_Deaths;\n+\t\tint m_Suicides;\n+\t\tint m_BestSpree;\n+\t\tint m_CurrentSpree;\n \n-\t\t\tint m_FlagGrabs;\n-\t\t\tint m_FlagCaptures;\n+\t\tint m_FlagGrabs;\n+\t\tint m_FlagCaptures;\n \n-\t\t\tvoid Reset();\n+\t\tvoid Reset();\n+\t\t\n+\t\tbool IsActive() const { return m_Active; }\n+\t\tvoid JoinGame(int Tick) { m_Active = true; m_JoinTick = Tick; };\n+\t\tvoid JoinSpec(int Tick) { m_Active = false; m_IngameTicks += Tick - m_JoinTick; };\n+\t\tint GetIngameTicks(int Tick) const { return m_IngameTicks + Tick - m_JoinTick; };\n+\t\tfloat GetFPM(int Tick, int TickSpeed) const { return (float)(m_Frags * TickSpeed * 60) / GetIngameTicks(Tick); };\n \t};\n \n \tCClientStats m_aStats[MAX_CLIENTS];\n@@ -346,7 +352,7 @@ class CGameClient : public IGameClient\n \tvoid SendSwitchTeam(int Team);\n \tvoid SendInfo(bool Start);\n \tvirtual void SendDummyInfo(bool Start);\n-\tvoid SendKill(int ClientID);\n+\tvoid SendKill();\n \n \t// pointers to all systems\n \tclass CGameConsole *m_pGameConsole;\n@@ -385,7 +391,8 @@ class CGameClient : public IGameClient\n \tclass CIdentity *m_pIdentity;\n \tclass CCollision *m_pCollision;\n \tclass CGameTextureManager *m_pGameTextureManager;\n-\tclass CFontMgr *m_pFontMgr;\n+\tclass CFontMgr *m_pFontMgrBasic;\n+\tclass CFontMgr *m_pFontMgrMono;\n \tclass CUI *m_pUi;\n \n \t// DDRace"
    },
    {
      "sha": "9460415e06c69108eb5fcefda7abbdfe4c580a96",
      "filename": "src/game/client/ui.cpp",
      "status": "modified",
      "additions": 20,
      "deletions": 9,
      "changes": 29,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/ui.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/ui.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/ui.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -6,6 +6,7 @@\n #include <engine/shared/config.h>\n #include <engine/graphics.h>\n #include <engine/textrender.h>\n+#include <game/client/components/fontmgr.h>\n #include \"ui.h\"\n \n #if defined(__ANDROID__)\n@@ -529,7 +530,7 @@ int CUI::DoButton(const void *id, const char *text, int checked, const CUIRect *\n }*/\n \n // TODO: if pHighlight is supplied, MaxWidth will be ignored! Fix this!\n-void CUI::DoLabel(const CUIRect *r, const char *pText, float Size, int Align, float MaxWidth, const char *pHighlight)\n+void CUI::DoLabel(const CUIRect *r, const char *pText, float Size, int Align, float MaxWidth, const char *pHighlight, CFont *pFont)\n {\n \t// TODO: FIX ME!!!!\n \t//Graphics()->BlendNormal();\n@@ -543,7 +544,7 @@ void CUI::DoLabel(const CUIRect *r, const char *pText, float Size, int Align, fl\n \t\t\tconst char * const _pOrigText = pText;\n \n \t\t\tCTextCursor Cursor;\n-\t\t\tTextRender()->SetCursor(&Cursor, r->x + r->w / 2 - tw / 2, r->y - Size / 10, Size, TEXTFLAG_RENDER | TEXTFLAG_STOP_AT_END);\n+\t\t\tTextRender()->SetCursor(&Cursor, r->x + r->w / 2 - tw / 2, r->y - Size / 10, Size, TEXTFLAG_RENDER | TEXTFLAG_STOP_AT_END, pFont);\n \t\t\tCursor.m_LineWidth = r->w;\n \t\t\twhile(pText)\n \t\t\t{\n@@ -568,15 +569,15 @@ void CUI::DoLabel(const CUIRect *r, const char *pText, float Size, int Align, fl\n \t\t\t}\n \t\t}\n \t\telse\n-\t\t\tTextRender()->Text(0, r->x + r->w / 2 - tw / 2, r->y - Size / 10, Size, pText, MaxWidth);\n+\t\t\tTextRender()->Text(pFont, r->x + r->w / 2 - tw / 2, r->y - Size / 10, Size, pText, MaxWidth);\n \t}\n \telse if(Align < 0)\n \t{\n \t\t// highlight the parts that matches\n \t\tif(pHighlight && pHighlight[0] != '\\0')\n \t\t{\n \t\t\tCTextCursor Cursor;\n-\t\t\tTextRender()->SetCursor(&Cursor, r->x, r->y - Size/10, Size, TEXTFLAG_RENDER|TEXTFLAG_STOP_AT_END);\n+\t\t\tTextRender()->SetCursor(&Cursor, r->x, r->y - Size/10, Size, TEXTFLAG_RENDER|TEXTFLAG_STOP_AT_END, pFont);\n \t\t\tCursor.m_LineWidth = r->w;\n \t\t\tconst char *pStr = str_find_nocase(pText, pHighlight);\n \t\t\tif(pStr)\n@@ -591,7 +592,7 @@ void CUI::DoLabel(const CUIRect *r, const char *pText, float Size, int Align, fl\n \t\t\t\tTextRender()->TextEx(&Cursor, pText, -1);\n \t\t}\n \t\telse\n-\t\t\tTextRender()->Text(0, r->x, r->y - Size/10, Size, pText, MaxWidth);\n+\t\t\tTextRender()->Text(pFont, r->x, r->y - Size/10, Size, pText, MaxWidth);\n \t}\n \telse if(Align > 0)\n \t{\n@@ -600,7 +601,7 @@ void CUI::DoLabel(const CUIRect *r, const char *pText, float Size, int Align, fl\n \t\tif(pHighlight && pHighlight[0] != '\\0')\n \t\t{\n \t\t\tCTextCursor Cursor;\n-\t\t\tTextRender()->SetCursor(&Cursor, r->x + r->w-tw, r->y - Size/10, Size, TEXTFLAG_RENDER|TEXTFLAG_STOP_AT_END);\n+\t\t\tTextRender()->SetCursor(&Cursor, r->x + r->w-tw, r->y - Size/10, Size, TEXTFLAG_RENDER|TEXTFLAG_STOP_AT_END, pFont);\n \t\t\tCursor.m_LineWidth = r->w;\n \t\t\tconst char *pStr = str_find_nocase(pText, pHighlight);\n \t\t\tif(pStr)\n@@ -615,11 +616,21 @@ void CUI::DoLabel(const CUIRect *r, const char *pText, float Size, int Align, fl\n \t\t\t\tTextRender()->TextEx(&Cursor, pText, -1);\n \t\t}\n \t\telse\n-\t\t\tTextRender()->Text(0, r->x + r->w-tw, r->y - Size/10, Size, pText, MaxWidth);\n+\t\t\tTextRender()->Text(pFont, r->x + r->w-tw, r->y - Size/10, Size, pText, MaxWidth);\n \t}\n }\n \n-void CUI::DoLabelScaled(const CUIRect *r, const char *pText, float Size, int Align, float MaxWidth, const char *pHighlight)\n+void CUI::DoLabelScaled(const CUIRect *r, const char *pText, float Size, int Align, float MaxWidth, const char *pHighlight, CFont *pFont)\n {\n-\tDoLabel(r, pText, Size*Scale(), Align, MaxWidth, pHighlight);\n+\tDoLabel(r, pText, Size*Scale(), Align, MaxWidth, pHighlight, pFont);\n+}\n+\n+void CUI::DoLabelLua(const CUIRect *pRect, const char *pText, float Size, int Align, float MaxWidth, const char *pHighlight, int FontFace)\n+{\n+\tDoLabel(pRect, pText, Size, Align, MaxWidth, pHighlight, CLua::m_pCGameClient->m_pFontMgrBasic->GetFont(FontFace));\n+}\n+\n+void CUI::DoLabelScaledLua(const CUIRect *pRect, const char *pText, float Size, int Align, float MaxWidth, const char *pHighlight, int FontFace)\n+{\n+\tDoLabelScaled(pRect, pText, Size, Align, MaxWidth, pHighlight, CLua::m_pCGameClient->m_pFontMgrBasic->GetFont(FontFace));\n }"
    },
    {
      "sha": "10946a29644ec921ca85fab686b7b6caa35c6a8f",
      "filename": "src/game/client/ui.h",
      "status": "modified",
      "additions": 4,
      "deletions": 2,
      "changes": 6,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/ui.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/client/ui.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/client/ui.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -101,8 +101,10 @@ class CUI\n \tint DoPickerLogic(const void *pID, const CUIRect *pRect, float *pX, float *pY);\n \n \t// TODO: Refactor: Remove this?\n-\tvoid DoLabel(const CUIRect *pRect, const char *pText, float Size, int Align, float MaxWidth = -1.0f, const char *pHighlight = 0);\n-\tvoid DoLabelScaled(const CUIRect *pRect, const char *pText, float Size, int Align, float MaxWidth = -1.0f, const char *pHighlight = 0);\n+\tvoid DoLabel(const CUIRect *pRect, const char *pText, float Size, int Align, float MaxWidth = -1.0f, const char *pHighlight = 0, class CFont *pFont = 0);\n+\tvoid DoLabelScaled(const CUIRect *pRect, const char *pText, float Size, int Align, float MaxWidth = -1.0f, const char *pHighlight = 0, class CFont *pFont = 0);\n+\tvoid DoLabelLua(const CUIRect *pRect, const char *pText, float Size, int Align, float MaxWidth = -1.0f, const char *pHighlight = 0, int FontFace = 0);\n+\tvoid DoLabelScaledLua(const CUIRect *pRect, const char *pText, float Size, int Align, float MaxWidth = -1.0f, const char *pHighlight = 0, int FontFace = 0);\n \n \tvoid AndroidShowScreenKeys(bool shown);\n \tvoid AndroidShowTextInput(const char *text, const char *hintText);"
    },
    {
      "sha": "bf99e100b8e2fd8e2bbec4797e374d8612a54809",
      "filename": "src/game/server/ddracechat.cpp",
      "status": "modified",
      "additions": 57,
      "deletions": 73,
      "changes": 130,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/server/ddracechat.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/server/ddracechat.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/server/ddracechat.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -244,69 +244,25 @@ void CGameContext::ConRules(IConsole::IResult *pResult, void *pUserData)\n \t\t\t\t\"Be nice.\");\n \t\tPrinted = true;\n \t}\n-\tif (g_Config.m_SvRulesLine1[0])\n+\t#define _RL(n) g_Config.m_SvRulesLine ## n\n+\tchar *pRuleLines[] = {\n+\t\t_RL(1), _RL(2), _RL(3), _RL(4), _RL(5),\n+\t\t_RL(6), _RL(7), _RL(8), _RL(9), _RL(10),\n+\t};\n+\tfor(unsigned i = 0; i < sizeof(pRuleLines) / sizeof(pRuleLines[0]); i++)\n \t{\n-\t\tpSelf->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"rules\",\n-\t\t\t\tg_Config.m_SvRulesLine1);\n-\t\tPrinted = true;\n-\t}\n-\tif (g_Config.m_SvRulesLine2[0])\n-\t{\n-\t\tpSelf->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"rules\",\n-\t\t\t\tg_Config.m_SvRulesLine2);\n-\t\tPrinted = true;\n-\t}\n-\tif (g_Config.m_SvRulesLine3[0])\n-\t{\n-\t\tpSelf->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"rules\",\n-\t\t\t\tg_Config.m_SvRulesLine3);\n-\t\tPrinted = true;\n-\t}\n-\tif (g_Config.m_SvRulesLine4[0])\n-\t{\n-\t\tpSelf->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"rules\",\n-\t\t\t\tg_Config.m_SvRulesLine4);\n-\t\tPrinted = true;\n-\t}\n-\tif (g_Config.m_SvRulesLine5[0])\n-\t{\n-\t\tpSelf->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"rules\",\n-\t\t\t\tg_Config.m_SvRulesLine5);\n-\t\tPrinted = true;\n-\t}\n-\tif (g_Config.m_SvRulesLine6[0])\n-\t{\n-\t\tpSelf->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"rules\",\n-\t\t\t\tg_Config.m_SvRulesLine6);\n-\t\tPrinted = true;\n-\t}\n-\tif (g_Config.m_SvRulesLine7[0])\n-\t{\n-\t\tpSelf->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"rules\",\n-\t\t\t\tg_Config.m_SvRulesLine7);\n-\t\tPrinted = true;\n-\t}\n-\tif (g_Config.m_SvRulesLine8[0])\n-\t{\n-\t\tpSelf->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"rules\",\n-\t\t\t\tg_Config.m_SvRulesLine8);\n-\t\tPrinted = true;\n-\t}\n-\tif (g_Config.m_SvRulesLine9[0])\n-\t{\n-\t\tpSelf->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"rules\",\n-\t\t\t\tg_Config.m_SvRulesLine9);\n-\t\tPrinted = true;\n-\t}\n-\tif (g_Config.m_SvRulesLine10[0])\n-\t{\n-\t\tpSelf->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"rules\",\n-\t\t\t\tg_Config.m_SvRulesLine10);\n-\t\tPrinted = true;\n+\t\tif(pRuleLines[i][0])\n+\t\t{\n+\t\t\tpSelf->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD,\n+\t\t\t\t\"rules\", pRuleLines[i]);\n+\t\t\tPrinted = true;\n+\t\t}\n \t}\n \tif (!Printed)\n+\t{\n \t\tpSelf->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"rules\",\n \t\t\t\t\"No Rules Defined, Kill em all!!\");\n+\t}\n }\n \n void CGameContext::ConToggleSpec(IConsole::IResult *pResult, void *pUserData)\n@@ -1225,32 +1181,60 @@ void CGameContext::ConSetTimerType(IConsole::IResult *pResult, void *pUserData)\n \n \tconst char msg[3][128] = {\"game/round timer.\", \"broadcast.\", \"both game/round timer and broadcast.\"};\n \tchar aBuf[128];\n-\tif(pPlayer->m_TimerType <= 2 && pPlayer->m_TimerType >= 0)\n-\t\tstr_format(aBuf, sizeof(aBuf), \"Timer is displayed in\", msg[pPlayer->m_TimerType]);\n-\telse if(pPlayer->m_TimerType == 3)\n+\tif(pPlayer->m_TimerType <= CPlayer::TIMERTYPE_GAMETIMER_AND_BROADCAST && pPlayer->m_TimerType >= CPlayer::TIMERTYPE_GAMETIMER)\n+\t\tstr_format(aBuf, sizeof(aBuf), \"Timer is displayed in %s\", msg[pPlayer->m_TimerType]);\n+\telse if(pPlayer->m_TimerType == CPlayer::TIMERTYPE_NONE)\n \t\tstr_format(aBuf, sizeof(aBuf), \"Timer isn't displayed.\");\n \n+\tint OldType = pPlayer->m_TimerType;\n+\n \tif(pResult->NumArguments() == 0) {\n \t\tpSelf->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD,\"timer\",aBuf);\n \t\treturn;\n \t}\n-\telse if(str_comp_nocase(pResult->GetString(0), \"gametimer\") == 0) {\n-\t\tpSelf->SendBroadcast(\"\", pResult->m_ClientID);\n-\t\tpPlayer->m_TimerType = 0;\n+\telse if(str_comp_nocase(pResult->GetString(0), \"gametimer\") == 0)\n+\t{\n+\t\tif(pPlayer->m_ClientVersion >= VERSION_DDNET_GAMETICK)\n+\t\t\tpPlayer->m_TimerType = CPlayer::TIMERTYPE_GAMETIMER;\n+\t\telse\n+\t\t\tpSelf->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"timer\", \"gametimer is not supported by your client.\");\n \t}\n \telse if(str_comp_nocase(pResult->GetString(0), \"broadcast\") == 0)\n-\t\t\tpPlayer->m_TimerType = 1;\n+\t\tpPlayer->m_TimerType = CPlayer::TIMERTYPE_BROADCAST;\n \telse if(str_comp_nocase(pResult->GetString(0), \"both\") == 0)\n-\t\t\tpPlayer->m_TimerType = 2;\n+\t{\n+\t\tif(pPlayer->m_ClientVersion >= VERSION_DDNET_GAMETICK)\n+\t\t\tpPlayer->m_TimerType = CPlayer::TIMERTYPE_GAMETIMER_AND_BROADCAST;\n+\t\telse\n+\t\t{\n+\t\t\tpPlayer->m_TimerType = CPlayer::TIMERTYPE_BROADCAST;\n+\t\t\tpSelf->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"timer\", \"gametimer is not supported by your client.\");\n+\t\t}\n+\t}\n \telse if(str_comp_nocase(pResult->GetString(0), \"none\") == 0)\n-\t\t\tpPlayer->m_TimerType = 3;\n-\telse if(str_comp_nocase(pResult->GetString(0), \"cycle\") == 0) {\n-\t\tif(pPlayer->m_TimerType < 3)\n-\t\t\tpPlayer->m_TimerType++;\n-\t\telse if(pPlayer->m_TimerType == 3)\n-\t\t\tpPlayer->m_TimerType = 0;\n+\t\tpPlayer->m_TimerType = CPlayer::TIMERTYPE_NONE;\n+\telse if(str_comp_nocase(pResult->GetString(0), \"cycle\") == 0)\n+\t{\n+\t\tif(pPlayer->m_ClientVersion >= VERSION_DDNET_GAMETICK)\n+\t\t{\n+\t\t\tif(pPlayer->m_TimerType < CPlayer::TIMERTYPE_NONE)\n+\t\t\t\tpPlayer->m_TimerType++;\n+\t\t\telse if(pPlayer->m_TimerType == CPlayer::TIMERTYPE_NONE)\n+\t\t\t\tpPlayer->m_TimerType = CPlayer::TIMERTYPE_GAMETIMER;\n+\t\t}\n+\t\telse\n+\t\t{\n+\t\t\tif(pPlayer->m_TimerType < CPlayer::TIMERTYPE_NONE)\n+\t\t\t\tpPlayer->m_TimerType = CPlayer::TIMERTYPE_NONE;\n+\t\t\telse if(pPlayer->m_TimerType == CPlayer::TIMERTYPE_NONE)\n+\t\t\t\tpPlayer->m_TimerType = CPlayer::TIMERTYPE_BROADCAST;\n+\t\t}\n \t}\n-\tpSelf->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD,\"timer\",aBuf);\n+\t\n+\tif((OldType == CPlayer::TIMERTYPE_BROADCAST || OldType == CPlayer::TIMERTYPE_GAMETIMER_AND_BROADCAST) && (pPlayer->m_TimerType == CPlayer::TIMERTYPE_GAMETIMER || pPlayer->m_TimerType == CPlayer::TIMERTYPE_NONE))\n+\t\tpSelf->SendBroadcast(\"\", pResult->m_ClientID);\n+\t\n+\tpSelf->Console()->Print(IConsole::OUTPUT_LEVEL_STANDARD, \"timer\", aBuf);\n }\n \n void CGameContext::ConRescue(IConsole::IResult *pResult, void *pUserData)"
    },
    {
      "sha": "a69500b8195e9c43b723ddc538b7742c1a6955a6",
      "filename": "src/game/server/entities/character.cpp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/server/entities/character.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/server/entities/character.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/server/entities/character.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -1211,7 +1211,7 @@ void CCharacter::HandleBroadcast()\n \t\tm_CpLastBroadcast = m_CpActive;\n \t\tm_LastBroadcast = Server()->Tick();\n \t}\n-\telse if ((m_pPlayer->m_TimerType == 1 || m_pPlayer->m_TimerType == 2) && m_DDRaceState == DDRACE_STARTED && m_LastBroadcast + Server()->TickSpeed() * g_Config.m_SvTimeInBroadcastInterval <= Server()->Tick())\n+\telse if ((m_pPlayer->m_TimerType == CPlayer::TIMERTYPE_BROADCAST || m_pPlayer->m_TimerType == CPlayer::TIMERTYPE_GAMETIMER_AND_BROADCAST) && m_DDRaceState == DDRACE_STARTED && m_LastBroadcast + Server()->TickSpeed() * g_Config.m_SvTimeInBroadcastInterval <= Server()->Tick())\n \t{\n \t\tchar aBuftime[64];\n \t\tint IntTime = (int)((float)(Server()->Tick() - m_StartTime) / ((float)Server()->TickSpeed()));"
    },
    {
      "sha": "79e7b745e7582fed30e046157b1ec019a6b95a1f",
      "filename": "src/game/server/gamecontext.cpp",
      "status": "modified",
      "additions": 4,
      "deletions": 1,
      "changes": 5,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/server/gamecontext.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/server/gamecontext.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/server/gamecontext.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -1504,7 +1504,10 @@ void CGameContext::OnMessage(int MsgID, CUnpacker *pUnpacker, int ClientID)\n \t\t\t}\n \t\t\telse if(pPlayer->m_ClientVersion < Version)\n \t\t\t\tpPlayer->m_ClientVersion = Version;\n-\n+\t\t\t\n+\t\t\tif(pPlayer->m_ClientVersion >= VERSION_DDNET_GAMETICK)\n+\t\t\t\tpPlayer->m_TimerType = g_Config.m_SvDefaultTimerType;\n+\t\t\t\n \t\t\tdbg_msg(\"ddnet\", \"%d using Custom Client %d\", ClientID, pPlayer->m_ClientVersion);\n \n \t\t\t//first update his teams state"
    },
    {
      "sha": "a28ae196ce72f56f247b1aeae99ea8266a4dd612",
      "filename": "src/game/server/gamecontroller.cpp",
      "status": "modified",
      "additions": 9,
      "deletions": 5,
      "changes": 14,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/server/gamecontroller.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/server/gamecontroller.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/server/gamecontroller.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -770,18 +770,22 @@ void IGameController::Snap(int SnappingClient)\n \tCPlayer *pPlayer = SnappingClient > -1 ? GameServer()->m_apPlayers[SnappingClient] : 0;\n \tCPlayer *pPlayer2;\n \n-\tif(pPlayer && (pPlayer->m_TimerType == 0 || pPlayer->m_TimerType == 2))\n+\tif(pPlayer && (pPlayer->m_TimerType == CPlayer::TIMERTYPE_GAMETIMER || pPlayer->m_TimerType == CPlayer::TIMERTYPE_GAMETIMER_AND_BROADCAST) && pPlayer->m_ClientVersion >= VERSION_DDNET_GAMETICK)\n \t{\n \t\tif((pPlayer->GetTeam() == -1 || pPlayer->m_Paused)\n \t\t\t&& pPlayer->m_SpectatorID != SPEC_FREEVIEW\n \t\t\t&& (pPlayer2 = GameServer()->m_apPlayers[pPlayer->m_SpectatorID]))\n \t\t{\n-\t\t\tif((pChr = pPlayer2->GetCharacter()))\n-\t\t\t\tpGameInfoObj->m_RoundStartTick = (pChr->m_DDRaceState == DDRACE_STARTED)?pChr->m_StartTime:m_RoundStartTick;\n+\t\t\tif((pChr = pPlayer2->GetCharacter()) && pChr->m_DDRaceState == DDRACE_STARTED)\n+\t\t\t{\n+\t\t\t\tpGameInfoObj->m_WarmupTimer = -pChr->m_StartTime;\n+\t\t\t\tpGameInfoObj->m_GameStateFlags |= GAMESTATEFLAG_RACETIME;\n+\t\t\t}\n \t\t}\n-\t\telse if((pChr = pPlayer->GetCharacter()))\n+\t\telse if((pChr = pPlayer->GetCharacter()) && pChr->m_DDRaceState == DDRACE_STARTED)\n \t\t{\n-\t\t\tpGameInfoObj->m_RoundStartTick = (pChr->m_DDRaceState == DDRACE_STARTED)?pChr->m_StartTime:m_RoundStartTick;\n+\t\t\tpGameInfoObj->m_WarmupTimer = -pChr->m_StartTime;\n+\t\t\tpGameInfoObj->m_GameStateFlags |= GAMESTATEFLAG_RACETIME;\n \t\t}\n \t}\n }"
    },
    {
      "sha": "e31f54ab17f838dfde31d499a6ccc5c91b54e28a",
      "filename": "src/game/server/player.cpp",
      "status": "modified",
      "additions": 1,
      "deletions": 1,
      "changes": 2,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/server/player.cpp",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/server/player.cpp",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/server/player.cpp?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -64,7 +64,7 @@ void CPlayer::Reset()\n \tm_Sent2ndAfkWarning = 0;\n \tm_ChatScore = 0;\n \tm_EyeEmote = true;\n-\tm_TimerType = g_Config.m_SvDefaultTimerType;\n+\tm_TimerType = (g_Config.m_SvDefaultTimerType == CPlayer::TIMERTYPE_GAMETIMER || g_Config.m_SvDefaultTimerType == CPlayer::TIMERTYPE_GAMETIMER_AND_BROADCAST) ? CPlayer::TIMERTYPE_BROADCAST : g_Config.m_SvDefaultTimerType;\n \tm_DefEmote = EMOTE_NORMAL;\n \tm_Afk = false;\n \tm_LastWhisperTo = -1;"
    },
    {
      "sha": "a7cdef4d8f0ee3d6e90aa63b77c2ae80c1d24d3e",
      "filename": "src/game/server/player.h",
      "status": "modified",
      "additions": 8,
      "deletions": 0,
      "changes": 8,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/server/player.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/server/player.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/server/player.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -138,6 +138,14 @@ class CPlayer\n \t\tPAUSED_PAUSED,\n \t\tPAUSED_FORCE\n \t};\n+\t\n+\tenum\n+\t{\n+\t\tTIMERTYPE_GAMETIMER=0,\n+\t\tTIMERTYPE_BROADCAST,\n+\t\tTIMERTYPE_GAMETIMER_AND_BROADCAST,\n+\t\tTIMERTYPE_NONE,\n+\t};\n \n \tint m_Paused;\n \tbool m_DND;"
    },
    {
      "sha": "5ec36b4a71d88e961577fdbbc1f6d1839f5c17c5",
      "filename": "src/game/variables.h",
      "status": "modified",
      "additions": 8,
      "deletions": 4,
      "changes": 12,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/variables.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/variables.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/variables.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -29,6 +29,7 @@ MACRO_CONFIG_INT(ClNameplatesClan, cl_nameplates_clan, 1, 0, 1, CFGFLAG_CLIENT|C\n MACRO_CONFIG_INT(ClNameplatesClanSize, cl_nameplates_clan_size, 30, 0, 100, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Size of the clan plates from 0 to 100%\")\n MACRO_CONFIG_INT(ClNameplatesClancolors, cl_nameplates_clancolors, 1, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Highlight your clan\")\n MACRO_CONFIG_INT(ClNamePlatesScore, cl_nameplates_score, 1, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Show score in name plates\")\n+MACRO_CONFIG_INT(ClNamePlatesBroadcastATH, cl_nameplates_ath_broadcast, 1, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Show others that you use this client (only effective with no lua scripts enabled\")\n MACRO_CONFIG_INT(ClNamePlatesATH, cl_nameplates_ath, 1, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Show who uses this client.\")\n MACRO_CONFIG_INT(ClNamePlatesATHBlinkTime, cl_nameplates_ath_blinktime, 90, 0, 200, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"How fast the ATH sign blinks (in percent)\")\n MACRO_CONFIG_INT(ClTextEntities, cl_text_entities, 1, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Render textual entity data\")\n@@ -57,7 +58,7 @@ MACRO_CONFIG_INT(ClEyeWheel, cl_eye_wheel, 1, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE,\n MACRO_CONFIG_INT(ClEyeDuration, cl_eye_duration, 999999, 1, 999999, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"How long the eyes emotes last\")\n \n MACRO_CONFIG_INT(ClAirjumpindicator, cl_airjumpindicator, 1, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"\")\n-//MACRO_CONFIG_INT(ClThreadsoundloading, cl_threadsoundloading, 0, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Load sound files threaded\")\n+MACRO_CONFIG_INT(ClThreadsoundloading, cl_threaded_soundloading, 1, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Load sound files threaded to speed up client start\")\n \n MACRO_CONFIG_INT(ClWarningTeambalance, cl_warning_teambalance, 1, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Warn about team balance\")\n \n@@ -173,6 +174,7 @@ MACRO_CONFIG_INT(ClSmartZoom, cl_smart_zoom, 0, 0, 2, CFGFLAG_CLIENT|CFGFLAG_SAV\n MACRO_CONFIG_INT(ClSmartZoomVal, cl_smart_zoom_val, 100, 0, 1000, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Percentage to multiply the base zooming intensity with\")\n MACRO_CONFIG_INT(ClCinematicCamera, cl_cinematic_camera, 1, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Smooth spectator cam movement\")\n MACRO_CONFIG_INT(ClCinematicCameraDelay, cl_cinematic_camera_delay, 25, 0, 250, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"How long it should take for the cinematic camera to move\")\n+MACRO_CONFIG_INT(ClSmoothChat, cl_smooth_chat, 1, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Smooth chat animation\")\n MACRO_CONFIG_INT(ClSmoothEmoteWheel, cl_smooth_emotewheel, 1, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Smooth emote wheel animation\")\n MACRO_CONFIG_INT(ClSmoothEmoteWheelDelay, cl_smooth_emotewheel_delay, 40, 1, 1000, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"How long the smooth emote wheel animation should take\")\n MACRO_CONFIG_INT(ClConsoleModeEmotes, cl_console_mode_emotes, 0, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Send \\\"Zzz\\\" emotes while being in console mode\")\n@@ -181,8 +183,9 @@ MACRO_CONFIG_INT(ClSendHookline, cl_send_hookline, 1, 0, 1, CFGFLAG_CLIENT|CFGFL\n MACRO_CONFIG_STR(ClSkinDbFile, cl_skin_db_file, 128, \"data/skins/urls.cfg\", CFGFLAG_CLIENT|CFGFLAG_SAVE, \"File which holds the skin database urls\")\n MACRO_CONFIG_INT(ClSkinFetcher, cl_skin_fetcher, 1, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"[EXPERIMENTAL] Fetch skins from public skin databases automatically as they are needed  (→ see cl_skin_db_file)\")\n MACRO_CONFIG_INT(ClChatbubble, cl_chatbubble, 1, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Notifiy others that you are typing\")\n-MACRO_CONFIG_STR(FtFont, ft_font, 128, \"fonts/DejaVuSansCJKName.ttf\", CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Font to use\")\n-MACRO_CONFIG_INT(FtPreloadFonts, ft_preload_fonts, 1, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Load all fonts in 'data/fonts/' into memory on client start (enables font-preview!)\")\n+MACRO_CONFIG_STR(FtFont, ft_font_pack, 128, \"DejaVuSansCJKName\", CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Font to use\")\n+MACRO_CONFIG_STR(FtMonoFont, ft_mono_font_pack, 128, \"UbuntuMono\", CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Monospace font to use\")\n+MACRO_CONFIG_INT(ClMonoFontSize, cl_monofont_size, 10, 6, 16, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Font size in Console and IRC\")\n MACRO_CONFIG_INT(ClConsoleLowCPU, cl_console_low_cpu, 1, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Limits FPS while console is open in order to lower our CPU usage\")\n \n // irc\n@@ -206,11 +209,12 @@ MACRO_CONFIG_INT(ClLua, cl_lua, 1, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"THIS VERS\n #endif\n MACRO_CONFIG_INT(ClPrintStartup, cl_print_startup, 0, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Print the client startup to console\") // TODO: DO!\n //\n-MACRO_CONFIG_INT(TexLazyLoading, tex_lazy_loading, 1, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Wait with loading the actual textures until they're needed\")\n+MACRO_CONFIG_INT(TexLazyLoading, tex_lazy_loading, 1, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Don't load gametextures until needed (WARNING: enabling this takes up a HUGE amount of ram!!)\")\n MACRO_CONFIG_STR(TexGame, tex_game, 128, \"!default\", CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Gameskin texture\")\n MACRO_CONFIG_STR(TexParticles, tex_particles, 128, \"!default\", CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Particle texture\")\n MACRO_CONFIG_STR(TexEmoticons, tex_emoticon, 128, \"!default\", CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Emoticons texture\")\n MACRO_CONFIG_STR(TexCursor, tex_cursor, 128, \"!default\", CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Cursor texture\")\n+MACRO_CONFIG_STR(TexEntities, tex_entities, 128, \"!default\", CFGFLAG_CLIENT|CFGFLAG_SAVE, \"X-Ray entities\")\n \n // translator stuff\n MACRO_CONFIG_INT(ClTransIn, cl_trans_in, 0, 0, 1, CFGFLAG_CLIENT|CFGFLAG_SAVE, \"Translate incoming messages\")"
    },
    {
      "sha": "a8d0c8ca3b728625f89bfc1595b9103dbeb1626a",
      "filename": "src/game/version.h",
      "status": "modified",
      "additions": 2,
      "deletions": 2,
      "changes": 4,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/version.h",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/7507f7db489a0049e9e216c707c5e68cc68c8776/src/game/version.h",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/src/game/version.h?ref=7507f7db489a0049e9e216c707c5e68cc68c8776",
      "patch": "@@ -6,7 +6,7 @@\n \n #define GAME_VERSION \"0.6.3\"\n #define ATH_VERSION \"0.29\"\n-#define DDNET_VERSION \"10.3.5\"\n+#define DDNET_VERSION \"10.4.1\"\n #define BUILD_DATE __DATE__ \", \" __TIME__\n \n #ifdef GIT_SHORTREV_HASH\n@@ -23,6 +23,6 @@ static const char GAME_ATH_VERSION[10] = ATH_VERSION;\n \n // do not modify these, they belong to ddnet\n static const char GAME_RELEASE_VERSION[8] = DDNET_VERSION;\n-#define CLIENT_VERSIONNR 10035\n+#define CLIENT_VERSIONNR 10041\n \n #endif"
    },
    {
      "sha": "15f4ab18d6ca959e29b604ef5b04b4bb4461492c",
      "filename": "storage.cfg",
      "status": "removed",
      "additions": 0,
      "deletions": 31,
      "changes": 31,
      "blob_url": "https://github.com/AllTheHaxx/AllTheHaxx/blob/a26a883e6bfcd9bac39281065bbf7cad4c1a0155/storage.cfg",
      "raw_url": "https://github.com/AllTheHaxx/AllTheHaxx/raw/a26a883e6bfcd9bac39281065bbf7cad4c1a0155/storage.cfg",
      "contents_url": "https://api.github.com/repos/AllTheHaxx/AllTheHaxx/contents/storage.cfg?ref=a26a883e6bfcd9bac39281065bbf7cad4c1a0155",
      "patch": "@@ -1,31 +0,0 @@\n-####\n-# This specifies where and in which order Teeworlds looks\n-# for its data (sounds, skins, ...). The search goes top\n-# down which means the first path has the highest priority.\n-# Furthermore the top entry also defines the save path where\n-# all data (settings.cfg, screenshots, ...) are stored.\n-# There are 3 special paths available:\n-#\t$USERDIR\n-#\t- ~/.appname on UNIX based systems\n-#\t- ~/Library/Applications Support/appname on Mac OS X\n-#\t- %APPDATA%/Appname on Windows based systems\n-#\t$DATADIR\n-#\t- the 'data' directory which is part of an official\n-#\trelease\n-#\t$CURRENTDIR\n-#\t- current working directory\n-#\n-#\n-# The default file has the following entries:\n-#\tadd_path $USERDIR\n-#\tadd_path $DATADIR\n-#\tadd_path $CURRENTDIR\n-#\n-# A customised one could look like this:\n-#\tadd_path user\n-#\tadd_path mods/mymod\n-####\n-\n-add_path $USERDIR\n-add_path $DATADIR\n-add_path $CURRENTDIR"
    }
  ]
}
